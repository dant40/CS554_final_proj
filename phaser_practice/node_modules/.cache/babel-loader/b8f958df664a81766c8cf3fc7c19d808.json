{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Utils = require('../../../renderer/webgl/Utils');\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\n\n\nvar TextWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\n  if (src.width === 0 || src.height === 0) {\n    return;\n  }\n\n  var frame = src.frame;\n  var width = frame.width;\n  var height = frame.height;\n  var getTint = Utils.getTintAppendFloatAlpha;\n  this.pipeline.batchTexture(src, frame.glTexture, width, height, src.x, src.y, width / src.style.resolution, height / src.style.resolution, src.scaleX, src.scaleY, src.rotation, src.flipX, src.flipY, src.scrollFactorX, src.scrollFactorY, src.displayOriginX, src.displayOriginY, 0, 0, width, height, getTint(src._tintTL, camera.alpha * src._alphaTL), getTint(src._tintTR, camera.alpha * src._alphaTR), getTint(src._tintBL, camera.alpha * src._alphaBL), getTint(src._tintBR, camera.alpha * src._alphaBR), src._isTinted && src.tintFill, 0, 0, camera, parentMatrix);\n};\n\nmodule.exports = TextWebGLRenderer;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/text/static/TextWebGLRenderer.js"],"names":["Utils","require","TextWebGLRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","width","height","frame","getTint","getTintAppendFloatAlpha","pipeline","batchTexture","glTexture","x","y","style","resolution","scaleX","scaleY","rotation","flipX","flipY","scrollFactorX","scrollFactorY","displayOriginX","displayOriginY","_tintTL","alpha","_alphaTL","_tintTR","_alphaTR","_tintBL","_alphaBL","_tintBR","_alphaBR","_isTinted","tintFill","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,+BAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;;AAeA,IAAIC,iBAAiB,GAAG,UAAUC,QAAV,EAAoBC,GAApB,EAAyBC,uBAAzB,EAAkDC,MAAlD,EAA0DC,YAA1D,EACxB;AACI,MAAKH,GAAG,CAACI,KAAJ,KAAc,CAAf,IAAsBJ,GAAG,CAACK,MAAJ,KAAe,CAAzC,EACA;AACI;AACH;;AAED,MAAIC,KAAK,GAAGN,GAAG,CAACM,KAAhB;AACA,MAAIF,KAAK,GAAGE,KAAK,CAACF,KAAlB;AACA,MAAIC,MAAM,GAAGC,KAAK,CAACD,MAAnB;AACA,MAAIE,OAAO,GAAGX,KAAK,CAACY,uBAApB;AAEA,OAAKC,QAAL,CAAcC,YAAd,CACIV,GADJ,EAEIM,KAAK,CAACK,SAFV,EAGIP,KAHJ,EAGWC,MAHX,EAIIL,GAAG,CAACY,CAJR,EAIWZ,GAAG,CAACa,CAJf,EAKIT,KAAK,GAAGJ,GAAG,CAACc,KAAJ,CAAUC,UALtB,EAKkCV,MAAM,GAAGL,GAAG,CAACc,KAAJ,CAAUC,UALrD,EAMIf,GAAG,CAACgB,MANR,EAMgBhB,GAAG,CAACiB,MANpB,EAOIjB,GAAG,CAACkB,QAPR,EAQIlB,GAAG,CAACmB,KARR,EAQenB,GAAG,CAACoB,KARnB,EASIpB,GAAG,CAACqB,aATR,EASuBrB,GAAG,CAACsB,aAT3B,EAUItB,GAAG,CAACuB,cAVR,EAUwBvB,GAAG,CAACwB,cAV5B,EAWI,CAXJ,EAWO,CAXP,EAWUpB,KAXV,EAWiBC,MAXjB,EAYIE,OAAO,CAACP,GAAG,CAACyB,OAAL,EAAcvB,MAAM,CAACwB,KAAP,GAAe1B,GAAG,CAAC2B,QAAjC,CAZX,EAaIpB,OAAO,CAACP,GAAG,CAAC4B,OAAL,EAAc1B,MAAM,CAACwB,KAAP,GAAe1B,GAAG,CAAC6B,QAAjC,CAbX,EAcItB,OAAO,CAACP,GAAG,CAAC8B,OAAL,EAAc5B,MAAM,CAACwB,KAAP,GAAe1B,GAAG,CAAC+B,QAAjC,CAdX,EAeIxB,OAAO,CAACP,GAAG,CAACgC,OAAL,EAAc9B,MAAM,CAACwB,KAAP,GAAe1B,GAAG,CAACiC,QAAjC,CAfX,EAgBKjC,GAAG,CAACkC,SAAJ,IAAiBlC,GAAG,CAACmC,QAhB1B,EAiBI,CAjBJ,EAiBO,CAjBP,EAkBIjC,MAlBJ,EAmBIC,YAnBJ;AAqBH,CAjCD;;AAmCAiC,MAAM,CAACC,OAAP,GAAiBvC,iBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Utils = require('../../../renderer/webgl/Utils');\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    if ((src.width === 0) || (src.height === 0))\r\n    {\r\n        return;\r\n    }\r\n\r\n    var frame = src.frame;\r\n    var width = frame.width;\r\n    var height = frame.height;\r\n    var getTint = Utils.getTintAppendFloatAlpha;\r\n\r\n    this.pipeline.batchTexture(\r\n        src,\r\n        frame.glTexture,\r\n        width, height,\r\n        src.x, src.y,\r\n        width / src.style.resolution, height / src.style.resolution,\r\n        src.scaleX, src.scaleY,\r\n        src.rotation,\r\n        src.flipX, src.flipY,\r\n        src.scrollFactorX, src.scrollFactorY,\r\n        src.displayOriginX, src.displayOriginY,\r\n        0, 0, width, height,\r\n        getTint(src._tintTL, camera.alpha * src._alphaTL),\r\n        getTint(src._tintTR, camera.alpha * src._alphaTR),\r\n        getTint(src._tintBL, camera.alpha * src._alphaBL),\r\n        getTint(src._tintBR, camera.alpha * src._alphaBR),\r\n        (src._isTinted && src.tintFill),\r\n        0, 0,\r\n        camera,\r\n        parentMatrix\r\n    );\r\n};\r\n\r\nmodule.exports = TextWebGLRenderer;\r\n"]},"metadata":{},"sourceType":"script"}