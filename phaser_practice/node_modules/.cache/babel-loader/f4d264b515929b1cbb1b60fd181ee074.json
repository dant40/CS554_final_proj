{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar BuildGameObject = require('../BuildGameObject');\n\nvar GameObjectCreator = require('../GameObjectCreator');\n\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\n\nvar GetValue = require('../../utils/object/GetValue');\n\nvar Mesh = require('./Mesh');\n/**\r\n * Creates a new Mesh Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Mesh Game Object and WebGL support have been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#mesh\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Mesh} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('mesh', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  }\n\n  var key = GetAdvancedValue(config, 'key', null);\n  var frame = GetAdvancedValue(config, 'frame', null);\n  var vertices = GetValue(config, 'vertices', []);\n  var colors = GetValue(config, 'colors', []);\n  var alphas = GetValue(config, 'alphas', []);\n  var uv = GetValue(config, 'uv', []);\n  var mesh = new Mesh(this.scene, 0, 0, vertices, uv, colors, alphas, key, frame);\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  BuildGameObject(this.scene, mesh, config);\n  return mesh;\n}); //  When registering a factory function 'this' refers to the GameObjectCreator context.","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/mesh/MeshCreator.js"],"names":["BuildGameObject","require","GameObjectCreator","GetAdvancedValue","GetValue","Mesh","register","config","addToScene","undefined","key","frame","vertices","colors","alphas","uv","mesh","scene","add"],"mappings":"AAAA;;;;;AAMA,IAAIA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAA7B;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,sBAAD,CAA/B;;AACA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,qCAAD,CAA9B;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,6BAAD,CAAtB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,QAAD,CAAlB;AAEA;;;;;;;;;;;;;;;AAaAC,iBAAiB,CAACI,QAAlB,CAA2B,MAA3B,EAAmC,UAAUC,MAAV,EAAkBC,UAAlB,EACnC;AACI,MAAID,MAAM,KAAKE,SAAf,EAA0B;AAAEF,IAAAA,MAAM,GAAG,EAAT;AAAc;;AAE1C,MAAIG,GAAG,GAAGP,gBAAgB,CAACI,MAAD,EAAS,KAAT,EAAgB,IAAhB,CAA1B;AACA,MAAII,KAAK,GAAGR,gBAAgB,CAACI,MAAD,EAAS,OAAT,EAAkB,IAAlB,CAA5B;AACA,MAAIK,QAAQ,GAAGR,QAAQ,CAACG,MAAD,EAAS,UAAT,EAAqB,EAArB,CAAvB;AACA,MAAIM,MAAM,GAAGT,QAAQ,CAACG,MAAD,EAAS,QAAT,EAAmB,EAAnB,CAArB;AACA,MAAIO,MAAM,GAAGV,QAAQ,CAACG,MAAD,EAAS,QAAT,EAAmB,EAAnB,CAArB;AACA,MAAIQ,EAAE,GAAGX,QAAQ,CAACG,MAAD,EAAS,IAAT,EAAe,EAAf,CAAjB;AAEA,MAAIS,IAAI,GAAG,IAAIX,IAAJ,CAAS,KAAKY,KAAd,EAAqB,CAArB,EAAwB,CAAxB,EAA2BL,QAA3B,EAAqCG,EAArC,EAAyCF,MAAzC,EAAiDC,MAAjD,EAAyDJ,GAAzD,EAA8DC,KAA9D,CAAX;;AAEA,MAAIH,UAAU,KAAKC,SAAnB,EACA;AACIF,IAAAA,MAAM,CAACW,GAAP,GAAaV,UAAb;AACH;;AAEDR,EAAAA,eAAe,CAAC,KAAKiB,KAAN,EAAaD,IAAb,EAAmBT,MAAnB,CAAf;AAEA,SAAOS,IAAP;AACH,CArBD,E,CAuBA","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar BuildGameObject = require('../BuildGameObject');\r\nvar GameObjectCreator = require('../GameObjectCreator');\r\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\r\nvar GetValue = require('../../utils/object/GetValue');\r\nvar Mesh = require('./Mesh');\r\n\r\n/**\r\n * Creates a new Mesh Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Mesh Game Object and WebGL support have been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#mesh\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Mesh} The Game Object that was created.\r\n */\r\nGameObjectCreator.register('mesh', function (config, addToScene)\r\n{\r\n    if (config === undefined) { config = {}; }\r\n\r\n    var key = GetAdvancedValue(config, 'key', null);\r\n    var frame = GetAdvancedValue(config, 'frame', null);\r\n    var vertices = GetValue(config, 'vertices', []);\r\n    var colors = GetValue(config, 'colors', []);\r\n    var alphas = GetValue(config, 'alphas', []);\r\n    var uv = GetValue(config, 'uv', []);\r\n\r\n    var mesh = new Mesh(this.scene, 0, 0, vertices, uv, colors, alphas, key, frame);\r\n\r\n    if (addToScene !== undefined)\r\n    {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    BuildGameObject(this.scene, mesh, config);\r\n\r\n    return mesh;\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectCreator context.\r\n"]},"metadata":{},"sourceType":"script"}