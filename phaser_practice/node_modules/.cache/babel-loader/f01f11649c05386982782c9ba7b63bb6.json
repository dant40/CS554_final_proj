{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar CONST = require('../const');\n/**\r\n * Called automatically by Phaser.Game and responsible for creating the console.log debug header.\r\n *\r\n * You can customize or disable the header via the Game Config object.\r\n *\r\n * @function Phaser.Core.DebugHeader\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Game} game - The Phaser.Game instance which will output this debug header.\r\n */\n\n\nvar DebugHeader = function (game) {\n  var config = game.config;\n\n  if (config.hideBanner) {\n    return;\n  }\n\n  var renderType = 'WebGL';\n\n  if (config.renderType === CONST.CANVAS) {\n    renderType = 'Canvas';\n  } else if (config.renderType === CONST.HEADLESS) {\n    renderType = 'Headless';\n  }\n\n  var audioConfig = config.audio;\n  var deviceAudio = game.device.audio;\n  var audioType;\n\n  if (deviceAudio.webAudio && !(audioConfig && audioConfig.disableWebAudio)) {\n    audioType = 'Web Audio';\n  } else if (audioConfig && audioConfig.noAudio || !deviceAudio.webAudio && !deviceAudio.audioData) {\n    audioType = 'No Audio';\n  } else {\n    audioType = 'HTML5 Audio';\n  }\n\n  if (!game.device.browser.ie) {\n    var c = '';\n    var args = [c];\n\n    if (Array.isArray(config.bannerBackgroundColor)) {\n      var lastColor;\n      config.bannerBackgroundColor.forEach(function (color) {\n        c = c.concat('%c ');\n        args.push('background: ' + color);\n        lastColor = color;\n      }); //  inject the text color\n\n      args[args.length - 1] = 'color: ' + config.bannerTextColor + '; background: ' + lastColor;\n    } else {\n      c = c.concat('%c ');\n      args.push('color: ' + config.bannerTextColor + '; background: ' + config.bannerBackgroundColor);\n    } //  URL link background color (always white)\n\n\n    args.push('background: #fff');\n\n    if (config.gameTitle) {\n      c = c.concat(config.gameTitle);\n\n      if (config.gameVersion) {\n        c = c.concat(' v' + config.gameVersion);\n      }\n\n      if (!config.hidePhaser) {\n        c = c.concat(' / ');\n      }\n    }\n\n    var fb = typeof PLUGIN_FBINSTANT ? '-FB' : '';\n\n    if (!config.hidePhaser) {\n      c = c.concat('Phaser v' + CONST.VERSION + fb + ' (' + renderType + ' | ' + audioType + ')');\n    }\n\n    c = c.concat(' %c ' + config.gameURL); //  Inject the new string back into the args array\n\n    args[0] = c;\n    console.log.apply(console, args);\n  } else if (window['console']) {\n    console.log('Phaser v' + CONST.VERSION + ' / https://phaser.io');\n  }\n};\n\nmodule.exports = DebugHeader;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/core/DebugHeader.js"],"names":["CONST","require","DebugHeader","game","config","hideBanner","renderType","CANVAS","HEADLESS","audioConfig","audio","deviceAudio","device","audioType","webAudio","disableWebAudio","noAudio","audioData","browser","ie","c","args","Array","isArray","bannerBackgroundColor","lastColor","forEach","color","concat","push","length","bannerTextColor","gameTitle","gameVersion","hidePhaser","fb","PLUGIN_FBINSTANT","VERSION","gameURL","console","log","apply","window","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar CONST = require('../const');\r\n\r\n/**\r\n * Called automatically by Phaser.Game and responsible for creating the console.log debug header.\r\n *\r\n * You can customize or disable the header via the Game Config object.\r\n *\r\n * @function Phaser.Core.DebugHeader\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Game} game - The Phaser.Game instance which will output this debug header.\r\n */\r\nvar DebugHeader = function (game)\r\n{\r\n    var config = game.config;\r\n\r\n    if (config.hideBanner)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var renderType = 'WebGL';\r\n\r\n    if (config.renderType === CONST.CANVAS)\r\n    {\r\n        renderType = 'Canvas';\r\n    }\r\n    else if (config.renderType === CONST.HEADLESS)\r\n    {\r\n        renderType = 'Headless';\r\n    }\r\n\r\n    var audioConfig = config.audio;\r\n    var deviceAudio = game.device.audio;\r\n\r\n    var audioType;\r\n\r\n    if (deviceAudio.webAudio && !(audioConfig && audioConfig.disableWebAudio))\r\n    {\r\n        audioType = 'Web Audio';\r\n    }\r\n    else if ((audioConfig && audioConfig.noAudio) || (!deviceAudio.webAudio && !deviceAudio.audioData))\r\n    {\r\n        audioType = 'No Audio';\r\n    }\r\n    else\r\n    {\r\n        audioType = 'HTML5 Audio';\r\n    }\r\n\r\n    if (!game.device.browser.ie)\r\n    {\r\n        var c = '';\r\n        var args = [ c ];\r\n\r\n        if (Array.isArray(config.bannerBackgroundColor))\r\n        {\r\n            var lastColor;\r\n\r\n            config.bannerBackgroundColor.forEach(function (color)\r\n            {\r\n                c = c.concat('%c ');\r\n\r\n                args.push('background: ' + color);\r\n\r\n                lastColor = color;\r\n\r\n            });\r\n\r\n            //  inject the text color\r\n            args[args.length - 1] = 'color: ' + config.bannerTextColor + '; background: ' + lastColor;\r\n        }\r\n        else\r\n        {\r\n            c = c.concat('%c ');\r\n\r\n            args.push('color: ' + config.bannerTextColor + '; background: ' + config.bannerBackgroundColor);\r\n        }\r\n\r\n        //  URL link background color (always white)\r\n        args.push('background: #fff');\r\n\r\n        if (config.gameTitle)\r\n        {\r\n            c = c.concat(config.gameTitle);\r\n\r\n            if (config.gameVersion)\r\n            {\r\n                c = c.concat(' v' + config.gameVersion);\r\n            }\r\n\r\n            if (!config.hidePhaser)\r\n            {\r\n                c = c.concat(' / ');\r\n            }\r\n        }\r\n\r\n        var fb = (typeof PLUGIN_FBINSTANT) ? '-FB' : '';\r\n\r\n        if (!config.hidePhaser)\r\n        {\r\n            c = c.concat('Phaser v' + CONST.VERSION + fb + ' (' + renderType + ' | ' + audioType + ')');\r\n        }\r\n\r\n        c = c.concat(' %c ' + config.gameURL);\r\n\r\n        //  Inject the new string back into the args array\r\n        args[0] = c;\r\n\r\n        console.log.apply(console, args);\r\n    }\r\n    else if (window['console'])\r\n    {\r\n        console.log('Phaser v' + CONST.VERSION + ' / https://phaser.io');\r\n    }\r\n};\r\n\r\nmodule.exports = DebugHeader;\r\n"]},"metadata":{},"sourceType":"script"}