{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Provides methods used for setting the WebGL rendering pipeline of a Game Object.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Pipeline\r\n * @webglOnly\r\n * @since 3.0.0\r\n */\nvar Pipeline = {\n  /**\r\n   * The initial WebGL pipeline of this Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Pipeline#defaultPipeline\r\n   * @type {Phaser.Renderer.WebGL.WebGLPipeline}\r\n   * @default null\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   */\n  defaultPipeline: null,\n\n  /**\r\n   * The current WebGL pipeline of this Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Pipeline#pipeline\r\n   * @type {Phaser.Renderer.WebGL.WebGLPipeline}\r\n   * @default null\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   */\n  pipeline: null,\n\n  /**\r\n   * Sets the initial WebGL Pipeline of this Game Object.\r\n   * This should only be called during the instantiation of the Game Object.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Pipeline#initPipeline\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   *\r\n   * @param {string} [pipelineName=TextureTintPipeline] - The name of the pipeline to set on this Game Object. Defaults to the Texture Tint Pipeline.\r\n   *\r\n   * @return {boolean} `true` if the pipeline was set successfully, otherwise `false`.\r\n   */\n  initPipeline: function (pipelineName) {\n    if (pipelineName === undefined) {\n      pipelineName = 'TextureTintPipeline';\n    }\n\n    var renderer = this.scene.sys.game.renderer;\n\n    if (renderer && renderer.gl && renderer.hasPipeline(pipelineName)) {\n      this.defaultPipeline = renderer.getPipeline(pipelineName);\n      this.pipeline = this.defaultPipeline;\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\r\n   * Sets the active WebGL Pipeline of this Game Object.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Pipeline#setPipeline\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   *\r\n   * @param {string} pipelineName - The name of the pipeline to set on this Game Object.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setPipeline: function (pipelineName) {\n    var renderer = this.scene.sys.game.renderer;\n\n    if (renderer && renderer.gl && renderer.hasPipeline(pipelineName)) {\n      this.pipeline = renderer.getPipeline(pipelineName);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Resets the WebGL Pipeline of this Game Object back to the default it was created with.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Pipeline#resetPipeline\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   *\r\n   * @return {boolean} `true` if the pipeline was set successfully, otherwise `false`.\r\n   */\n  resetPipeline: function () {\n    this.pipeline = this.defaultPipeline;\n    return this.pipeline !== null;\n  },\n\n  /**\r\n   * Gets the name of the WebGL Pipeline this Game Object is currently using.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Pipeline#getPipelineName\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   *\r\n   * @return {string} The string-based name of the pipeline being used by this Game Object.\r\n   */\n  getPipelineName: function () {\n    return this.pipeline.name;\n  }\n};\nmodule.exports = Pipeline;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/components/Pipeline.js"],"names":["Pipeline","defaultPipeline","pipeline","initPipeline","pipelineName","undefined","renderer","scene","sys","game","gl","hasPipeline","getPipeline","setPipeline","resetPipeline","getPipelineName","name","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;AAQA,IAAIA,QAAQ,GAAG;AAEX;;;;;;;;;AASAC,EAAAA,eAAe,EAAE,IAXN;;AAaX;;;;;;;;;AASAC,EAAAA,QAAQ,EAAE,IAtBC;;AAwBX;;;;;;;;;;;;AAYAC,EAAAA,YAAY,EAAE,UAAUC,YAAV,EACd;AACI,QAAIA,YAAY,KAAKC,SAArB,EAAgC;AAAED,MAAAA,YAAY,GAAG,qBAAf;AAAuC;;AAEzE,QAAIE,QAAQ,GAAG,KAAKC,KAAL,CAAWC,GAAX,CAAeC,IAAf,CAAoBH,QAAnC;;AAEA,QAAIA,QAAQ,IAAIA,QAAQ,CAACI,EAArB,IAA2BJ,QAAQ,CAACK,WAAT,CAAqBP,YAArB,CAA/B,EACA;AACI,WAAKH,eAAL,GAAuBK,QAAQ,CAACM,WAAT,CAAqBR,YAArB,CAAvB;AACA,WAAKF,QAAL,GAAgB,KAAKD,eAArB;AAEA,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH,GAnDU;;AAqDX;;;;;;;;;;;AAWAY,EAAAA,WAAW,EAAE,UAAUT,YAAV,EACb;AACI,QAAIE,QAAQ,GAAG,KAAKC,KAAL,CAAWC,GAAX,CAAeC,IAAf,CAAoBH,QAAnC;;AAEA,QAAIA,QAAQ,IAAIA,QAAQ,CAACI,EAArB,IAA2BJ,QAAQ,CAACK,WAAT,CAAqBP,YAArB,CAA/B,EACA;AACI,WAAKF,QAAL,GAAgBI,QAAQ,CAACM,WAAT,CAAqBR,YAArB,CAAhB;AACH;;AAED,WAAO,IAAP;AACH,GA1EU;;AA4EX;;;;;;;;;AASAU,EAAAA,aAAa,EAAE,YACf;AACI,SAAKZ,QAAL,GAAgB,KAAKD,eAArB;AAEA,WAAQ,KAAKC,QAAL,KAAkB,IAA1B;AACH,GA1FU;;AA4FX;;;;;;;;;AASAa,EAAAA,eAAe,EAAE,YACjB;AACI,WAAO,KAAKb,QAAL,CAAcc,IAArB;AACH;AAxGU,CAAf;AA4GAC,MAAM,CAACC,OAAP,GAAiBlB,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for setting the WebGL rendering pipeline of a Game Object.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Pipeline\r\n * @webglOnly\r\n * @since 3.0.0\r\n */\r\n\r\nvar Pipeline = {\r\n\r\n    /**\r\n     * The initial WebGL pipeline of this Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Pipeline#defaultPipeline\r\n     * @type {Phaser.Renderer.WebGL.WebGLPipeline}\r\n     * @default null\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     */\r\n    defaultPipeline: null,\r\n\r\n    /**\r\n     * The current WebGL pipeline of this Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Pipeline#pipeline\r\n     * @type {Phaser.Renderer.WebGL.WebGLPipeline}\r\n     * @default null\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     */\r\n    pipeline: null,\r\n\r\n    /**\r\n     * Sets the initial WebGL Pipeline of this Game Object.\r\n     * This should only be called during the instantiation of the Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#initPipeline\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} [pipelineName=TextureTintPipeline] - The name of the pipeline to set on this Game Object. Defaults to the Texture Tint Pipeline.\r\n     *\r\n     * @return {boolean} `true` if the pipeline was set successfully, otherwise `false`.\r\n     */\r\n    initPipeline: function (pipelineName)\r\n    {\r\n        if (pipelineName === undefined) { pipelineName = 'TextureTintPipeline'; }\r\n\r\n        var renderer = this.scene.sys.game.renderer;\r\n\r\n        if (renderer && renderer.gl && renderer.hasPipeline(pipelineName))\r\n        {\r\n            this.defaultPipeline = renderer.getPipeline(pipelineName);\r\n            this.pipeline = this.defaultPipeline;\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the active WebGL Pipeline of this Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#setPipeline\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} pipelineName - The name of the pipeline to set on this Game Object.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setPipeline: function (pipelineName)\r\n    {\r\n        var renderer = this.scene.sys.game.renderer;\r\n\r\n        if (renderer && renderer.gl && renderer.hasPipeline(pipelineName))\r\n        {\r\n            this.pipeline = renderer.getPipeline(pipelineName);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the WebGL Pipeline of this Game Object back to the default it was created with.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#resetPipeline\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` if the pipeline was set successfully, otherwise `false`.\r\n     */\r\n    resetPipeline: function ()\r\n    {\r\n        this.pipeline = this.defaultPipeline;\r\n\r\n        return (this.pipeline !== null);\r\n    },\r\n\r\n    /**\r\n     * Gets the name of the WebGL Pipeline this Game Object is currently using.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#getPipelineName\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     *\r\n     * @return {string} The string-based name of the pipeline being used by this Game Object.\r\n     */\r\n    getPipelineName: function ()\r\n    {\r\n        return this.pipeline.name;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Pipeline;\r\n"]},"metadata":{},"sourceType":"script"}