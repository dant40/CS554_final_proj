{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Moves the element at the end of the array to the start, shifting all items in the process.\r\n * The \"rotation\" happens to the right.\r\n *\r\n * @function Phaser.Utils.Array.RotateRight\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to shift to the right. This array is modified in place.\r\n * @param {integer} [total=1] - The number of times to shift the array.\r\n *\r\n * @return {*} The most recently shifted element.\r\n */\nvar RotateRight = function (array, total) {\n  if (total === undefined) {\n    total = 1;\n  }\n\n  var element = null;\n\n  for (var i = 0; i < total; i++) {\n    element = array.pop();\n    array.unshift(element);\n  }\n\n  return element;\n};\n\nmodule.exports = RotateRight;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/array/RotateRight.js"],"names":["RotateRight","array","total","undefined","element","i","pop","unshift","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;AAYA,IAAIA,WAAW,GAAG,UAAUC,KAAV,EAAiBC,KAAjB,EAClB;AACI,MAAIA,KAAK,KAAKC,SAAd,EAAyB;AAAED,IAAAA,KAAK,GAAG,CAAR;AAAY;;AAEvC,MAAIE,OAAO,GAAG,IAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAApB,EAA2BG,CAAC,EAA5B,EACA;AACID,IAAAA,OAAO,GAAGH,KAAK,CAACK,GAAN,EAAV;AACAL,IAAAA,KAAK,CAACM,OAAN,CAAcH,OAAd;AACH;;AAED,SAAOA,OAAP;AACH,CAbD;;AAeAI,MAAM,CAACC,OAAP,GAAiBT,WAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Moves the element at the end of the array to the start, shifting all items in the process.\r\n * The \"rotation\" happens to the right.\r\n *\r\n * @function Phaser.Utils.Array.RotateRight\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to shift to the right. This array is modified in place.\r\n * @param {integer} [total=1] - The number of times to shift the array.\r\n *\r\n * @return {*} The most recently shifted element.\r\n */\r\nvar RotateRight = function (array, total)\r\n{\r\n    if (total === undefined) { total = 1; }\r\n\r\n    var element = null;\r\n\r\n    for (var i = 0; i < total; i++)\r\n    {\r\n        element = array.pop();\r\n        array.unshift(element);\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\nmodule.exports = RotateRight;\r\n"]},"metadata":{},"sourceType":"script"}