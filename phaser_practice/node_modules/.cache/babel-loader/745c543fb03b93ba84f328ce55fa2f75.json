{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar HSVToRGB = require('./HSVToRGB');\n/**\r\n * Get HSV color wheel values in an array which will be 360 elements in size.\r\n *\r\n * @function Phaser.Display.Color.HSVColorWheel\r\n * @since 3.0.0\r\n *\r\n * @param {number} [s=1] - The saturation, in the range 0 - 1.\r\n * @param {number} [v=1] - The value, in the range 0 - 1.\r\n *\r\n * @return {Phaser.Types.Display.ColorObject[]} An array containing 360 elements, where each contains a single numeric value corresponding to the color at that point in the HSV color wheel.\r\n */\n\n\nvar HSVColorWheel = function (s, v) {\n  if (s === undefined) {\n    s = 1;\n  }\n\n  if (v === undefined) {\n    v = 1;\n  }\n\n  var colors = [];\n\n  for (var c = 0; c <= 359; c++) {\n    colors.push(HSVToRGB(c / 359, s, v));\n  }\n\n  return colors;\n};\n\nmodule.exports = HSVColorWheel;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/display/color/HSVColorWheel.js"],"names":["HSVToRGB","require","HSVColorWheel","s","v","undefined","colors","c","push","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;AAEA;;;;;;;;;;;;;AAWA,IAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EACpB;AACI,MAAID,CAAC,KAAKE,SAAV,EAAqB;AAAEF,IAAAA,CAAC,GAAG,CAAJ;AAAQ;;AAC/B,MAAIC,CAAC,KAAKC,SAAV,EAAqB;AAAED,IAAAA,CAAC,GAAG,CAAJ;AAAQ;;AAE/B,MAAIE,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,GAArB,EAA0BA,CAAC,EAA3B,EACA;AACID,IAAAA,MAAM,CAACE,IAAP,CAAYR,QAAQ,CAACO,CAAC,GAAG,GAAL,EAAUJ,CAAV,EAAaC,CAAb,CAApB;AACH;;AAED,SAAOE,MAAP;AACH,CAbD;;AAeAG,MAAM,CAACC,OAAP,GAAiBR,aAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar HSVToRGB = require('./HSVToRGB');\r\n\r\n/**\r\n * Get HSV color wheel values in an array which will be 360 elements in size.\r\n *\r\n * @function Phaser.Display.Color.HSVColorWheel\r\n * @since 3.0.0\r\n *\r\n * @param {number} [s=1] - The saturation, in the range 0 - 1.\r\n * @param {number} [v=1] - The value, in the range 0 - 1.\r\n *\r\n * @return {Phaser.Types.Display.ColorObject[]} An array containing 360 elements, where each contains a single numeric value corresponding to the color at that point in the HSV color wheel.\r\n */\r\nvar HSVColorWheel = function (s, v)\r\n{\r\n    if (s === undefined) { s = 1; }\r\n    if (v === undefined) { v = 1; }\r\n\r\n    var colors = [];\r\n\r\n    for (var c = 0; c <= 359; c++)\r\n    {\r\n        colors.push(HSVToRGB(c / 359, s, v));\r\n    }\r\n\r\n    return colors;\r\n};\r\n\r\nmodule.exports = HSVColorWheel;\r\n"]},"metadata":{},"sourceType":"script"}