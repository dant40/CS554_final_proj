{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n//  RESERVED properties that a Tween config object uses\n//  completeDelay: The time the tween will wait before the onComplete event is dispatched once it has completed\n//  delay: The time the tween will wait before it first starts\n//  duration: The duration of the tween\n//  ease: The ease function used by the tween\n//  easeParams: The parameters to go with the ease function (if any)\n//  flipX: flip X the GameObject on tween end\n//  flipY: flip Y the GameObject on tween end//  hold: The time the tween will pause before running a yoyo\n//  hold: The time the tween will pause before running a yoyo\n//  loop: The time the tween will pause before starting either a yoyo or returning to the start for a repeat\n//  loopDelay: \n//  offset: Used when the Tween is part of a Timeline\n//  paused: Does the tween start in a paused state, or playing?\n//  props: The properties being tweened by the tween\n//  repeat: The number of times the tween will repeat itself (a value of 1 means the tween will play twice, as it repeated once)\n//  repeatDelay: The time the tween will pause for before starting a repeat. The tween holds in the start state.\n//  targets: The targets the tween is updating.\n//  useFrames: Use frames or milliseconds?\n//  yoyo: boolean - Does the tween reverse itself (yoyo) when it reaches the end?\nmodule.exports = ['callbackScope', 'completeDelay', 'delay', 'duration', 'ease', 'easeParams', 'flipX', 'flipY', 'hold', 'loop', 'loopDelay', 'offset', 'onActive', 'onActiveParams', 'onActiveScope', 'onComplete', 'onCompleteParams', 'onCompleteScope', 'onLoop', 'onLoopParams', 'onLoopScope', 'onRepeat', 'onRepeatParams', 'onRepeatScope', 'onStart', 'onStartParams', 'onStartScope', 'onUpdate', 'onUpdateParams', 'onUpdateScope', 'onYoyo', 'onYoyoParams', 'onYoyoScope', 'paused', 'props', 'repeat', 'repeatDelay', 'targets', 'useFrames', 'yoyo'];","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/tweens/tween/ReservedProps.js"],"names":["module","exports"],"mappings":"AAAA;;;;;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiB,CACb,eADa,EAEb,eAFa,EAGb,OAHa,EAIb,UAJa,EAKb,MALa,EAMb,YANa,EAOb,OAPa,EAQb,OARa,EASb,MATa,EAUb,MAVa,EAWb,WAXa,EAYb,QAZa,EAab,UAba,EAcb,gBAda,EAeb,eAfa,EAgBb,YAhBa,EAiBb,kBAjBa,EAkBb,iBAlBa,EAmBb,QAnBa,EAoBb,cApBa,EAqBb,aArBa,EAsBb,UAtBa,EAuBb,gBAvBa,EAwBb,eAxBa,EAyBb,SAzBa,EA0Bb,eA1Ba,EA2Bb,cA3Ba,EA4Bb,UA5Ba,EA6Bb,gBA7Ba,EA8Bb,eA9Ba,EA+Bb,QA/Ba,EAgCb,cAhCa,EAiCb,aAjCa,EAkCb,QAlCa,EAmCb,OAnCa,EAoCb,QApCa,EAqCb,aArCa,EAsCb,SAtCa,EAuCb,WAvCa,EAwCb,MAxCa,CAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  RESERVED properties that a Tween config object uses\r\n\r\n//  completeDelay: The time the tween will wait before the onComplete event is dispatched once it has completed\r\n//  delay: The time the tween will wait before it first starts\r\n//  duration: The duration of the tween\r\n//  ease: The ease function used by the tween\r\n//  easeParams: The parameters to go with the ease function (if any)\r\n//  flipX: flip X the GameObject on tween end\r\n//  flipY: flip Y the GameObject on tween end//  hold: The time the tween will pause before running a yoyo\r\n//  hold: The time the tween will pause before running a yoyo\r\n//  loop: The time the tween will pause before starting either a yoyo or returning to the start for a repeat\r\n//  loopDelay: \r\n//  offset: Used when the Tween is part of a Timeline\r\n//  paused: Does the tween start in a paused state, or playing?\r\n//  props: The properties being tweened by the tween\r\n//  repeat: The number of times the tween will repeat itself (a value of 1 means the tween will play twice, as it repeated once)\r\n//  repeatDelay: The time the tween will pause for before starting a repeat. The tween holds in the start state.\r\n//  targets: The targets the tween is updating.\r\n//  useFrames: Use frames or milliseconds?\r\n//  yoyo: boolean - Does the tween reverse itself (yoyo) when it reaches the end?\r\n\r\nmodule.exports = [\r\n    'callbackScope',\r\n    'completeDelay',\r\n    'delay',\r\n    'duration',\r\n    'ease',\r\n    'easeParams',\r\n    'flipX',\r\n    'flipY',\r\n    'hold',\r\n    'loop',\r\n    'loopDelay',\r\n    'offset',\r\n    'onActive',\r\n    'onActiveParams',\r\n    'onActiveScope',\r\n    'onComplete',\r\n    'onCompleteParams',\r\n    'onCompleteScope',\r\n    'onLoop',\r\n    'onLoopParams',\r\n    'onLoopScope',\r\n    'onRepeat',\r\n    'onRepeatParams',\r\n    'onRepeatScope',\r\n    'onStart',\r\n    'onStartParams',\r\n    'onStartScope',\r\n    'onUpdate',\r\n    'onUpdateParams',\r\n    'onUpdateScope',\r\n    'onYoyo',\r\n    'onYoyoParams',\r\n    'onYoyoScope',\r\n    'paused',\r\n    'props',\r\n    'repeat',\r\n    'repeatDelay',\r\n    'targets',\r\n    'useFrames',\r\n    'yoyo'\r\n];\r\n"]},"metadata":{},"sourceType":"script"}