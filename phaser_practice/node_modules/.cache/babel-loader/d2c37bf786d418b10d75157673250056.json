{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar BresenhamPoints = require('../geom/line/BresenhamPoints');\n/**\r\n * Takes an array of Game Objects and positions them on evenly spaced points around the edges of a Triangle.\r\n * \r\n * If you wish to pass a `Phaser.GameObjects.Triangle` Shape to this function, you should pass its `geom` property.\r\n *\r\n * @function Phaser.Actions.PlaceOnTriangle\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to position the Game Objects on.\r\n * @param {number} [stepRate=1] - An optional step rate, to increase or decrease the packing of the Game Objects on the lines.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\n\n\nvar PlaceOnTriangle = function (items, triangle, stepRate) {\n  var p1 = BresenhamPoints({\n    x1: triangle.x1,\n    y1: triangle.y1,\n    x2: triangle.x2,\n    y2: triangle.y2\n  }, stepRate);\n  var p2 = BresenhamPoints({\n    x1: triangle.x2,\n    y1: triangle.y2,\n    x2: triangle.x3,\n    y2: triangle.y3\n  }, stepRate);\n  var p3 = BresenhamPoints({\n    x1: triangle.x3,\n    y1: triangle.y3,\n    x2: triangle.x1,\n    y2: triangle.y1\n  }, stepRate); //  Remove overlaps\n\n  p1.pop();\n  p2.pop();\n  p3.pop();\n  p1 = p1.concat(p2, p3);\n  var step = p1.length / items.length;\n  var p = 0;\n\n  for (var i = 0; i < items.length; i++) {\n    var item = items[i];\n    var point = p1[Math.floor(p)];\n    item.x = point.x;\n    item.y = point.y;\n    p += step;\n  }\n\n  return items;\n};\n\nmodule.exports = PlaceOnTriangle;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/actions/PlaceOnTriangle.js"],"names":["BresenhamPoints","require","PlaceOnTriangle","items","triangle","stepRate","p1","x1","y1","x2","y2","p2","x3","y3","p3","pop","concat","step","length","p","i","item","point","Math","floor","x","y","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,eAAe,GAAGC,OAAO,CAAC,8BAAD,CAA7B;AAEA;;;;;;;;;;;;;;;;;;AAgBA,IAAIC,eAAe,GAAG,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,QAA3B,EACtB;AACI,MAAIC,EAAE,GAAGN,eAAe,CAAC;AAAEO,IAAAA,EAAE,EAAEH,QAAQ,CAACG,EAAf;AAAmBC,IAAAA,EAAE,EAAEJ,QAAQ,CAACI,EAAhC;AAAoCC,IAAAA,EAAE,EAAEL,QAAQ,CAACK,EAAjD;AAAqDC,IAAAA,EAAE,EAAEN,QAAQ,CAACM;AAAlE,GAAD,EAAyEL,QAAzE,CAAxB;AACA,MAAIM,EAAE,GAAGX,eAAe,CAAC;AAAEO,IAAAA,EAAE,EAAEH,QAAQ,CAACK,EAAf;AAAmBD,IAAAA,EAAE,EAAEJ,QAAQ,CAACM,EAAhC;AAAoCD,IAAAA,EAAE,EAAEL,QAAQ,CAACQ,EAAjD;AAAqDF,IAAAA,EAAE,EAAEN,QAAQ,CAACS;AAAlE,GAAD,EAAyER,QAAzE,CAAxB;AACA,MAAIS,EAAE,GAAGd,eAAe,CAAC;AAAEO,IAAAA,EAAE,EAAEH,QAAQ,CAACQ,EAAf;AAAmBJ,IAAAA,EAAE,EAAEJ,QAAQ,CAACS,EAAhC;AAAoCJ,IAAAA,EAAE,EAAEL,QAAQ,CAACG,EAAjD;AAAqDG,IAAAA,EAAE,EAAEN,QAAQ,CAACI;AAAlE,GAAD,EAAyEH,QAAzE,CAAxB,CAHJ,CAKI;;AACAC,EAAAA,EAAE,CAACS,GAAH;AACAJ,EAAAA,EAAE,CAACI,GAAH;AACAD,EAAAA,EAAE,CAACC,GAAH;AAEAT,EAAAA,EAAE,GAAGA,EAAE,CAACU,MAAH,CAAUL,EAAV,EAAcG,EAAd,CAAL;AAEA,MAAIG,IAAI,GAAGX,EAAE,CAACY,MAAH,GAAYf,KAAK,CAACe,MAA7B;AACA,MAAIC,CAAC,GAAG,CAAR;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,KAAK,CAACe,MAA1B,EAAkCE,CAAC,EAAnC,EACA;AACI,QAAIC,IAAI,GAAGlB,KAAK,CAACiB,CAAD,CAAhB;AACA,QAAIE,KAAK,GAAGhB,EAAE,CAACiB,IAAI,CAACC,KAAL,CAAWL,CAAX,CAAD,CAAd;AAEAE,IAAAA,IAAI,CAACI,CAAL,GAASH,KAAK,CAACG,CAAf;AACAJ,IAAAA,IAAI,CAACK,CAAL,GAASJ,KAAK,CAACI,CAAf;AAEAP,IAAAA,CAAC,IAAIF,IAAL;AACH;;AAED,SAAOd,KAAP;AACH,CA5BD;;AA8BAwB,MAAM,CAACC,OAAP,GAAiB1B,eAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar BresenhamPoints = require('../geom/line/BresenhamPoints');\r\n\r\n/**\r\n * Takes an array of Game Objects and positions them on evenly spaced points around the edges of a Triangle.\r\n * \r\n * If you wish to pass a `Phaser.GameObjects.Triangle` Shape to this function, you should pass its `geom` property.\r\n *\r\n * @function Phaser.Actions.PlaceOnTriangle\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to position the Game Objects on.\r\n * @param {number} [stepRate=1] - An optional step rate, to increase or decrease the packing of the Game Objects on the lines.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\r\nvar PlaceOnTriangle = function (items, triangle, stepRate)\r\n{\r\n    var p1 = BresenhamPoints({ x1: triangle.x1, y1: triangle.y1, x2: triangle.x2, y2: triangle.y2 }, stepRate);\r\n    var p2 = BresenhamPoints({ x1: triangle.x2, y1: triangle.y2, x2: triangle.x3, y2: triangle.y3 }, stepRate);\r\n    var p3 = BresenhamPoints({ x1: triangle.x3, y1: triangle.y3, x2: triangle.x1, y2: triangle.y1 }, stepRate);\r\n\r\n    //  Remove overlaps\r\n    p1.pop();\r\n    p2.pop();\r\n    p3.pop();\r\n\r\n    p1 = p1.concat(p2, p3);\r\n\r\n    var step = p1.length / items.length;\r\n    var p = 0;\r\n\r\n    for (var i = 0; i < items.length; i++)\r\n    {\r\n        var item = items[i];\r\n        var point = p1[Math.floor(p)];\r\n\r\n        item.x = point.x;\r\n        item.y = point.y;\r\n\r\n        p += step;\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = PlaceOnTriangle;\r\n"]},"metadata":{},"sourceType":"script"}