{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar FLIPPED_HORIZONTAL = 0x80000000;\nvar FLIPPED_VERTICAL = 0x40000000;\nvar FLIPPED_ANTI_DIAGONAL = 0x20000000; // Top-right is swapped with bottom-left corners\n\n/**\r\n * See Tiled documentation on tile flipping:\r\n * http://docs.mapeditor.org/en/latest/reference/tmx-map-format/\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Tiled.ParseGID\r\n * @since 3.0.0\r\n *\r\n * @param {number} gid - [description]\r\n *\r\n * @return {object} [description]\r\n */\n\nvar ParseGID = function (gid) {\n  var flippedHorizontal = Boolean(gid & FLIPPED_HORIZONTAL);\n  var flippedVertical = Boolean(gid & FLIPPED_VERTICAL);\n  var flippedAntiDiagonal = Boolean(gid & FLIPPED_ANTI_DIAGONAL);\n  gid = gid & ~(FLIPPED_HORIZONTAL | FLIPPED_VERTICAL | FLIPPED_ANTI_DIAGONAL); // Parse the flip flags into something Phaser can use\n\n  var rotation = 0;\n  var flipped = false;\n\n  if (flippedHorizontal && flippedVertical && flippedAntiDiagonal) {\n    rotation = Math.PI / 2;\n    flipped = true;\n  } else if (flippedHorizontal && flippedVertical && !flippedAntiDiagonal) {\n    rotation = Math.PI;\n    flipped = false;\n  } else if (flippedHorizontal && !flippedVertical && flippedAntiDiagonal) {\n    rotation = Math.PI / 2;\n    flipped = false;\n  } else if (flippedHorizontal && !flippedVertical && !flippedAntiDiagonal) {\n    rotation = 0;\n    flipped = true;\n  } else if (!flippedHorizontal && flippedVertical && flippedAntiDiagonal) {\n    rotation = 3 * Math.PI / 2;\n    flipped = false;\n  } else if (!flippedHorizontal && flippedVertical && !flippedAntiDiagonal) {\n    rotation = Math.PI;\n    flipped = true;\n  } else if (!flippedHorizontal && !flippedVertical && flippedAntiDiagonal) {\n    rotation = 3 * Math.PI / 2;\n    flipped = true;\n  } else if (!flippedHorizontal && !flippedVertical && !flippedAntiDiagonal) {\n    rotation = 0;\n    flipped = false;\n  }\n\n  return {\n    gid: gid,\n    flippedHorizontal: flippedHorizontal,\n    flippedVertical: flippedVertical,\n    flippedAntiDiagonal: flippedAntiDiagonal,\n    rotation: rotation,\n    flipped: flipped\n  };\n};\n\nmodule.exports = ParseGID;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/tilemaps/parsers/tiled/ParseGID.js"],"names":["FLIPPED_HORIZONTAL","FLIPPED_VERTICAL","FLIPPED_ANTI_DIAGONAL","ParseGID","gid","flippedHorizontal","Boolean","flippedVertical","flippedAntiDiagonal","rotation","flipped","Math","PI","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,kBAAkB,GAAG,UAAzB;AACA,IAAIC,gBAAgB,GAAG,UAAvB;AACA,IAAIC,qBAAqB,GAAG,UAA5B,C,CAAwC;;AAExC;;;;;;;;;;;;AAWA,IAAIC,QAAQ,GAAG,UAAUC,GAAV,EACf;AACI,MAAIC,iBAAiB,GAAGC,OAAO,CAACF,GAAG,GAAGJ,kBAAP,CAA/B;AACA,MAAIO,eAAe,GAAGD,OAAO,CAACF,GAAG,GAAGH,gBAAP,CAA7B;AACA,MAAIO,mBAAmB,GAAGF,OAAO,CAACF,GAAG,GAAGF,qBAAP,CAAjC;AACAE,EAAAA,GAAG,GAAGA,GAAG,GAAG,EAAEJ,kBAAkB,GAAGC,gBAArB,GAAwCC,qBAA1C,CAAZ,CAJJ,CAMI;;AACA,MAAIO,QAAQ,GAAG,CAAf;AACA,MAAIC,OAAO,GAAG,KAAd;;AAEA,MAAIL,iBAAiB,IAAIE,eAArB,IAAwCC,mBAA5C,EACA;AACIC,IAAAA,QAAQ,GAAGE,IAAI,CAACC,EAAL,GAAU,CAArB;AACAF,IAAAA,OAAO,GAAG,IAAV;AACH,GAJD,MAKK,IAAIL,iBAAiB,IAAIE,eAArB,IAAwC,CAACC,mBAA7C,EACL;AACIC,IAAAA,QAAQ,GAAGE,IAAI,CAACC,EAAhB;AACAF,IAAAA,OAAO,GAAG,KAAV;AACH,GAJI,MAKA,IAAIL,iBAAiB,IAAI,CAACE,eAAtB,IAAyCC,mBAA7C,EACL;AACIC,IAAAA,QAAQ,GAAGE,IAAI,CAACC,EAAL,GAAU,CAArB;AACAF,IAAAA,OAAO,GAAG,KAAV;AACH,GAJI,MAKA,IAAIL,iBAAiB,IAAI,CAACE,eAAtB,IAAyC,CAACC,mBAA9C,EACL;AACIC,IAAAA,QAAQ,GAAG,CAAX;AACAC,IAAAA,OAAO,GAAG,IAAV;AACH,GAJI,MAKA,IAAI,CAACL,iBAAD,IAAsBE,eAAtB,IAAyCC,mBAA7C,EACL;AACIC,IAAAA,QAAQ,GAAG,IAAIE,IAAI,CAACC,EAAT,GAAc,CAAzB;AACAF,IAAAA,OAAO,GAAG,KAAV;AACH,GAJI,MAKA,IAAI,CAACL,iBAAD,IAAsBE,eAAtB,IAAyC,CAACC,mBAA9C,EACL;AACIC,IAAAA,QAAQ,GAAGE,IAAI,CAACC,EAAhB;AACAF,IAAAA,OAAO,GAAG,IAAV;AACH,GAJI,MAKA,IAAI,CAACL,iBAAD,IAAsB,CAACE,eAAvB,IAA0CC,mBAA9C,EACL;AACIC,IAAAA,QAAQ,GAAG,IAAIE,IAAI,CAACC,EAAT,GAAc,CAAzB;AACAF,IAAAA,OAAO,GAAG,IAAV;AACH,GAJI,MAKA,IAAI,CAACL,iBAAD,IAAsB,CAACE,eAAvB,IAA0C,CAACC,mBAA/C,EACL;AACIC,IAAAA,QAAQ,GAAG,CAAX;AACAC,IAAAA,OAAO,GAAG,KAAV;AACH;;AAED,SAAO;AACHN,IAAAA,GAAG,EAAEA,GADF;AAEHC,IAAAA,iBAAiB,EAAEA,iBAFhB;AAGHE,IAAAA,eAAe,EAAEA,eAHd;AAIHC,IAAAA,mBAAmB,EAAEA,mBAJlB;AAKHC,IAAAA,QAAQ,EAAEA,QALP;AAMHC,IAAAA,OAAO,EAAEA;AANN,GAAP;AAQH,CA5DD;;AA8DAG,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar FLIPPED_HORIZONTAL = 0x80000000;\r\nvar FLIPPED_VERTICAL = 0x40000000;\r\nvar FLIPPED_ANTI_DIAGONAL = 0x20000000; // Top-right is swapped with bottom-left corners\r\n\r\n/**\r\n * See Tiled documentation on tile flipping:\r\n * http://docs.mapeditor.org/en/latest/reference/tmx-map-format/\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Tiled.ParseGID\r\n * @since 3.0.0\r\n *\r\n * @param {number} gid - [description]\r\n *\r\n * @return {object} [description]\r\n */\r\nvar ParseGID = function (gid)\r\n{\r\n    var flippedHorizontal = Boolean(gid & FLIPPED_HORIZONTAL);\r\n    var flippedVertical = Boolean(gid & FLIPPED_VERTICAL);\r\n    var flippedAntiDiagonal = Boolean(gid & FLIPPED_ANTI_DIAGONAL);\r\n    gid = gid & ~(FLIPPED_HORIZONTAL | FLIPPED_VERTICAL | FLIPPED_ANTI_DIAGONAL);\r\n\r\n    // Parse the flip flags into something Phaser can use\r\n    var rotation = 0;\r\n    var flipped = false;\r\n\r\n    if (flippedHorizontal && flippedVertical && flippedAntiDiagonal)\r\n    {\r\n        rotation = Math.PI / 2;\r\n        flipped = true;\r\n    }\r\n    else if (flippedHorizontal && flippedVertical && !flippedAntiDiagonal)\r\n    {\r\n        rotation = Math.PI;\r\n        flipped = false;\r\n    }\r\n    else if (flippedHorizontal && !flippedVertical && flippedAntiDiagonal)\r\n    {\r\n        rotation = Math.PI / 2;\r\n        flipped = false;\r\n    }\r\n    else if (flippedHorizontal && !flippedVertical && !flippedAntiDiagonal)\r\n    {\r\n        rotation = 0;\r\n        flipped = true;\r\n    }\r\n    else if (!flippedHorizontal && flippedVertical && flippedAntiDiagonal)\r\n    {\r\n        rotation = 3 * Math.PI / 2;\r\n        flipped = false;\r\n    }\r\n    else if (!flippedHorizontal && flippedVertical && !flippedAntiDiagonal)\r\n    {\r\n        rotation = Math.PI;\r\n        flipped = true;\r\n    }\r\n    else if (!flippedHorizontal && !flippedVertical && flippedAntiDiagonal)\r\n    {\r\n        rotation = 3 * Math.PI / 2;\r\n        flipped = true;\r\n    }\r\n    else if (!flippedHorizontal && !flippedVertical && !flippedAntiDiagonal)\r\n    {\r\n        rotation = 0;\r\n        flipped = false;\r\n    }\r\n\r\n    return {\r\n        gid: gid,\r\n        flippedHorizontal: flippedHorizontal,\r\n        flippedVertical: flippedVertical,\r\n        flippedAntiDiagonal: flippedAntiDiagonal,\r\n        rotation: rotation,\r\n        flipped: flipped\r\n    };\r\n};\r\n\r\nmodule.exports = ParseGID;\r\n"]},"metadata":{},"sourceType":"script"}