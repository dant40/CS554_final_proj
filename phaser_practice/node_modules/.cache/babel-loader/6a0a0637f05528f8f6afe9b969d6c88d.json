{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Checks if two Rectangles overlap. If a Rectangle is within another Rectangle, the two will be considered overlapping. Thus, the Rectangles are treated as \"solid\".\r\n *\r\n * @function Phaser.Geom.Rectangle.Overlaps\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectA - The first Rectangle to check.\r\n * @param {Phaser.Geom.Rectangle} rectB - The second Rectangle to check.\r\n *\r\n * @return {boolean} `true` if the two Rectangles overlap, `false` otherwise.\r\n */\nvar Overlaps = function (rectA, rectB) {\n  return rectA.x < rectB.right && rectA.right > rectB.x && rectA.y < rectB.bottom && rectA.bottom > rectB.y;\n};\n\nmodule.exports = Overlaps;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/rectangle/Overlaps.js"],"names":["Overlaps","rectA","rectB","x","right","y","bottom","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;AAWA,IAAIA,QAAQ,GAAG,UAAUC,KAAV,EAAiBC,KAAjB,EACf;AACI,SACID,KAAK,CAACE,CAAN,GAAUD,KAAK,CAACE,KAAhB,IACAH,KAAK,CAACG,KAAN,GAAcF,KAAK,CAACC,CADpB,IAEAF,KAAK,CAACI,CAAN,GAAUH,KAAK,CAACI,MAFhB,IAGAL,KAAK,CAACK,MAAN,GAAeJ,KAAK,CAACG,CAJzB;AAMH,CARD;;AAUAE,MAAM,CAACC,OAAP,GAAiBR,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Checks if two Rectangles overlap. If a Rectangle is within another Rectangle, the two will be considered overlapping. Thus, the Rectangles are treated as \"solid\".\r\n *\r\n * @function Phaser.Geom.Rectangle.Overlaps\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectA - The first Rectangle to check.\r\n * @param {Phaser.Geom.Rectangle} rectB - The second Rectangle to check.\r\n *\r\n * @return {boolean} `true` if the two Rectangles overlap, `false` otherwise.\r\n */\r\nvar Overlaps = function (rectA, rectB)\r\n{\r\n    return (\r\n        rectA.x < rectB.right &&\r\n        rectA.right > rectB.x &&\r\n        rectA.y < rectB.bottom &&\r\n        rectA.bottom > rectB.y\r\n    );\r\n};\r\n\r\nmodule.exports = Overlaps;\r\n"]},"metadata":{},"sourceType":"script"}