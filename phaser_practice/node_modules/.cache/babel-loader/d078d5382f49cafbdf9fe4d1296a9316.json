{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar PointToLine = require('./PointToLine');\n/**\r\n * Checks if a Point is located on the given line segment.\r\n *\r\n * @function Phaser.Geom.Intersects.PointToLineSegment\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Point} point - The Point to check for intersection.\r\n * @param {Phaser.Geom.Line} line - The line segment to check for intersection.\r\n *\r\n * @return {boolean} `true` if the Point is on the given line segment, otherwise `false`.\r\n */\n\n\nvar PointToLineSegment = function (point, line) {\n  if (!PointToLine(point, line)) {\n    return false;\n  }\n\n  var xMin = Math.min(line.x1, line.x2);\n  var xMax = Math.max(line.x1, line.x2);\n  var yMin = Math.min(line.y1, line.y2);\n  var yMax = Math.max(line.y1, line.y2);\n  return point.x >= xMin && point.x <= xMax && point.y >= yMin && point.y <= yMax;\n};\n\nmodule.exports = PointToLineSegment;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/intersects/PointToLineSegment.js"],"names":["PointToLine","require","PointToLineSegment","point","line","xMin","Math","min","x1","x2","xMax","max","yMin","y1","y2","yMax","x","y","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;AAEA;;;;;;;;;;;;;AAWA,IAAIC,kBAAkB,GAAG,UAAUC,KAAV,EAAiBC,IAAjB,EACzB;AACI,MAAI,CAACJ,WAAW,CAACG,KAAD,EAAQC,IAAR,CAAhB,EACA;AACI,WAAO,KAAP;AACH;;AAED,MAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASH,IAAI,CAACI,EAAd,EAAkBJ,IAAI,CAACK,EAAvB,CAAX;AACA,MAAIC,IAAI,GAAGJ,IAAI,CAACK,GAAL,CAASP,IAAI,CAACI,EAAd,EAAkBJ,IAAI,CAACK,EAAvB,CAAX;AACA,MAAIG,IAAI,GAAGN,IAAI,CAACC,GAAL,CAASH,IAAI,CAACS,EAAd,EAAkBT,IAAI,CAACU,EAAvB,CAAX;AACA,MAAIC,IAAI,GAAGT,IAAI,CAACK,GAAL,CAASP,IAAI,CAACS,EAAd,EAAkBT,IAAI,CAACU,EAAvB,CAAX;AAEA,SAASX,KAAK,CAACa,CAAN,IAAWX,IAAX,IAAmBF,KAAK,CAACa,CAAN,IAAWN,IAA/B,IAAyCP,KAAK,CAACc,CAAN,IAAWL,IAAX,IAAmBT,KAAK,CAACc,CAAN,IAAWF,IAA/E;AACH,CAbD;;AAeAG,MAAM,CAACC,OAAP,GAAiBjB,kBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar PointToLine = require('./PointToLine');\r\n\r\n/**\r\n * Checks if a Point is located on the given line segment.\r\n *\r\n * @function Phaser.Geom.Intersects.PointToLineSegment\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Point} point - The Point to check for intersection.\r\n * @param {Phaser.Geom.Line} line - The line segment to check for intersection.\r\n *\r\n * @return {boolean} `true` if the Point is on the given line segment, otherwise `false`.\r\n */\r\nvar PointToLineSegment = function (point, line)\r\n{\r\n    if (!PointToLine(point, line))\r\n    {\r\n        return false;\r\n    }\r\n\r\n    var xMin = Math.min(line.x1, line.x2);\r\n    var xMax = Math.max(line.x1, line.x2);\r\n    var yMin = Math.min(line.y1, line.y2);\r\n    var yMax = Math.max(line.y1, line.y2);\r\n\r\n    return ((point.x >= xMin && point.x <= xMax) && (point.y >= yMin && point.y <= yMax));\r\n};\r\n\r\nmodule.exports = PointToLineSegment;\r\n"]},"metadata":{},"sourceType":"script"}