{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar PutTileAt = require('./PutTileAt');\n\nvar WorldToTileX = require('./WorldToTileX');\n\nvar WorldToTileY = require('./WorldToTileY');\n/**\r\n * Puts a tile at the given world coordinates (pixels) in the specified layer. You can pass in either\r\n * an index or a Tile object. If you pass in a Tile, all attributes will be copied over to the\r\n * specified location. If you pass in an index, only the index at the specified location will be\r\n * changed. Collision information will be recalculated at the specified location.\r\n *\r\n * @function Phaser.Tilemaps.Components.PutTileAtWorldXY\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {(integer|Phaser.Tilemaps.Tile)} tile - The index of this tile to set or a Tile object.\r\n * @param {number} worldX - The x coordinate, in pixels.\r\n * @param {number} worldY - The y coordinate, in pixels.\r\n * @param {boolean} [recalculateFaces=true] - `true` if the faces data should be recalculated.\r\n * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - The Camera to use when calculating the tile index from the world values.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n *\r\n * @return {Phaser.Tilemaps.Tile} The Tile object that was created or added to this map.\r\n */\n\n\nvar PutTileAtWorldXY = function (tile, worldX, worldY, recalculateFaces, camera, layer) {\n  var tileX = WorldToTileX(worldX, true, camera, layer);\n  var tileY = WorldToTileY(worldY, true, camera, layer);\n  return PutTileAt(tile, tileX, tileY, recalculateFaces, layer);\n};\n\nmodule.exports = PutTileAtWorldXY;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/tilemaps/components/PutTileAtWorldXY.js"],"names":["PutTileAt","require","WorldToTileX","WorldToTileY","PutTileAtWorldXY","tile","worldX","worldY","recalculateFaces","camera","layer","tileX","tileY","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,gBAAD,CAA1B;AAEA;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAIG,gBAAgB,GAAG,UAAUC,IAAV,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,gBAAhC,EAAkDC,MAAlD,EAA0DC,KAA1D,EACvB;AACI,MAAIC,KAAK,GAAGT,YAAY,CAACI,MAAD,EAAS,IAAT,EAAeG,MAAf,EAAuBC,KAAvB,CAAxB;AACA,MAAIE,KAAK,GAAGT,YAAY,CAACI,MAAD,EAAS,IAAT,EAAeE,MAAf,EAAuBC,KAAvB,CAAxB;AACA,SAAOV,SAAS,CAACK,IAAD,EAAOM,KAAP,EAAcC,KAAd,EAAqBJ,gBAArB,EAAuCE,KAAvC,CAAhB;AACH,CALD;;AAOAG,MAAM,CAACC,OAAP,GAAiBV,gBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar PutTileAt = require('./PutTileAt');\r\nvar WorldToTileX = require('./WorldToTileX');\r\nvar WorldToTileY = require('./WorldToTileY');\r\n\r\n/**\r\n * Puts a tile at the given world coordinates (pixels) in the specified layer. You can pass in either\r\n * an index or a Tile object. If you pass in a Tile, all attributes will be copied over to the\r\n * specified location. If you pass in an index, only the index at the specified location will be\r\n * changed. Collision information will be recalculated at the specified location.\r\n *\r\n * @function Phaser.Tilemaps.Components.PutTileAtWorldXY\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {(integer|Phaser.Tilemaps.Tile)} tile - The index of this tile to set or a Tile object.\r\n * @param {number} worldX - The x coordinate, in pixels.\r\n * @param {number} worldY - The y coordinate, in pixels.\r\n * @param {boolean} [recalculateFaces=true] - `true` if the faces data should be recalculated.\r\n * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - The Camera to use when calculating the tile index from the world values.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n *\r\n * @return {Phaser.Tilemaps.Tile} The Tile object that was created or added to this map.\r\n */\r\nvar PutTileAtWorldXY = function (tile, worldX, worldY, recalculateFaces, camera, layer)\r\n{\r\n    var tileX = WorldToTileX(worldX, true, camera, layer);\r\n    var tileY = WorldToTileY(worldY, true, camera, layer);\r\n    return PutTileAt(tile, tileX, tileY, recalculateFaces, layer);\r\n};\r\n\r\nmodule.exports = PutTileAtWorldXY;\r\n"]},"metadata":{},"sourceType":"script"}