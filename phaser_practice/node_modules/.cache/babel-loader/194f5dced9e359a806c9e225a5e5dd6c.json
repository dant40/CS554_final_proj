{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Rotates an entire Triangle at a given angle about a specific point.\r\n *\r\n * @function Phaser.Geom.Triangle.RotateAroundXY\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Triangle} O - [triangle,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to rotate.\r\n * @param {number} x - The X coordinate of the point to rotate the Triangle about.\r\n * @param {number} y - The Y coordinate of the point to rotate the Triangle about.\r\n * @param {number} angle - The angle by which to rotate the Triangle, in radians.\r\n *\r\n * @return {Phaser.Geom.Triangle} The rotated Triangle.\r\n */\nvar RotateAroundXY = function (triangle, x, y, angle) {\n  var c = Math.cos(angle);\n  var s = Math.sin(angle);\n  var tx = triangle.x1 - x;\n  var ty = triangle.y1 - y;\n  triangle.x1 = tx * c - ty * s + x;\n  triangle.y1 = tx * s + ty * c + y;\n  tx = triangle.x2 - x;\n  ty = triangle.y2 - y;\n  triangle.x2 = tx * c - ty * s + x;\n  triangle.y2 = tx * s + ty * c + y;\n  tx = triangle.x3 - x;\n  ty = triangle.y3 - y;\n  triangle.x3 = tx * c - ty * s + x;\n  triangle.y3 = tx * s + ty * c + y;\n  return triangle;\n};\n\nmodule.exports = RotateAroundXY;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/triangle/RotateAroundXY.js"],"names":["RotateAroundXY","triangle","x","y","angle","c","Math","cos","s","sin","tx","x1","ty","y1","x2","y2","x3","y3","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;;AAeA,IAAIA,cAAc,GAAG,UAAUC,QAAV,EAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,KAA1B,EACrB;AACI,MAAIC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAT,CAAR;AACA,MAAII,CAAC,GAAGF,IAAI,CAACG,GAAL,CAASL,KAAT,CAAR;AAEA,MAAIM,EAAE,GAAGT,QAAQ,CAACU,EAAT,GAAcT,CAAvB;AACA,MAAIU,EAAE,GAAGX,QAAQ,CAACY,EAAT,GAAcV,CAAvB;AAEAF,EAAAA,QAAQ,CAACU,EAAT,GAAcD,EAAE,GAAGL,CAAL,GAASO,EAAE,GAAGJ,CAAd,GAAkBN,CAAhC;AACAD,EAAAA,QAAQ,CAACY,EAAT,GAAcH,EAAE,GAAGF,CAAL,GAASI,EAAE,GAAGP,CAAd,GAAkBF,CAAhC;AAEAO,EAAAA,EAAE,GAAGT,QAAQ,CAACa,EAAT,GAAcZ,CAAnB;AACAU,EAAAA,EAAE,GAAGX,QAAQ,CAACc,EAAT,GAAcZ,CAAnB;AAEAF,EAAAA,QAAQ,CAACa,EAAT,GAAcJ,EAAE,GAAGL,CAAL,GAASO,EAAE,GAAGJ,CAAd,GAAkBN,CAAhC;AACAD,EAAAA,QAAQ,CAACc,EAAT,GAAcL,EAAE,GAAGF,CAAL,GAASI,EAAE,GAAGP,CAAd,GAAkBF,CAAhC;AAEAO,EAAAA,EAAE,GAAGT,QAAQ,CAACe,EAAT,GAAcd,CAAnB;AACAU,EAAAA,EAAE,GAAGX,QAAQ,CAACgB,EAAT,GAAcd,CAAnB;AAEAF,EAAAA,QAAQ,CAACe,EAAT,GAAcN,EAAE,GAAGL,CAAL,GAASO,EAAE,GAAGJ,CAAd,GAAkBN,CAAhC;AACAD,EAAAA,QAAQ,CAACgB,EAAT,GAAcP,EAAE,GAAGF,CAAL,GAASI,EAAE,GAAGP,CAAd,GAAkBF,CAAhC;AAEA,SAAOF,QAAP;AACH,CAxBD;;AA0BAiB,MAAM,CAACC,OAAP,GAAiBnB,cAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Rotates an entire Triangle at a given angle about a specific point.\r\n *\r\n * @function Phaser.Geom.Triangle.RotateAroundXY\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Triangle} O - [triangle,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to rotate.\r\n * @param {number} x - The X coordinate of the point to rotate the Triangle about.\r\n * @param {number} y - The Y coordinate of the point to rotate the Triangle about.\r\n * @param {number} angle - The angle by which to rotate the Triangle, in radians.\r\n *\r\n * @return {Phaser.Geom.Triangle} The rotated Triangle.\r\n */\r\nvar RotateAroundXY = function (triangle, x, y, angle)\r\n{\r\n    var c = Math.cos(angle);\r\n    var s = Math.sin(angle);\r\n\r\n    var tx = triangle.x1 - x;\r\n    var ty = triangle.y1 - y;\r\n\r\n    triangle.x1 = tx * c - ty * s + x;\r\n    triangle.y1 = tx * s + ty * c + y;\r\n\r\n    tx = triangle.x2 - x;\r\n    ty = triangle.y2 - y;\r\n\r\n    triangle.x2 = tx * c - ty * s + x;\r\n    triangle.y2 = tx * s + ty * c + y;\r\n\r\n    tx = triangle.x3 - x;\r\n    ty = triangle.y3 - y;\r\n\r\n    triangle.x3 = tx * c - ty * s + x;\r\n    triangle.y3 = tx * s + ty * c + y;\r\n\r\n    return triangle;\r\n};\r\n\r\nmodule.exports = RotateAroundXY;\r\n"]},"metadata":{},"sourceType":"script"}