{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Bounce ease-out.\r\n *\r\n * @function Phaser.Math.Easing.Bounce.Out\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n *\r\n * @return {number} The tweened value.\r\n */\nvar Out = function (v) {\n  if (v < 1 / 2.75) {\n    return 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    return 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\n  } else if (v < 2.5 / 2.75) {\n    return 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\n  } else {\n    return 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\n  }\n};\n\nmodule.exports = Out;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/math/easing/bounce/Out.js"],"names":["Out","v","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;AAUA,IAAIA,GAAG,GAAG,UAAUC,CAAV,EACV;AACI,MAAIA,CAAC,GAAG,IAAI,IAAZ,EACA;AACI,WAAO,SAASA,CAAT,GAAaA,CAApB;AACH,GAHD,MAIK,IAAIA,CAAC,GAAG,IAAI,IAAZ,EACL;AACI,WAAO,UAAUA,CAAC,IAAI,MAAM,IAArB,IAA6BA,CAA7B,GAAiC,IAAxC;AACH,GAHI,MAIA,IAAIA,CAAC,GAAG,MAAM,IAAd,EACL;AACI,WAAO,UAAUA,CAAC,IAAI,OAAO,IAAtB,IAA8BA,CAA9B,GAAkC,MAAzC;AACH,GAHI,MAKL;AACI,WAAO,UAAUA,CAAC,IAAI,QAAQ,IAAvB,IAA+BA,CAA/B,GAAmC,QAA1C;AACH;AACJ,CAlBD;;AAoBAC,MAAM,CAACC,OAAP,GAAiBH,GAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Bounce ease-out.\r\n *\r\n * @function Phaser.Math.Easing.Bounce.Out\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n *\r\n * @return {number} The tweened value.\r\n */\r\nvar Out = function (v)\r\n{\r\n    if (v < 1 / 2.75)\r\n    {\r\n        return 7.5625 * v * v;\r\n    }\r\n    else if (v < 2 / 2.75)\r\n    {\r\n        return 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\r\n    }\r\n    else if (v < 2.5 / 2.75)\r\n    {\r\n        return 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\r\n    }\r\n    else\r\n    {\r\n        return 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\r\n    }\r\n};\r\n\r\nmodule.exports = Out;\r\n"]},"metadata":{},"sourceType":"script"}