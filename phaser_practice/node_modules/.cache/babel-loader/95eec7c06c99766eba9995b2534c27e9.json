{"ast":null,"code":"/**\r\n * @author       samme\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar ALIGN_CONST = require('../const');\n\nvar AlignToMap = [];\nAlignToMap[ALIGN_CONST.BOTTOM_CENTER] = require('./BottomCenter');\nAlignToMap[ALIGN_CONST.BOTTOM_LEFT] = require('./BottomLeft');\nAlignToMap[ALIGN_CONST.BOTTOM_RIGHT] = require('./BottomRight');\nAlignToMap[ALIGN_CONST.LEFT_BOTTOM] = require('./LeftBottom');\nAlignToMap[ALIGN_CONST.LEFT_CENTER] = require('./LeftCenter');\nAlignToMap[ALIGN_CONST.LEFT_TOP] = require('./LeftTop');\nAlignToMap[ALIGN_CONST.RIGHT_BOTTOM] = require('./RightBottom');\nAlignToMap[ALIGN_CONST.RIGHT_CENTER] = require('./RightCenter');\nAlignToMap[ALIGN_CONST.RIGHT_TOP] = require('./RightTop');\nAlignToMap[ALIGN_CONST.TOP_CENTER] = require('./TopCenter');\nAlignToMap[ALIGN_CONST.TOP_LEFT] = require('./TopLeft');\nAlignToMap[ALIGN_CONST.TOP_RIGHT] = require('./TopRight');\n/**\r\n * Takes a Game Object and aligns it next to another, at the given position.\r\n * The alignment used is based on the `position` argument, which is a `Phaser.Display.Align` property such as `LEFT_CENTER` or `TOP_RIGHT`.\r\n *\r\n * @function Phaser.Display.Align.To.QuickSet\r\n * @since 3.22.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject} G - [child,$return]\r\n *\r\n * @param {Phaser.GameObjects.GameObject} child - The Game Object that will be positioned.\r\n * @param {Phaser.GameObjects.GameObject} alignTo - The Game Object to base the alignment position on.\r\n * @param {integer} position - The position to align the Game Object with. This is an align constant, such as `Phaser.Display.Align.LEFT_CENTER`.\r\n * @param {number} [offsetX=0] - Optional horizontal offset from the position.\r\n * @param {number} [offsetY=0] - Optional vertical offset from the position.\r\n *\r\n * @return {Phaser.GameObjects.GameObject} The Game Object that was aligned.\r\n */\n\nvar QuickSet = function (child, alignTo, position, offsetX, offsetY) {\n  return AlignToMap[position](child, alignTo, offsetX, offsetY);\n};\n\nmodule.exports = QuickSet;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/display/align/to/QuickSet.js"],"names":["ALIGN_CONST","require","AlignToMap","BOTTOM_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT_BOTTOM","LEFT_CENTER","LEFT_TOP","RIGHT_BOTTOM","RIGHT_CENTER","RIGHT_TOP","TOP_CENTER","TOP_LEFT","TOP_RIGHT","QuickSet","child","alignTo","position","offsetX","offsetY","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,WAAW,GAAGC,OAAO,CAAC,UAAD,CAAzB;;AAEA,IAAIC,UAAU,GAAG,EAAjB;AAEAA,UAAU,CAACF,WAAW,CAACG,aAAb,CAAV,GAAwCF,OAAO,CAAC,gBAAD,CAA/C;AACAC,UAAU,CAACF,WAAW,CAACI,WAAb,CAAV,GAAsCH,OAAO,CAAC,cAAD,CAA7C;AACAC,UAAU,CAACF,WAAW,CAACK,YAAb,CAAV,GAAuCJ,OAAO,CAAC,eAAD,CAA9C;AACAC,UAAU,CAACF,WAAW,CAACM,WAAb,CAAV,GAAsCL,OAAO,CAAC,cAAD,CAA7C;AACAC,UAAU,CAACF,WAAW,CAACO,WAAb,CAAV,GAAsCN,OAAO,CAAC,cAAD,CAA7C;AACAC,UAAU,CAACF,WAAW,CAACQ,QAAb,CAAV,GAAmCP,OAAO,CAAC,WAAD,CAA1C;AACAC,UAAU,CAACF,WAAW,CAACS,YAAb,CAAV,GAAuCR,OAAO,CAAC,eAAD,CAA9C;AACAC,UAAU,CAACF,WAAW,CAACU,YAAb,CAAV,GAAuCT,OAAO,CAAC,eAAD,CAA9C;AACAC,UAAU,CAACF,WAAW,CAACW,SAAb,CAAV,GAAoCV,OAAO,CAAC,YAAD,CAA3C;AACAC,UAAU,CAACF,WAAW,CAACY,UAAb,CAAV,GAAqCX,OAAO,CAAC,aAAD,CAA5C;AACAC,UAAU,CAACF,WAAW,CAACa,QAAb,CAAV,GAAmCZ,OAAO,CAAC,WAAD,CAA1C;AACAC,UAAU,CAACF,WAAW,CAACc,SAAb,CAAV,GAAoCb,OAAO,CAAC,YAAD,CAA3C;AAEA;;;;;;;;;;;;;;;;;;AAiBA,IAAIc,QAAQ,GAAG,UAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,QAA1B,EAAoCC,OAApC,EAA6CC,OAA7C,EACf;AACI,SAAOlB,UAAU,CAACgB,QAAD,CAAV,CAAqBF,KAArB,EAA4BC,OAA5B,EAAqCE,OAArC,EAA8CC,OAA9C,CAAP;AACH,CAHD;;AAKAC,MAAM,CAACC,OAAP,GAAiBP,QAAjB","sourcesContent":["/**\r\n * @author       samme\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar ALIGN_CONST = require('../const');\r\n\r\nvar AlignToMap = [];\r\n\r\nAlignToMap[ALIGN_CONST.BOTTOM_CENTER] = require('./BottomCenter');\r\nAlignToMap[ALIGN_CONST.BOTTOM_LEFT] = require('./BottomLeft');\r\nAlignToMap[ALIGN_CONST.BOTTOM_RIGHT] = require('./BottomRight');\r\nAlignToMap[ALIGN_CONST.LEFT_BOTTOM] = require('./LeftBottom');\r\nAlignToMap[ALIGN_CONST.LEFT_CENTER] = require('./LeftCenter');\r\nAlignToMap[ALIGN_CONST.LEFT_TOP] = require('./LeftTop');\r\nAlignToMap[ALIGN_CONST.RIGHT_BOTTOM] = require('./RightBottom');\r\nAlignToMap[ALIGN_CONST.RIGHT_CENTER] = require('./RightCenter');\r\nAlignToMap[ALIGN_CONST.RIGHT_TOP] = require('./RightTop');\r\nAlignToMap[ALIGN_CONST.TOP_CENTER] = require('./TopCenter');\r\nAlignToMap[ALIGN_CONST.TOP_LEFT] = require('./TopLeft');\r\nAlignToMap[ALIGN_CONST.TOP_RIGHT] = require('./TopRight');\r\n\r\n/**\r\n * Takes a Game Object and aligns it next to another, at the given position.\r\n * The alignment used is based on the `position` argument, which is a `Phaser.Display.Align` property such as `LEFT_CENTER` or `TOP_RIGHT`.\r\n *\r\n * @function Phaser.Display.Align.To.QuickSet\r\n * @since 3.22.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject} G - [child,$return]\r\n *\r\n * @param {Phaser.GameObjects.GameObject} child - The Game Object that will be positioned.\r\n * @param {Phaser.GameObjects.GameObject} alignTo - The Game Object to base the alignment position on.\r\n * @param {integer} position - The position to align the Game Object with. This is an align constant, such as `Phaser.Display.Align.LEFT_CENTER`.\r\n * @param {number} [offsetX=0] - Optional horizontal offset from the position.\r\n * @param {number} [offsetY=0] - Optional vertical offset from the position.\r\n *\r\n * @return {Phaser.GameObjects.GameObject} The Game Object that was aligned.\r\n */\r\nvar QuickSet = function (child, alignTo, position, offsetX, offsetY)\r\n{\r\n    return AlignToMap[position](child, alignTo, offsetX, offsetY);\r\n};\r\n\r\nmodule.exports = QuickSet;\r\n"]},"metadata":{},"sourceType":"script"}