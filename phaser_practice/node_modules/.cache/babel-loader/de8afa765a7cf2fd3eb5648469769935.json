{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * The Impact Body Scale component.\r\n * Should be applied as a mixin.\r\n *\r\n * @namespace Phaser.Physics.Impact.Components.BodyScale\r\n * @since 3.0.0\r\n */\nvar BodyScale = {\n  /**\r\n   * Sets the size of the physics body.\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.BodyScale#setBodySize\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} width - The width of the body in pixels.\r\n   * @param {number} [height=width] - The height of the body in pixels.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setBodySize: function (width, height) {\n    if (height === undefined) {\n      height = width;\n    }\n\n    this.body.size.x = Math.round(width);\n    this.body.size.y = Math.round(height);\n    return this;\n  },\n\n  /**\r\n   * Sets the scale of the physics body.\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.BodyScale#setBodyScale\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} scaleX - The horizontal scale of the body.\r\n   * @param {number} [scaleY] - The vertical scale of the body. If not given, will use the horizontal scale value.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setBodyScale: function (scaleX, scaleY) {\n    if (scaleY === undefined) {\n      scaleY = scaleX;\n    }\n\n    var gameObject = this.body.gameObject;\n\n    if (gameObject) {\n      gameObject.setScale(scaleX, scaleY);\n      return this.setBodySize(gameObject.width * gameObject.scaleX, gameObject.height * gameObject.scaleY);\n    } else {\n      return this.setBodySize(this.body.size.x * scaleX, this.body.size.y * scaleY);\n    }\n  }\n};\nmodule.exports = BodyScale;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/impact/components/BodyScale.js"],"names":["BodyScale","setBodySize","width","height","undefined","body","size","x","Math","round","y","setBodyScale","scaleX","scaleY","gameObject","setScale","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;AAOA,IAAIA,SAAS,GAAG;AAEZ;;;;;;;;;;;AAWAC,EAAAA,WAAW,EAAE,UAAUC,KAAV,EAAiBC,MAAjB,EACb;AACI,QAAIA,MAAM,KAAKC,SAAf,EAA0B;AAAED,MAAAA,MAAM,GAAGD,KAAT;AAAiB;;AAE7C,SAAKG,IAAL,CAAUC,IAAV,CAAeC,CAAf,GAAmBC,IAAI,CAACC,KAAL,CAAWP,KAAX,CAAnB;AACA,SAAKG,IAAL,CAAUC,IAAV,CAAeI,CAAf,GAAmBF,IAAI,CAACC,KAAL,CAAWN,MAAX,CAAnB;AAEA,WAAO,IAAP;AACH,GArBW;;AAuBZ;;;;;;;;;;;AAWAQ,EAAAA,YAAY,EAAE,UAAUC,MAAV,EAAkBC,MAAlB,EACd;AACI,QAAIA,MAAM,KAAKT,SAAf,EAA0B;AAAES,MAAAA,MAAM,GAAGD,MAAT;AAAkB;;AAE9C,QAAIE,UAAU,GAAG,KAAKT,IAAL,CAAUS,UAA3B;;AAEA,QAAIA,UAAJ,EACA;AACIA,MAAAA,UAAU,CAACC,QAAX,CAAoBH,MAApB,EAA4BC,MAA5B;AAEA,aAAO,KAAKZ,WAAL,CAAiBa,UAAU,CAACZ,KAAX,GAAmBY,UAAU,CAACF,MAA/C,EAAuDE,UAAU,CAACX,MAAX,GAAoBW,UAAU,CAACD,MAAtF,CAAP;AACH,KALD,MAOA;AACI,aAAO,KAAKZ,WAAL,CAAiB,KAAKI,IAAL,CAAUC,IAAV,CAAeC,CAAf,GAAmBK,MAApC,EAA4C,KAAKP,IAAL,CAAUC,IAAV,CAAeI,CAAf,GAAmBG,MAA/D,CAAP;AACH;AACJ;AAlDW,CAAhB;AAsDAG,MAAM,CAACC,OAAP,GAAiBjB,SAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Impact Body Scale component.\r\n * Should be applied as a mixin.\r\n *\r\n * @namespace Phaser.Physics.Impact.Components.BodyScale\r\n * @since 3.0.0\r\n */\r\nvar BodyScale = {\r\n\r\n    /**\r\n     * Sets the size of the physics body.\r\n     *\r\n     * @method Phaser.Physics.Impact.Components.BodyScale#setBodySize\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} width - The width of the body in pixels.\r\n     * @param {number} [height=width] - The height of the body in pixels.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setBodySize: function (width, height)\r\n    {\r\n        if (height === undefined) { height = width; }\r\n\r\n        this.body.size.x = Math.round(width);\r\n        this.body.size.y = Math.round(height);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the scale of the physics body.\r\n     *\r\n     * @method Phaser.Physics.Impact.Components.BodyScale#setBodyScale\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} scaleX - The horizontal scale of the body.\r\n     * @param {number} [scaleY] - The vertical scale of the body. If not given, will use the horizontal scale value.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setBodyScale: function (scaleX, scaleY)\r\n    {\r\n        if (scaleY === undefined) { scaleY = scaleX; }\r\n\r\n        var gameObject = this.body.gameObject;\r\n\r\n        if (gameObject)\r\n        {\r\n            gameObject.setScale(scaleX, scaleY);\r\n\r\n            return this.setBodySize(gameObject.width * gameObject.scaleX, gameObject.height * gameObject.scaleY);\r\n        }\r\n        else\r\n        {\r\n            return this.setBodySize(this.body.size.x * scaleX, this.body.size.y * scaleY);\r\n        }\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = BodyScale;\r\n"]},"metadata":{},"sourceType":"script"}