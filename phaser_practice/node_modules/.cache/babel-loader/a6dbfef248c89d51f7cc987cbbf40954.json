{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Triangle = require('./Triangle'); //  Builds a right triangle, with one 90 degree angle and two acute angles\n//  The x/y is the coordinate of the 90 degree angle (and will map to x1/y1 in the resulting Triangle)\n//  w/h can be positive or negative and represent the length of each side\n\n/**\r\n * Builds a right triangle, i.e. one which has a 90-degree angle and two acute angles.\r\n *\r\n * @function Phaser.Geom.Triangle.BuildRight\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The X coordinate of the right angle, which will also be the first X coordinate of the constructed Triangle.\r\n * @param {number} y - The Y coordinate of the right angle, which will also be the first Y coordinate of the constructed Triangle.\r\n * @param {number} width - The length of the side which is to the left or to the right of the right angle.\r\n * @param {number} height - The length of the side which is above or below the right angle.\r\n *\r\n * @return {Phaser.Geom.Triangle} The constructed right Triangle.\r\n */\n\n\nvar BuildRight = function (x, y, width, height) {\n  if (height === undefined) {\n    height = width;\n  } //  90 degree angle\n\n\n  var x1 = x;\n  var y1 = y;\n  var x2 = x;\n  var y2 = y - height;\n  var x3 = x + width;\n  var y3 = y;\n  return new Triangle(x1, y1, x2, y2, x3, y3);\n};\n\nmodule.exports = BuildRight;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/triangle/BuildRight.js"],"names":["Triangle","require","BuildRight","x","y","width","height","undefined","x1","y1","x2","y2","x3","y3","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB,C,CAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;AAaA,IAAIC,UAAU,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,KAAhB,EAAuBC,MAAvB,EACjB;AACI,MAAIA,MAAM,KAAKC,SAAf,EAA0B;AAAED,IAAAA,MAAM,GAAGD,KAAT;AAAiB,GADjD,CAGI;;;AACA,MAAIG,EAAE,GAAGL,CAAT;AACA,MAAIM,EAAE,GAAGL,CAAT;AAEA,MAAIM,EAAE,GAAGP,CAAT;AACA,MAAIQ,EAAE,GAAGP,CAAC,GAAGE,MAAb;AAEA,MAAIM,EAAE,GAAGT,CAAC,GAAGE,KAAb;AACA,MAAIQ,EAAE,GAAGT,CAAT;AAEA,SAAO,IAAIJ,QAAJ,CAAaQ,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,CAAP;AACH,CAfD;;AAiBAC,MAAM,CAACC,OAAP,GAAiBb,UAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Triangle = require('./Triangle');\r\n\r\n//  Builds a right triangle, with one 90 degree angle and two acute angles\r\n//  The x/y is the coordinate of the 90 degree angle (and will map to x1/y1 in the resulting Triangle)\r\n//  w/h can be positive or negative and represent the length of each side\r\n\r\n/**\r\n * Builds a right triangle, i.e. one which has a 90-degree angle and two acute angles.\r\n *\r\n * @function Phaser.Geom.Triangle.BuildRight\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The X coordinate of the right angle, which will also be the first X coordinate of the constructed Triangle.\r\n * @param {number} y - The Y coordinate of the right angle, which will also be the first Y coordinate of the constructed Triangle.\r\n * @param {number} width - The length of the side which is to the left or to the right of the right angle.\r\n * @param {number} height - The length of the side which is above or below the right angle.\r\n *\r\n * @return {Phaser.Geom.Triangle} The constructed right Triangle.\r\n */\r\nvar BuildRight = function (x, y, width, height)\r\n{\r\n    if (height === undefined) { height = width; }\r\n\r\n    //  90 degree angle\r\n    var x1 = x;\r\n    var y1 = y;\r\n\r\n    var x2 = x;\r\n    var y2 = y - height;\r\n\r\n    var x3 = x + width;\r\n    var y3 = y;\r\n\r\n    return new Triangle(x1, y1, x2, y2, x3, y3);\r\n};\r\n\r\nmodule.exports = BuildRight;\r\n"]},"metadata":{},"sourceType":"script"}