{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n// The 2D area of a triangle. The area value is always non-negative.\n\n/**\r\n * Returns the area of a Triangle.\r\n *\r\n * @function Phaser.Geom.Triangle.Area\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to use.\r\n *\r\n * @return {number} The area of the Triangle, always non-negative.\r\n */\nvar Area = function (triangle) {\n  var x1 = triangle.x1;\n  var y1 = triangle.y1;\n  var x2 = triangle.x2;\n  var y2 = triangle.y2;\n  var x3 = triangle.x3;\n  var y3 = triangle.y3;\n  return Math.abs(((x3 - x1) * (y2 - y1) - (x2 - x1) * (y3 - y1)) / 2);\n};\n\nmodule.exports = Area;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/triangle/Area.js"],"names":["Area","triangle","x1","y1","x2","y2","x3","y3","Math","abs","module","exports"],"mappings":"AAAA;;;;;AAMA;;AAEA;;;;;;;;;;AAUA,IAAIA,IAAI,GAAG,UAAUC,QAAV,EACX;AACI,MAAIC,EAAE,GAAGD,QAAQ,CAACC,EAAlB;AACA,MAAIC,EAAE,GAAGF,QAAQ,CAACE,EAAlB;AAEA,MAAIC,EAAE,GAAGH,QAAQ,CAACG,EAAlB;AACA,MAAIC,EAAE,GAAGJ,QAAQ,CAACI,EAAlB;AAEA,MAAIC,EAAE,GAAGL,QAAQ,CAACK,EAAlB;AACA,MAAIC,EAAE,GAAGN,QAAQ,CAACM,EAAlB;AAEA,SAAOC,IAAI,CAACC,GAAL,CAAS,CAAC,CAACH,EAAE,GAAGJ,EAAN,KAAaG,EAAE,GAAGF,EAAlB,IAAwB,CAACC,EAAE,GAAGF,EAAN,KAAaK,EAAE,GAAGJ,EAAlB,CAAzB,IAAkD,CAA3D,CAAP;AACH,CAZD;;AAcAO,MAAM,CAACC,OAAP,GAAiBX,IAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n// The 2D area of a triangle. The area value is always non-negative.\r\n\r\n/**\r\n * Returns the area of a Triangle.\r\n *\r\n * @function Phaser.Geom.Triangle.Area\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to use.\r\n *\r\n * @return {number} The area of the Triangle, always non-negative.\r\n */\r\nvar Area = function (triangle)\r\n{\r\n    var x1 = triangle.x1;\r\n    var y1 = triangle.y1;\r\n\r\n    var x2 = triangle.x2;\r\n    var y2 = triangle.y2;\r\n\r\n    var x3 = triangle.x3;\r\n    var y3 = triangle.y3;\r\n\r\n    return Math.abs(((x3 - x1) * (y2 - y1) - (x2 - x1) * (y3 - y1)) / 2);\r\n};\r\n\r\nmodule.exports = Area;\r\n"]},"metadata":{},"sourceType":"script"}