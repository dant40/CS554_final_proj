{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Takes an array of objects and returns the first element in the array that has properties which match\r\n * all of those specified in the `compare` object. For example, if the compare object was: `{ scaleX: 0.5, alpha: 1 }`\r\n * then it would return the first item which had the property `scaleX` set to 0.5 and `alpha` set to 1.\r\n *\r\n * To use this with a Group: `GetFirst(group.getChildren(), compare, index)`\r\n *\r\n * @function Phaser.Actions.GetFirst\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be searched by this action.\r\n * @param {object} compare - The comparison object. Each property in this object will be checked against the items of the array.\r\n * @param {integer} [index=0] - An optional offset to start searching from within the items array.\r\n *\r\n * @return {?(object|Phaser.GameObjects.GameObject)} The first object in the array that matches the comparison object, or `null` if no match was found.\r\n */\nvar GetFirst = function (items, compare, index) {\n  if (index === undefined) {\n    index = 0;\n  }\n\n  for (var i = index; i < items.length; i++) {\n    var item = items[i];\n    var match = true;\n\n    for (var property in compare) {\n      if (item[property] !== compare[property]) {\n        match = false;\n      }\n    }\n\n    if (match) {\n      return item;\n    }\n  }\n\n  return null;\n};\n\nmodule.exports = GetFirst;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/actions/GetFirst.js"],"names":["GetFirst","items","compare","index","undefined","i","length","item","match","property","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;;;;;AAkBA,IAAIA,QAAQ,GAAG,UAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,KAA1B,EACf;AACI,MAAIA,KAAK,KAAKC,SAAd,EAAyB;AAAED,IAAAA,KAAK,GAAG,CAAR;AAAY;;AAEvC,OAAK,IAAIE,CAAC,GAAGF,KAAb,EAAoBE,CAAC,GAAGJ,KAAK,CAACK,MAA9B,EAAsCD,CAAC,EAAvC,EACA;AACI,QAAIE,IAAI,GAAGN,KAAK,CAACI,CAAD,CAAhB;AAEA,QAAIG,KAAK,GAAG,IAAZ;;AAEA,SAAK,IAAIC,QAAT,IAAqBP,OAArB,EACA;AACI,UAAIK,IAAI,CAACE,QAAD,CAAJ,KAAmBP,OAAO,CAACO,QAAD,CAA9B,EACA;AACID,QAAAA,KAAK,GAAG,KAAR;AACH;AACJ;;AAED,QAAIA,KAAJ,EACA;AACI,aAAOD,IAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH,CAzBD;;AA2BAG,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Takes an array of objects and returns the first element in the array that has properties which match\r\n * all of those specified in the `compare` object. For example, if the compare object was: `{ scaleX: 0.5, alpha: 1 }`\r\n * then it would return the first item which had the property `scaleX` set to 0.5 and `alpha` set to 1.\r\n *\r\n * To use this with a Group: `GetFirst(group.getChildren(), compare, index)`\r\n *\r\n * @function Phaser.Actions.GetFirst\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be searched by this action.\r\n * @param {object} compare - The comparison object. Each property in this object will be checked against the items of the array.\r\n * @param {integer} [index=0] - An optional offset to start searching from within the items array.\r\n *\r\n * @return {?(object|Phaser.GameObjects.GameObject)} The first object in the array that matches the comparison object, or `null` if no match was found.\r\n */\r\nvar GetFirst = function (items, compare, index)\r\n{\r\n    if (index === undefined) { index = 0; }\r\n\r\n    for (var i = index; i < items.length; i++)\r\n    {\r\n        var item = items[i];\r\n\r\n        var match = true;\r\n\r\n        for (var property in compare)\r\n        {\r\n            if (item[property] !== compare[property])\r\n            {\r\n                match = false;\r\n            }\r\n        }\r\n\r\n        if (match)\r\n        {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nmodule.exports = GetFirst;\r\n"]},"metadata":{},"sourceType":"script"}