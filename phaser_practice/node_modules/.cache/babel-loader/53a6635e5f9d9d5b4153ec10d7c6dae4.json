{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar GameObjectCreator = require('../GameObjectCreator');\n\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\n\nvar GetFastValue = require('../../utils/object/GetFastValue');\n\nvar ParticleEmitterManager = require('./ParticleEmitterManager');\n/**\r\n * Creates a new Particle Emitter Manager Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Particles Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#particles\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Particles.ParticleEmitterManager} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('particles', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  }\n\n  var key = GetAdvancedValue(config, 'key', null);\n  var frame = GetAdvancedValue(config, 'frame', null);\n  var emitters = GetFastValue(config, 'emitters', null); //  frame is optional and can contain the emitters array or object if skipped\n\n  var manager = new ParticleEmitterManager(this.scene, key, frame, emitters);\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  var add = GetFastValue(config, 'add', false);\n\n  if (add) {\n    this.displayList.add(manager);\n  }\n\n  this.updateList.add(manager);\n  return manager;\n});","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/particles/ParticleManagerCreator.js"],"names":["GameObjectCreator","require","GetAdvancedValue","GetFastValue","ParticleEmitterManager","register","config","addToScene","undefined","key","frame","emitters","manager","scene","add","displayList","updateList"],"mappings":"AAAA;;;;;AAMA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,sBAAD,CAA/B;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,qCAAD,CAA9B;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,iCAAD,CAA1B;;AACA,IAAIG,sBAAsB,GAAGH,OAAO,CAAC,0BAAD,CAApC;AAEA;;;;;;;;;;;;;;;AAaAD,iBAAiB,CAACK,QAAlB,CAA2B,WAA3B,EAAwC,UAAUC,MAAV,EAAkBC,UAAlB,EACxC;AACI,MAAID,MAAM,KAAKE,SAAf,EAA0B;AAAEF,IAAAA,MAAM,GAAG,EAAT;AAAc;;AAE1C,MAAIG,GAAG,GAAGP,gBAAgB,CAACI,MAAD,EAAS,KAAT,EAAgB,IAAhB,CAA1B;AACA,MAAII,KAAK,GAAGR,gBAAgB,CAACI,MAAD,EAAS,OAAT,EAAkB,IAAlB,CAA5B;AACA,MAAIK,QAAQ,GAAGR,YAAY,CAACG,MAAD,EAAS,UAAT,EAAqB,IAArB,CAA3B,CALJ,CAOI;;AACA,MAAIM,OAAO,GAAG,IAAIR,sBAAJ,CAA2B,KAAKS,KAAhC,EAAuCJ,GAAvC,EAA4CC,KAA5C,EAAmDC,QAAnD,CAAd;;AAEA,MAAIJ,UAAU,KAAKC,SAAnB,EACA;AACIF,IAAAA,MAAM,CAACQ,GAAP,GAAaP,UAAb;AACH;;AAED,MAAIO,GAAG,GAAGX,YAAY,CAACG,MAAD,EAAS,KAAT,EAAgB,KAAhB,CAAtB;;AAEA,MAAIQ,GAAJ,EACA;AACI,SAAKC,WAAL,CAAiBD,GAAjB,CAAqBF,OAArB;AACH;;AAED,OAAKI,UAAL,CAAgBF,GAAhB,CAAoBF,OAApB;AAEA,SAAOA,OAAP;AACH,CA1BD","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GameObjectCreator = require('../GameObjectCreator');\r\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\nvar ParticleEmitterManager = require('./ParticleEmitterManager');\r\n\r\n/**\r\n * Creates a new Particle Emitter Manager Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Particles Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#particles\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Particles.ParticleEmitterManager} The Game Object that was created.\r\n */\r\nGameObjectCreator.register('particles', function (config, addToScene)\r\n{\r\n    if (config === undefined) { config = {}; }\r\n\r\n    var key = GetAdvancedValue(config, 'key', null);\r\n    var frame = GetAdvancedValue(config, 'frame', null);\r\n    var emitters = GetFastValue(config, 'emitters', null);\r\n\r\n    //  frame is optional and can contain the emitters array or object if skipped\r\n    var manager = new ParticleEmitterManager(this.scene, key, frame, emitters);\r\n\r\n    if (addToScene !== undefined)\r\n    {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    var add = GetFastValue(config, 'add', false);\r\n\r\n    if (add)\r\n    {\r\n        this.displayList.add(manager);\r\n    }\r\n\r\n    this.updateList.add(manager);\r\n\r\n    return manager;\r\n});\r\n"]},"metadata":{},"sourceType":"script"}