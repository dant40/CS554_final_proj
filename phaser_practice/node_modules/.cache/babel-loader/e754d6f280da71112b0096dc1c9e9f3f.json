{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n\nvar GetFastValue = require('../../utils/object/GetFastValue');\n/**\r\n * @classdesc\r\n * A class for representing a Tiled object layer in a map. This mirrors the structure of a Tiled\r\n * object layer, except:\r\n *  - \"x\" & \"y\" properties are ignored since these cannot be changed in Tiled.\r\n *  - \"offsetx\" & \"offsety\" are applied to the individual object coordinates directly, so they\r\n *    are ignored as well.\r\n *  - \"draworder\" is ignored.\r\n *\r\n * @class ObjectLayer\r\n * @memberof Phaser.Tilemaps\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Types.Tilemaps.ObjectLayerConfig} [config] - The data for the layer from the Tiled JSON object.\r\n */\n\n\nvar ObjectLayer = new Class({\n  initialize: function ObjectLayer(config) {\n    if (config === undefined) {\n      config = {};\n    }\n    /**\r\n     * The name of the Object Layer.\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#name\r\n     * @type {string}\r\n     * @since 3.0.0\r\n     */\n\n\n    this.name = GetFastValue(config, 'name', 'object layer');\n    /**\r\n     * The opacity of the layer, between 0 and 1.\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#opacity\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.opacity = GetFastValue(config, 'opacity', 1);\n    /**\r\n     * The custom properties defined on the Object Layer, keyed by their name.\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#properties\r\n     * @type {object}\r\n     * @since 3.0.0\r\n     */\n\n    this.properties = GetFastValue(config, 'properties', {});\n    /**\r\n     * The type of each custom property defined on the Object Layer, keyed by its name.\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#propertyTypes\r\n     * @type {object}\r\n     * @since 3.0.0\r\n     */\n\n    this.propertyTypes = GetFastValue(config, 'propertytypes', {});\n    /**\r\n     * The type of the layer, which should be `objectgroup`.\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#type\r\n     * @type {string}\r\n     * @since 3.0.0\r\n     */\n\n    this.type = GetFastValue(config, 'type', 'objectgroup');\n    /**\r\n     * Whether the layer is shown (`true`) or hidden (`false`).\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#visible\r\n     * @type {boolean}\r\n     * @since 3.0.0\r\n     */\n\n    this.visible = GetFastValue(config, 'visible', true);\n    /**\r\n     * An array of all objects on this Object Layer.\r\n     *\r\n     * Each Tiled object corresponds to a JavaScript object in this array. It has an `id` (unique),\r\n     * `name` (as assigned in Tiled), `type` (as assigned in Tiled), `rotation` (in clockwise degrees),\r\n     * `properties` (if any), `visible` state (`true` if visible, `false` otherwise),\r\n     * `x` and `y` coordinates (in pixels, relative to the tilemap), and a `width` and `height` (in pixels).\r\n     *\r\n     * An object tile has a `gid` property (GID of the represented tile), a `flippedHorizontal` property,\r\n     * a `flippedVertical` property, and `flippedAntiDiagonal` property.\r\n     * The {@link http://docs.mapeditor.org/en/latest/reference/tmx-map-format/|Tiled documentation} contains\r\n     * information on flipping and rotation.\r\n     *\r\n     * Polylines have a `polyline` property, which is an array of objects corresponding to points,\r\n     * where each point has an `x` property and a `y` property. Polygons have an identically structured\r\n     * array in their `polygon` property. Text objects have a `text` property with the text's properties.\r\n     *\r\n     * Rectangles and ellipses have a `rectangle` or `ellipse` property set to `true`.\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#objects\r\n     * @type {Phaser.Types.Tilemaps.TiledObject[]}\r\n     * @since 3.0.0\r\n     */\n\n    this.objects = GetFastValue(config, 'objects', []);\n  }\n});\nmodule.exports = ObjectLayer;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/tilemaps/mapdata/ObjectLayer.js"],"names":["Class","require","GetFastValue","ObjectLayer","initialize","config","undefined","name","opacity","properties","propertyTypes","type","visible","objects","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,iCAAD,CAA1B;AAEA;;;;;;;;;;;;;;;;;;AAgBA,IAAIE,WAAW,GAAG,IAAIH,KAAJ,CAAU;AAExBI,EAAAA,UAAU,EAEV,SAASD,WAAT,CAAsBE,MAAtB,EACA;AACI,QAAIA,MAAM,KAAKC,SAAf,EAA0B;AAAED,MAAAA,MAAM,GAAG,EAAT;AAAc;AAE1C;;;;;;;;;AAOA,SAAKE,IAAL,GAAYL,YAAY,CAACG,MAAD,EAAS,MAAT,EAAiB,cAAjB,CAAxB;AAEA;;;;;;;;AAOA,SAAKG,OAAL,GAAeN,YAAY,CAACG,MAAD,EAAS,SAAT,EAAoB,CAApB,CAA3B;AAEA;;;;;;;;AAOA,SAAKI,UAAL,GAAkBP,YAAY,CAACG,MAAD,EAAS,YAAT,EAAuB,EAAvB,CAA9B;AAEA;;;;;;;;AAOA,SAAKK,aAAL,GAAqBR,YAAY,CAACG,MAAD,EAAS,eAAT,EAA0B,EAA1B,CAAjC;AAEA;;;;;;;;AAOA,SAAKM,IAAL,GAAYT,YAAY,CAACG,MAAD,EAAS,MAAT,EAAiB,aAAjB,CAAxB;AAEA;;;;;;;;AAOA,SAAKO,OAAL,GAAeV,YAAY,CAACG,MAAD,EAAS,SAAT,EAAoB,IAApB,CAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAKQ,OAAL,GAAeX,YAAY,CAACG,MAAD,EAAS,SAAT,EAAoB,EAApB,CAA3B;AACH;AAtFuB,CAAV,CAAlB;AA0FAS,MAAM,CAACC,OAAP,GAAiBZ,WAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\n\r\n/**\r\n * @classdesc\r\n * A class for representing a Tiled object layer in a map. This mirrors the structure of a Tiled\r\n * object layer, except:\r\n *  - \"x\" & \"y\" properties are ignored since these cannot be changed in Tiled.\r\n *  - \"offsetx\" & \"offsety\" are applied to the individual object coordinates directly, so they\r\n *    are ignored as well.\r\n *  - \"draworder\" is ignored.\r\n *\r\n * @class ObjectLayer\r\n * @memberof Phaser.Tilemaps\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Types.Tilemaps.ObjectLayerConfig} [config] - The data for the layer from the Tiled JSON object.\r\n */\r\nvar ObjectLayer = new Class({\r\n\r\n    initialize:\r\n\r\n    function ObjectLayer (config)\r\n    {\r\n        if (config === undefined) { config = {}; }\r\n\r\n        /**\r\n         * The name of the Object Layer.\r\n         *\r\n         * @name Phaser.Tilemaps.ObjectLayer#name\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.name = GetFastValue(config, 'name', 'object layer');\r\n\r\n        /**\r\n         * The opacity of the layer, between 0 and 1.\r\n         *\r\n         * @name Phaser.Tilemaps.ObjectLayer#opacity\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.opacity = GetFastValue(config, 'opacity', 1);\r\n\r\n        /**\r\n         * The custom properties defined on the Object Layer, keyed by their name.\r\n         *\r\n         * @name Phaser.Tilemaps.ObjectLayer#properties\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.properties = GetFastValue(config, 'properties', {});\r\n\r\n        /**\r\n         * The type of each custom property defined on the Object Layer, keyed by its name.\r\n         *\r\n         * @name Phaser.Tilemaps.ObjectLayer#propertyTypes\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.propertyTypes = GetFastValue(config, 'propertytypes', {});\r\n\r\n        /**\r\n         * The type of the layer, which should be `objectgroup`.\r\n         *\r\n         * @name Phaser.Tilemaps.ObjectLayer#type\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.type = GetFastValue(config, 'type', 'objectgroup');\r\n\r\n        /**\r\n         * Whether the layer is shown (`true`) or hidden (`false`).\r\n         *\r\n         * @name Phaser.Tilemaps.ObjectLayer#visible\r\n         * @type {boolean}\r\n         * @since 3.0.0\r\n         */\r\n        this.visible = GetFastValue(config, 'visible', true);\r\n\r\n        /**\r\n         * An array of all objects on this Object Layer.\r\n         *\r\n         * Each Tiled object corresponds to a JavaScript object in this array. It has an `id` (unique),\r\n         * `name` (as assigned in Tiled), `type` (as assigned in Tiled), `rotation` (in clockwise degrees),\r\n         * `properties` (if any), `visible` state (`true` if visible, `false` otherwise),\r\n         * `x` and `y` coordinates (in pixels, relative to the tilemap), and a `width` and `height` (in pixels).\r\n         *\r\n         * An object tile has a `gid` property (GID of the represented tile), a `flippedHorizontal` property,\r\n         * a `flippedVertical` property, and `flippedAntiDiagonal` property.\r\n         * The {@link http://docs.mapeditor.org/en/latest/reference/tmx-map-format/|Tiled documentation} contains\r\n         * information on flipping and rotation.\r\n         *\r\n         * Polylines have a `polyline` property, which is an array of objects corresponding to points,\r\n         * where each point has an `x` property and a `y` property. Polygons have an identically structured\r\n         * array in their `polygon` property. Text objects have a `text` property with the text's properties.\r\n         *\r\n         * Rectangles and ellipses have a `rectangle` or `ellipse` property set to `true`.\r\n         *\r\n         * @name Phaser.Tilemaps.ObjectLayer#objects\r\n         * @type {Phaser.Types.Tilemaps.TiledObject[]}\r\n         * @since 3.0.0\r\n         */\r\n        this.objects = GetFastValue(config, 'objects', []);\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = ObjectLayer;\r\n"]},"metadata":{},"sourceType":"script"}