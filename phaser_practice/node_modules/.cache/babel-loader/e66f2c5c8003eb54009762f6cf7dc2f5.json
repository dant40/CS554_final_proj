{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar IsPlainObject = require('./IsPlainObject'); // @param {boolean} deep - Perform a deep copy?\n// @param {object} target - The target object to copy to.\n// @return {object} The extended object.\n\n/**\r\n * This is a slightly modified version of http://api.jquery.com/jQuery.extend/\r\n *\r\n * @function Phaser.Utils.Objects.Extend\r\n * @since 3.0.0\r\n *\r\n * @return {object} The extended object.\r\n */\n\n\nvar Extend = function () {\n  var options,\n      name,\n      src,\n      copy,\n      copyIsArray,\n      clone,\n      target = arguments[0] || {},\n      i = 1,\n      length = arguments.length,\n      deep = false; // Handle a deep copy situation\n\n  if (typeof target === 'boolean') {\n    deep = target;\n    target = arguments[1] || {}; // skip the boolean and the target\n\n    i = 2;\n  } // extend Phaser if only one argument is passed\n\n\n  if (length === i) {\n    target = this;\n    --i;\n  }\n\n  for (; i < length; i++) {\n    // Only deal with non-null/undefined values\n    if ((options = arguments[i]) != null) {\n      // Extend the base object\n      for (name in options) {\n        src = target[name];\n        copy = options[name]; // Prevent never-ending loop\n\n        if (target === copy) {\n          continue;\n        } // Recurse if we're merging plain objects or arrays\n\n\n        if (deep && copy && (IsPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n          if (copyIsArray) {\n            copyIsArray = false;\n            clone = src && Array.isArray(src) ? src : [];\n          } else {\n            clone = src && IsPlainObject(src) ? src : {};\n          } // Never move original objects, clone them\n\n\n          target[name] = Extend(deep, clone, copy); // Don't bring in undefined values\n        } else if (copy !== undefined) {\n          target[name] = copy;\n        }\n      }\n    }\n  } // Return the modified object\n\n\n  return target;\n};\n\nmodule.exports = Extend;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/object/Extend.js"],"names":["IsPlainObject","require","Extend","options","name","src","copy","copyIsArray","clone","target","arguments","i","length","deep","Array","isArray","undefined","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B,C,CAEA;AACA;AACA;;AAEA;;;;;;;;;;AAQA,IAAIC,MAAM,GAAG,YACb;AACI,MAAIC,OAAJ;AAAA,MAAaC,IAAb;AAAA,MAAmBC,GAAnB;AAAA,MAAwBC,IAAxB;AAAA,MAA8BC,WAA9B;AAAA,MAA2CC,KAA3C;AAAA,MACIC,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAT,IAAgB,EAD7B;AAAA,MAEIC,CAAC,GAAG,CAFR;AAAA,MAGIC,MAAM,GAAGF,SAAS,CAACE,MAHvB;AAAA,MAIIC,IAAI,GAAG,KAJX,CADJ,CAOI;;AACA,MAAI,OAAOJ,MAAP,KAAkB,SAAtB,EACA;AACII,IAAAA,IAAI,GAAGJ,MAAP;AACAA,IAAAA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAT,IAAgB,EAAzB,CAFJ,CAII;;AACAC,IAAAA,CAAC,GAAG,CAAJ;AACH,GAfL,CAiBI;;;AACA,MAAIC,MAAM,KAAKD,CAAf,EACA;AACIF,IAAAA,MAAM,GAAG,IAAT;AACA,MAAEE,CAAF;AACH;;AAED,SAAOA,CAAC,GAAGC,MAAX,EAAmBD,CAAC,EAApB,EACA;AACI;AACA,QAAI,CAACR,OAAO,GAAGO,SAAS,CAACC,CAAD,CAApB,KAA4B,IAAhC,EACA;AACI;AACA,WAAKP,IAAL,IAAaD,OAAb,EACA;AACIE,QAAAA,GAAG,GAAGI,MAAM,CAACL,IAAD,CAAZ;AACAE,QAAAA,IAAI,GAAGH,OAAO,CAACC,IAAD,CAAd,CAFJ,CAII;;AACA,YAAIK,MAAM,KAAKH,IAAf,EACA;AACI;AACH,SARL,CAUI;;;AACA,YAAIO,IAAI,IAAIP,IAAR,KAAiBN,aAAa,CAACM,IAAD,CAAb,KAAwBC,WAAW,GAAGO,KAAK,CAACC,OAAN,CAAcT,IAAd,CAAtC,CAAjB,CAAJ,EACA;AACI,cAAIC,WAAJ,EACA;AACIA,YAAAA,WAAW,GAAG,KAAd;AACAC,YAAAA,KAAK,GAAGH,GAAG,IAAIS,KAAK,CAACC,OAAN,CAAcV,GAAd,CAAP,GAA4BA,GAA5B,GAAkC,EAA1C;AACH,WAJD,MAMA;AACIG,YAAAA,KAAK,GAAGH,GAAG,IAAIL,aAAa,CAACK,GAAD,CAApB,GAA4BA,GAA5B,GAAkC,EAA1C;AACH,WATL,CAWI;;;AACAI,UAAAA,MAAM,CAACL,IAAD,CAAN,GAAeF,MAAM,CAACW,IAAD,EAAOL,KAAP,EAAcF,IAAd,CAArB,CAZJ,CAcA;AACC,SAhBD,MAiBK,IAAIA,IAAI,KAAKU,SAAb,EACL;AACIP,UAAAA,MAAM,CAACL,IAAD,CAAN,GAAeE,IAAf;AACH;AACJ;AACJ;AACJ,GAjEL,CAmEI;;;AACA,SAAOG,MAAP;AACH,CAtED;;AAwEAQ,MAAM,CAACC,OAAP,GAAiBhB,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar IsPlainObject = require('./IsPlainObject');\r\n\r\n// @param {boolean} deep - Perform a deep copy?\r\n// @param {object} target - The target object to copy to.\r\n// @return {object} The extended object.\r\n\r\n/**\r\n * This is a slightly modified version of http://api.jquery.com/jQuery.extend/\r\n *\r\n * @function Phaser.Utils.Objects.Extend\r\n * @since 3.0.0\r\n *\r\n * @return {object} The extended object.\r\n */\r\nvar Extend = function ()\r\n{\r\n    var options, name, src, copy, copyIsArray, clone,\r\n        target = arguments[0] || {},\r\n        i = 1,\r\n        length = arguments.length,\r\n        deep = false;\r\n\r\n    // Handle a deep copy situation\r\n    if (typeof target === 'boolean')\r\n    {\r\n        deep = target;\r\n        target = arguments[1] || {};\r\n\r\n        // skip the boolean and the target\r\n        i = 2;\r\n    }\r\n\r\n    // extend Phaser if only one argument is passed\r\n    if (length === i)\r\n    {\r\n        target = this;\r\n        --i;\r\n    }\r\n\r\n    for (; i < length; i++)\r\n    {\r\n        // Only deal with non-null/undefined values\r\n        if ((options = arguments[i]) != null)\r\n        {\r\n            // Extend the base object\r\n            for (name in options)\r\n            {\r\n                src = target[name];\r\n                copy = options[name];\r\n\r\n                // Prevent never-ending loop\r\n                if (target === copy)\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                // Recurse if we're merging plain objects or arrays\r\n                if (deep && copy && (IsPlainObject(copy) || (copyIsArray = Array.isArray(copy))))\r\n                {\r\n                    if (copyIsArray)\r\n                    {\r\n                        copyIsArray = false;\r\n                        clone = src && Array.isArray(src) ? src : [];\r\n                    }\r\n                    else\r\n                    {\r\n                        clone = src && IsPlainObject(src) ? src : {};\r\n                    }\r\n\r\n                    // Never move original objects, clone them\r\n                    target[name] = Extend(deep, clone, copy);\r\n\r\n                // Don't bring in undefined values\r\n                }\r\n                else if (copy !== undefined)\r\n                {\r\n                    target[name] = copy;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Return the modified object\r\n    return target;\r\n};\r\n\r\nmodule.exports = Extend;\r\n"]},"metadata":{},"sourceType":"script"}