{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Provides methods used for getting and setting the origin of a Game Object.\r\n * Values are normalized, given in the range 0 to 1.\r\n * Display values contain the calculated pixel values.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Origin\r\n * @since 3.0.0\r\n */\nvar Origin = {\n  /**\r\n   * A property indicating that a Game Object has this component.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Origin#_originComponent\r\n   * @type {boolean}\r\n   * @private\r\n   * @default true\r\n   * @since 3.2.0\r\n   */\n  _originComponent: true,\n\n  /**\r\n   * The horizontal origin of this Game Object.\r\n   * The origin maps the relationship between the size and position of the Game Object.\r\n   * The default value is 0.5, meaning all Game Objects are positioned based on their center.\r\n   * Setting the value to 0 means the position now relates to the left of the Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Origin#originX\r\n   * @type {number}\r\n   * @default 0.5\r\n   * @since 3.0.0\r\n   */\n  originX: 0.5,\n\n  /**\r\n   * The vertical origin of this Game Object.\r\n   * The origin maps the relationship between the size and position of the Game Object.\r\n   * The default value is 0.5, meaning all Game Objects are positioned based on their center.\r\n   * Setting the value to 0 means the position now relates to the top of the Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Origin#originY\r\n   * @type {number}\r\n   * @default 0.5\r\n   * @since 3.0.0\r\n   */\n  originY: 0.5,\n  //  private + read only\n  _displayOriginX: 0,\n  _displayOriginY: 0,\n\n  /**\r\n   * The horizontal display origin of this Game Object.\r\n   * The origin is a normalized value between 0 and 1.\r\n   * The displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Origin#displayOriginX\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  displayOriginX: {\n    get: function () {\n      return this._displayOriginX;\n    },\n    set: function (value) {\n      this._displayOriginX = value;\n      this.originX = value / this.width;\n    }\n  },\n\n  /**\r\n   * The vertical display origin of this Game Object.\r\n   * The origin is a normalized value between 0 and 1.\r\n   * The displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Origin#displayOriginY\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  displayOriginY: {\n    get: function () {\n      return this._displayOriginY;\n    },\n    set: function (value) {\n      this._displayOriginY = value;\n      this.originY = value / this.height;\n    }\n  },\n\n  /**\r\n   * Sets the origin of this Game Object.\r\n   *\r\n   * The values are given in the range 0 to 1.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Origin#setOrigin\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} [x=0.5] - The horizontal origin value.\r\n   * @param {number} [y=x] - The vertical origin value. If not defined it will be set to the value of `x`.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setOrigin: function (x, y) {\n    if (x === undefined) {\n      x = 0.5;\n    }\n\n    if (y === undefined) {\n      y = x;\n    }\n\n    this.originX = x;\n    this.originY = y;\n    return this.updateDisplayOrigin();\n  },\n\n  /**\r\n   * Sets the origin of this Game Object based on the Pivot values in its Frame.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Origin#setOriginFromFrame\r\n   * @since 3.0.0\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setOriginFromFrame: function () {\n    if (!this.frame || !this.frame.customPivot) {\n      return this.setOrigin();\n    } else {\n      this.originX = this.frame.pivotX;\n      this.originY = this.frame.pivotY;\n    }\n\n    return this.updateDisplayOrigin();\n  },\n\n  /**\r\n   * Sets the display origin of this Game Object.\r\n   * The difference between this and setting the origin is that you can use pixel values for setting the display origin.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Origin#setDisplayOrigin\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} [x=0] - The horizontal display origin value.\r\n   * @param {number} [y=x] - The vertical display origin value. If not defined it will be set to the value of `x`.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setDisplayOrigin: function (x, y) {\n    if (x === undefined) {\n      x = 0;\n    }\n\n    if (y === undefined) {\n      y = x;\n    }\n\n    this.displayOriginX = x;\n    this.displayOriginY = y;\n    return this;\n  },\n\n  /**\r\n   * Updates the Display Origin cached values internally stored on this Game Object.\r\n   * You don't usually call this directly, but it is exposed for edge-cases where you may.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Origin#updateDisplayOrigin\r\n   * @since 3.0.0\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  updateDisplayOrigin: function () {\n    this._displayOriginX = this.originX * this.width;\n    this._displayOriginY = this.originY * this.height;\n    return this;\n  }\n};\nmodule.exports = Origin;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/components/Origin.js"],"names":["Origin","_originComponent","originX","originY","_displayOriginX","_displayOriginY","displayOriginX","get","set","value","width","displayOriginY","height","setOrigin","x","y","undefined","updateDisplayOrigin","setOriginFromFrame","frame","customPivot","pivotX","pivotY","setDisplayOrigin","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;AAUA,IAAIA,MAAM,GAAG;AAET;;;;;;;;;AASAC,EAAAA,gBAAgB,EAAE,IAXT;;AAaT;;;;;;;;;;;AAWAC,EAAAA,OAAO,EAAE,GAxBA;;AA0BT;;;;;;;;;;;AAWAC,EAAAA,OAAO,EAAE,GArCA;AAuCT;AACAC,EAAAA,eAAe,EAAE,CAxCR;AAyCTC,EAAAA,eAAe,EAAE,CAzCR;;AA2CT;;;;;;;;;AASAC,EAAAA,cAAc,EAAE;AAEZC,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKH,eAAZ;AACH,KALW;AAOZI,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKL,eAAL,GAAuBK,KAAvB;AACA,WAAKP,OAAL,GAAeO,KAAK,GAAG,KAAKC,KAA5B;AACH;AAXW,GApDP;;AAmET;;;;;;;;;AASAC,EAAAA,cAAc,EAAE;AAEZJ,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKF,eAAZ;AACH,KALW;AAOZG,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKJ,eAAL,GAAuBI,KAAvB;AACA,WAAKN,OAAL,GAAeM,KAAK,GAAG,KAAKG,MAA5B;AACH;AAXW,GA5EP;;AA2FT;;;;;;;;;;;;;AAaAC,EAAAA,SAAS,EAAE,UAAUC,CAAV,EAAaC,CAAb,EACX;AACI,QAAID,CAAC,KAAKE,SAAV,EAAqB;AAAEF,MAAAA,CAAC,GAAG,GAAJ;AAAU;;AACjC,QAAIC,CAAC,KAAKC,SAAV,EAAqB;AAAED,MAAAA,CAAC,GAAGD,CAAJ;AAAQ;;AAE/B,SAAKZ,OAAL,GAAeY,CAAf;AACA,SAAKX,OAAL,GAAeY,CAAf;AAEA,WAAO,KAAKE,mBAAL,EAAP;AACH,GAjHQ;;AAmHT;;;;;;;;AAQAC,EAAAA,kBAAkB,EAAE,YACpB;AACI,QAAI,CAAC,KAAKC,KAAN,IAAe,CAAC,KAAKA,KAAL,CAAWC,WAA/B,EACA;AACI,aAAO,KAAKP,SAAL,EAAP;AACH,KAHD,MAKA;AACI,WAAKX,OAAL,GAAe,KAAKiB,KAAL,CAAWE,MAA1B;AACA,WAAKlB,OAAL,GAAe,KAAKgB,KAAL,CAAWG,MAA1B;AACH;;AAED,WAAO,KAAKL,mBAAL,EAAP;AACH,GAxIQ;;AA0IT;;;;;;;;;;;;AAYAM,EAAAA,gBAAgB,EAAE,UAAUT,CAAV,EAAaC,CAAb,EAClB;AACI,QAAID,CAAC,KAAKE,SAAV,EAAqB;AAAEF,MAAAA,CAAC,GAAG,CAAJ;AAAQ;;AAC/B,QAAIC,CAAC,KAAKC,SAAV,EAAqB;AAAED,MAAAA,CAAC,GAAGD,CAAJ;AAAQ;;AAE/B,SAAKR,cAAL,GAAsBQ,CAAtB;AACA,SAAKH,cAAL,GAAsBI,CAAtB;AAEA,WAAO,IAAP;AACH,GA/JQ;;AAiKT;;;;;;;;;AASAE,EAAAA,mBAAmB,EAAE,YACrB;AACI,SAAKb,eAAL,GAAuB,KAAKF,OAAL,GAAe,KAAKQ,KAA3C;AACA,SAAKL,eAAL,GAAuB,KAAKF,OAAL,GAAe,KAAKS,MAA3C;AAEA,WAAO,IAAP;AACH;AAhLQ,CAAb;AAoLAY,MAAM,CAACC,OAAP,GAAiBzB,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for getting and setting the origin of a Game Object.\r\n * Values are normalized, given in the range 0 to 1.\r\n * Display values contain the calculated pixel values.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Origin\r\n * @since 3.0.0\r\n */\r\n\r\nvar Origin = {\r\n\r\n    /**\r\n     * A property indicating that a Game Object has this component.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#_originComponent\r\n     * @type {boolean}\r\n     * @private\r\n     * @default true\r\n     * @since 3.2.0\r\n     */\r\n    _originComponent: true,\r\n\r\n    /**\r\n     * The horizontal origin of this Game Object.\r\n     * The origin maps the relationship between the size and position of the Game Object.\r\n     * The default value is 0.5, meaning all Game Objects are positioned based on their center.\r\n     * Setting the value to 0 means the position now relates to the left of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#originX\r\n     * @type {number}\r\n     * @default 0.5\r\n     * @since 3.0.0\r\n     */\r\n    originX: 0.5,\r\n\r\n    /**\r\n     * The vertical origin of this Game Object.\r\n     * The origin maps the relationship between the size and position of the Game Object.\r\n     * The default value is 0.5, meaning all Game Objects are positioned based on their center.\r\n     * Setting the value to 0 means the position now relates to the top of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#originY\r\n     * @type {number}\r\n     * @default 0.5\r\n     * @since 3.0.0\r\n     */\r\n    originY: 0.5,\r\n\r\n    //  private + read only\r\n    _displayOriginX: 0,\r\n    _displayOriginY: 0,\r\n\r\n    /**\r\n     * The horizontal display origin of this Game Object.\r\n     * The origin is a normalized value between 0 and 1.\r\n     * The displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#displayOriginX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    displayOriginX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._displayOriginX;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._displayOriginX = value;\r\n            this.originX = value / this.width;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The vertical display origin of this Game Object.\r\n     * The origin is a normalized value between 0 and 1.\r\n     * The displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#displayOriginY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    displayOriginY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._displayOriginY;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._displayOriginY = value;\r\n            this.originY = value / this.height;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the origin of this Game Object.\r\n     *\r\n     * The values are given in the range 0 to 1.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Origin#setOrigin\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x=0.5] - The horizontal origin value.\r\n     * @param {number} [y=x] - The vertical origin value. If not defined it will be set to the value of `x`.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setOrigin: function (x, y)\r\n    {\r\n        if (x === undefined) { x = 0.5; }\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.originX = x;\r\n        this.originY = y;\r\n\r\n        return this.updateDisplayOrigin();\r\n    },\r\n\r\n    /**\r\n     * Sets the origin of this Game Object based on the Pivot values in its Frame.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Origin#setOriginFromFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setOriginFromFrame: function ()\r\n    {\r\n        if (!this.frame || !this.frame.customPivot)\r\n        {\r\n            return this.setOrigin();\r\n        }\r\n        else\r\n        {\r\n            this.originX = this.frame.pivotX;\r\n            this.originY = this.frame.pivotY;\r\n        }\r\n\r\n        return this.updateDisplayOrigin();\r\n    },\r\n\r\n    /**\r\n     * Sets the display origin of this Game Object.\r\n     * The difference between this and setting the origin is that you can use pixel values for setting the display origin.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Origin#setDisplayOrigin\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x=0] - The horizontal display origin value.\r\n     * @param {number} [y=x] - The vertical display origin value. If not defined it will be set to the value of `x`.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setDisplayOrigin: function (x, y)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.displayOriginX = x;\r\n        this.displayOriginY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Updates the Display Origin cached values internally stored on this Game Object.\r\n     * You don't usually call this directly, but it is exposed for edge-cases where you may.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Origin#updateDisplayOrigin\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    updateDisplayOrigin: function ()\r\n    {\r\n        this._displayOriginX = this.originX * this.width;\r\n        this._displayOriginY = this.originY * this.height;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Origin;\r\n"]},"metadata":{},"sourceType":"script"}