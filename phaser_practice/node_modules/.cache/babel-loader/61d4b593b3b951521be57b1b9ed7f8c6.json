{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Takes an array of Game Objects and positions them on evenly spaced points around the perimeter of a Circle.\r\n * \r\n * If you wish to pass a `Phaser.GameObjects.Circle` Shape to this function, you should pass its `geom` property.\r\n *\r\n * @function Phaser.Actions.PlaceOnCircle\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Circle} circle - The Circle to position the Game Objects on.\r\n * @param {number} [startAngle=0] - Optional angle to start position from, in radians.\r\n * @param {number} [endAngle=6.28] - Optional angle to stop position at, in radians.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\nvar PlaceOnCircle = function (items, circle, startAngle, endAngle) {\n  if (startAngle === undefined) {\n    startAngle = 0;\n  }\n\n  if (endAngle === undefined) {\n    endAngle = 6.28;\n  }\n\n  var angle = startAngle;\n  var angleStep = (endAngle - startAngle) / items.length;\n\n  for (var i = 0; i < items.length; i++) {\n    items[i].x = circle.x + circle.radius * Math.cos(angle);\n    items[i].y = circle.y + circle.radius * Math.sin(angle);\n    angle += angleStep;\n  }\n\n  return items;\n};\n\nmodule.exports = PlaceOnCircle;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/actions/PlaceOnCircle.js"],"names":["PlaceOnCircle","items","circle","startAngle","endAngle","undefined","angle","angleStep","length","i","x","radius","Math","cos","y","sin","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;;;;AAiBA,IAAIA,aAAa,GAAG,UAAUC,KAAV,EAAiBC,MAAjB,EAAyBC,UAAzB,EAAqCC,QAArC,EACpB;AACI,MAAID,UAAU,KAAKE,SAAnB,EAA8B;AAAEF,IAAAA,UAAU,GAAG,CAAb;AAAiB;;AACjD,MAAIC,QAAQ,KAAKC,SAAjB,EAA4B;AAAED,IAAAA,QAAQ,GAAG,IAAX;AAAkB;;AAEhD,MAAIE,KAAK,GAAGH,UAAZ;AACA,MAAII,SAAS,GAAG,CAACH,QAAQ,GAAGD,UAAZ,IAA0BF,KAAK,CAACO,MAAhD;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACO,MAA1B,EAAkCC,CAAC,EAAnC,EACA;AACIR,IAAAA,KAAK,CAACQ,CAAD,CAAL,CAASC,CAAT,GAAaR,MAAM,CAACQ,CAAP,GAAYR,MAAM,CAACS,MAAP,GAAgBC,IAAI,CAACC,GAAL,CAASP,KAAT,CAAzC;AACAL,IAAAA,KAAK,CAACQ,CAAD,CAAL,CAASK,CAAT,GAAaZ,MAAM,CAACY,CAAP,GAAYZ,MAAM,CAACS,MAAP,GAAgBC,IAAI,CAACG,GAAL,CAAST,KAAT,CAAzC;AAEAA,IAAAA,KAAK,IAAIC,SAAT;AACH;;AAED,SAAON,KAAP;AACH,CAjBD;;AAmBAe,MAAM,CAACC,OAAP,GAAiBjB,aAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Takes an array of Game Objects and positions them on evenly spaced points around the perimeter of a Circle.\r\n * \r\n * If you wish to pass a `Phaser.GameObjects.Circle` Shape to this function, you should pass its `geom` property.\r\n *\r\n * @function Phaser.Actions.PlaceOnCircle\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Circle} circle - The Circle to position the Game Objects on.\r\n * @param {number} [startAngle=0] - Optional angle to start position from, in radians.\r\n * @param {number} [endAngle=6.28] - Optional angle to stop position at, in radians.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\r\nvar PlaceOnCircle = function (items, circle, startAngle, endAngle)\r\n{\r\n    if (startAngle === undefined) { startAngle = 0; }\r\n    if (endAngle === undefined) { endAngle = 6.28; }\r\n\r\n    var angle = startAngle;\r\n    var angleStep = (endAngle - startAngle) / items.length;\r\n\r\n    for (var i = 0; i < items.length; i++)\r\n    {\r\n        items[i].x = circle.x + (circle.radius * Math.cos(angle));\r\n        items[i].y = circle.y + (circle.radius * Math.sin(angle));\r\n\r\n        angle += angleStep;\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = PlaceOnCircle;\r\n"]},"metadata":{},"sourceType":"script"}