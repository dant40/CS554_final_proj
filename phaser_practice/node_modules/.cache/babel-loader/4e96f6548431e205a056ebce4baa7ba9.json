{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Rotate a `point` around `x` and `y` by the given `angle`.\r\n *\r\n * @function Phaser.Math.RotateAround\r\n * @since 3.0.0\r\n *\r\n * @param {(Phaser.Geom.Point|object)} point - The point to be rotated.\r\n * @param {number} x - The horizontal coordinate to rotate around.\r\n * @param {number} y - The vertical coordinate to rotate around.\r\n * @param {number} angle - The angle of rotation in radians.\r\n *\r\n * @return {Phaser.Geom.Point} The given point, rotated by the given angle around the given coordinates.\r\n */\nvar RotateAround = function (point, x, y, angle) {\n  var c = Math.cos(angle);\n  var s = Math.sin(angle);\n  var tx = point.x - x;\n  var ty = point.y - y;\n  point.x = tx * c - ty * s + x;\n  point.y = tx * s + ty * c + y;\n  return point;\n};\n\nmodule.exports = RotateAround;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/math/RotateAround.js"],"names":["RotateAround","point","x","y","angle","c","Math","cos","s","sin","tx","ty","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;AAaA,IAAIA,YAAY,GAAG,UAAUC,KAAV,EAAiBC,CAAjB,EAAoBC,CAApB,EAAuBC,KAAvB,EACnB;AACI,MAAIC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAT,CAAR;AACA,MAAII,CAAC,GAAGF,IAAI,CAACG,GAAL,CAASL,KAAT,CAAR;AAEA,MAAIM,EAAE,GAAGT,KAAK,CAACC,CAAN,GAAUA,CAAnB;AACA,MAAIS,EAAE,GAAGV,KAAK,CAACE,CAAN,GAAUA,CAAnB;AAEAF,EAAAA,KAAK,CAACC,CAAN,GAAUQ,EAAE,GAAGL,CAAL,GAASM,EAAE,GAAGH,CAAd,GAAkBN,CAA5B;AACAD,EAAAA,KAAK,CAACE,CAAN,GAAUO,EAAE,GAAGF,CAAL,GAASG,EAAE,GAAGN,CAAd,GAAkBF,CAA5B;AAEA,SAAOF,KAAP;AACH,CAZD;;AAcAW,MAAM,CAACC,OAAP,GAAiBb,YAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Rotate a `point` around `x` and `y` by the given `angle`.\r\n *\r\n * @function Phaser.Math.RotateAround\r\n * @since 3.0.0\r\n *\r\n * @param {(Phaser.Geom.Point|object)} point - The point to be rotated.\r\n * @param {number} x - The horizontal coordinate to rotate around.\r\n * @param {number} y - The vertical coordinate to rotate around.\r\n * @param {number} angle - The angle of rotation in radians.\r\n *\r\n * @return {Phaser.Geom.Point} The given point, rotated by the given angle around the given coordinates.\r\n */\r\nvar RotateAround = function (point, x, y, angle)\r\n{\r\n    var c = Math.cos(angle);\r\n    var s = Math.sin(angle);\r\n\r\n    var tx = point.x - x;\r\n    var ty = point.y - y;\r\n\r\n    point.x = tx * c - ty * s + x;\r\n    point.y = tx * s + ty * c + y;\r\n\r\n    return point;\r\n};\r\n\r\nmodule.exports = RotateAround;\r\n"]},"metadata":{},"sourceType":"script"}