{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Replaces an element of the array with the new element.\r\n * The new element cannot already be a member of the array.\r\n * The array is modified in-place.\r\n *\r\n * @function Phaser.Utils.Array.Replace\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to search within.\r\n * @param {*} oldChild - The element in the array that will be replaced.\r\n * @param {*} newChild - The element to be inserted into the array at the position of `oldChild`.\r\n *\r\n * @return {boolean} Returns true if the oldChild was successfully replaced, otherwise returns false.\r\n */\nvar Replace = function (array, oldChild, newChild) {\n  var index1 = array.indexOf(oldChild);\n  var index2 = array.indexOf(newChild);\n\n  if (index1 !== -1 && index2 === -1) {\n    array[index1] = newChild;\n    return true;\n  } else {\n    return false;\n  }\n};\n\nmodule.exports = Replace;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/array/Replace.js"],"names":["Replace","array","oldChild","newChild","index1","indexOf","index2","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;AAcA,IAAIA,OAAO,GAAG,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,QAA3B,EACd;AACI,MAAIC,MAAM,GAAGH,KAAK,CAACI,OAAN,CAAcH,QAAd,CAAb;AACA,MAAII,MAAM,GAAGL,KAAK,CAACI,OAAN,CAAcF,QAAd,CAAb;;AAEA,MAAIC,MAAM,KAAK,CAAC,CAAZ,IAAiBE,MAAM,KAAK,CAAC,CAAjC,EACA;AACIL,IAAAA,KAAK,CAACG,MAAD,CAAL,GAAgBD,QAAhB;AAEA,WAAO,IAAP;AACH,GALD,MAOA;AACI,WAAO,KAAP;AACH;AACJ,CAfD;;AAiBAI,MAAM,CAACC,OAAP,GAAiBR,OAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Replaces an element of the array with the new element.\r\n * The new element cannot already be a member of the array.\r\n * The array is modified in-place.\r\n *\r\n * @function Phaser.Utils.Array.Replace\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to search within.\r\n * @param {*} oldChild - The element in the array that will be replaced.\r\n * @param {*} newChild - The element to be inserted into the array at the position of `oldChild`.\r\n *\r\n * @return {boolean} Returns true if the oldChild was successfully replaced, otherwise returns false.\r\n */\r\nvar Replace = function (array, oldChild, newChild)\r\n{\r\n    var index1 = array.indexOf(oldChild);\r\n    var index2 = array.indexOf(newChild);\r\n\r\n    if (index1 !== -1 && index2 === -1)\r\n    {\r\n        array[index1] = newChild;\r\n\r\n        return true;\r\n    }\r\n    else\r\n    {\r\n        return false;\r\n    }\r\n};\r\n\r\nmodule.exports = Replace;\r\n"]},"metadata":{},"sourceType":"script"}