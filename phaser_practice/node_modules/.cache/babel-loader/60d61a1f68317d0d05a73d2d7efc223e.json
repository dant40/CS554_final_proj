{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Returns `true` if the Key was pressed down within the `duration` value given, based on the current\r\n * game clock time. Or `false` if it either isn't down, or was pressed down longer ago than the given duration.\r\n *\r\n * @function Phaser.Input.Keyboard.DownDuration\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Input.Keyboard.Key} key - The Key object to test.\r\n * @param {integer} [duration=50] - The duration, in ms, within which the key must have been pressed down.\r\n *\r\n * @return {boolean} `true` if the Key was pressed down within `duration` ms ago, otherwise `false`.\r\n */\nvar DownDuration = function (key, duration) {\n  if (duration === undefined) {\n    duration = 50;\n  }\n\n  var current = key.plugin.game.loop.time - key.timeDown;\n  return key.isDown && current < duration;\n};\n\nmodule.exports = DownDuration;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/input/keyboard/keys/DownDuration.js"],"names":["DownDuration","key","duration","undefined","current","plugin","game","loop","time","timeDown","isDown","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;AAYA,IAAIA,YAAY,GAAG,UAAUC,GAAV,EAAeC,QAAf,EACnB;AACI,MAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AAAED,IAAAA,QAAQ,GAAG,EAAX;AAAgB;;AAE9C,MAAIE,OAAO,GAAGH,GAAG,CAACI,MAAJ,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBC,IAArB,GAA4BP,GAAG,CAACQ,QAA9C;AAEA,SAAQR,GAAG,CAACS,MAAJ,IAAcN,OAAO,GAAGF,QAAhC;AACH,CAPD;;AASAS,MAAM,CAACC,OAAP,GAAiBZ,YAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Returns `true` if the Key was pressed down within the `duration` value given, based on the current\r\n * game clock time. Or `false` if it either isn't down, or was pressed down longer ago than the given duration.\r\n *\r\n * @function Phaser.Input.Keyboard.DownDuration\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Input.Keyboard.Key} key - The Key object to test.\r\n * @param {integer} [duration=50] - The duration, in ms, within which the key must have been pressed down.\r\n *\r\n * @return {boolean} `true` if the Key was pressed down within `duration` ms ago, otherwise `false`.\r\n */\r\nvar DownDuration = function (key, duration)\r\n{\r\n    if (duration === undefined) { duration = 50; }\r\n\r\n    var current = key.plugin.game.loop.time - key.timeDown;\r\n\r\n    return (key.isDown && current < duration);\r\n};\r\n\r\nmodule.exports = DownDuration;\r\n"]},"metadata":{},"sourceType":"script"}