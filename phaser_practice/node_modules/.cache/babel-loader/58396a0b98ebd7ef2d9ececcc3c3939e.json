{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar GetBottom = require('../../bounds/GetBottom');\n\nvar GetLeft = require('../../bounds/GetLeft');\n\nvar SetBottom = require('../../bounds/SetBottom');\n\nvar SetLeft = require('../../bounds/SetLeft');\n/**\r\n * Takes given Game Object and aligns it so that it is positioned in the bottom left of the other.\r\n *\r\n * @function Phaser.Display.Align.In.BottomLeft\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject} G - [gameObject,$return]\r\n *\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The Game Object that will be positioned.\r\n * @param {Phaser.GameObjects.GameObject} alignIn - The Game Object to base the alignment position on.\r\n * @param {number} [offsetX=0] - Optional horizontal offset from the position.\r\n * @param {number} [offsetY=0] - Optional vertical offset from the position.\r\n *\r\n * @return {Phaser.GameObjects.GameObject} The Game Object that was aligned.\r\n */\n\n\nvar BottomLeft = function (gameObject, alignIn, offsetX, offsetY) {\n  if (offsetX === undefined) {\n    offsetX = 0;\n  }\n\n  if (offsetY === undefined) {\n    offsetY = 0;\n  }\n\n  SetLeft(gameObject, GetLeft(alignIn) - offsetX);\n  SetBottom(gameObject, GetBottom(alignIn) + offsetY);\n  return gameObject;\n};\n\nmodule.exports = BottomLeft;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/display/align/in/BottomLeft.js"],"names":["GetBottom","require","GetLeft","SetBottom","SetLeft","BottomLeft","gameObject","alignIn","offsetX","offsetY","undefined","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,SAAS,GAAGC,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,sBAAD,CAArB;AAEA;;;;;;;;;;;;;;;;;AAeA,IAAII,UAAU,GAAG,UAAUC,UAAV,EAAsBC,OAAtB,EAA+BC,OAA/B,EAAwCC,OAAxC,EACjB;AACI,MAAID,OAAO,KAAKE,SAAhB,EAA2B;AAAEF,IAAAA,OAAO,GAAG,CAAV;AAAc;;AAC3C,MAAIC,OAAO,KAAKC,SAAhB,EAA2B;AAAED,IAAAA,OAAO,GAAG,CAAV;AAAc;;AAE3CL,EAAAA,OAAO,CAACE,UAAD,EAAaJ,OAAO,CAACK,OAAD,CAAP,GAAmBC,OAAhC,CAAP;AACAL,EAAAA,SAAS,CAACG,UAAD,EAAaN,SAAS,CAACO,OAAD,CAAT,GAAqBE,OAAlC,CAAT;AAEA,SAAOH,UAAP;AACH,CATD;;AAWAK,MAAM,CAACC,OAAP,GAAiBP,UAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetBottom = require('../../bounds/GetBottom');\r\nvar GetLeft = require('../../bounds/GetLeft');\r\nvar SetBottom = require('../../bounds/SetBottom');\r\nvar SetLeft = require('../../bounds/SetLeft');\r\n\r\n/**\r\n * Takes given Game Object and aligns it so that it is positioned in the bottom left of the other.\r\n *\r\n * @function Phaser.Display.Align.In.BottomLeft\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject} G - [gameObject,$return]\r\n *\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The Game Object that will be positioned.\r\n * @param {Phaser.GameObjects.GameObject} alignIn - The Game Object to base the alignment position on.\r\n * @param {number} [offsetX=0] - Optional horizontal offset from the position.\r\n * @param {number} [offsetY=0] - Optional vertical offset from the position.\r\n *\r\n * @return {Phaser.GameObjects.GameObject} The Game Object that was aligned.\r\n */\r\nvar BottomLeft = function (gameObject, alignIn, offsetX, offsetY)\r\n{\r\n    if (offsetX === undefined) { offsetX = 0; }\r\n    if (offsetY === undefined) { offsetY = 0; }\r\n\r\n    SetLeft(gameObject, GetLeft(alignIn) - offsetX);\r\n    SetBottom(gameObject, GetBottom(alignIn) + offsetY);\r\n\r\n    return gameObject;\r\n};\r\n\r\nmodule.exports = BottomLeft;\r\n"]},"metadata":{},"sourceType":"script"}