{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Provides methods used for setting the angular acceleration properties of an Arcade Physics Body.\r\n *\r\n * @namespace Phaser.Physics.Arcade.Components.Angular\r\n * @since 3.0.0\r\n */\nvar Angular = {\n  /**\r\n   * Sets the angular velocity of the body.\r\n   * \r\n   * In Arcade Physics, bodies cannot rotate. They are always axis-aligned.\r\n   * However, they can have angular motion, which is passed on to the Game Object bound to the body,\r\n   * causing them to visually rotate, even though the body remains axis-aligned.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Angular#setAngularVelocity\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The amount of angular velocity.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setAngularVelocity: function (value) {\n    this.body.angularVelocity = value;\n    return this;\n  },\n\n  /**\r\n   * Sets the angular acceleration of the body.\r\n   * \r\n   * In Arcade Physics, bodies cannot rotate. They are always axis-aligned.\r\n   * However, they can have angular motion, which is passed on to the Game Object bound to the body,\r\n   * causing them to visually rotate, even though the body remains axis-aligned.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Angular#setAngularAcceleration\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The amount of angular acceleration.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setAngularAcceleration: function (value) {\n    this.body.angularAcceleration = value;\n    return this;\n  },\n\n  /**\r\n   * Sets the angular drag of the body. Drag is applied to the current velocity, providing a form of deceleration.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Angular#setAngularDrag\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The amount of drag.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setAngularDrag: function (value) {\n    this.body.angularDrag = value;\n    return this;\n  }\n};\nmodule.exports = Angular;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/arcade/components/Angular.js"],"names":["Angular","setAngularVelocity","value","body","angularVelocity","setAngularAcceleration","angularAcceleration","setAngularDrag","angularDrag","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;AAMA,IAAIA,OAAO,GAAG;AAEV;;;;;;;;;;;;;;AAcAC,EAAAA,kBAAkB,EAAE,UAAUC,KAAV,EACpB;AACI,SAAKC,IAAL,CAAUC,eAAV,GAA4BF,KAA5B;AAEA,WAAO,IAAP;AACH,GArBS;;AAuBV;;;;;;;;;;;;;;AAcAG,EAAAA,sBAAsB,EAAE,UAAUH,KAAV,EACxB;AACI,SAAKC,IAAL,CAAUG,mBAAV,GAAgCJ,KAAhC;AAEA,WAAO,IAAP;AACH,GA1CS;;AA4CV;;;;;;;;;;AAUAK,EAAAA,cAAc,EAAE,UAAUL,KAAV,EAChB;AACI,SAAKC,IAAL,CAAUK,WAAV,GAAwBN,KAAxB;AAEA,WAAO,IAAP;AACH;AA3DS,CAAd;AA+DAO,MAAM,CAACC,OAAP,GAAiBV,OAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for setting the angular acceleration properties of an Arcade Physics Body.\r\n *\r\n * @namespace Phaser.Physics.Arcade.Components.Angular\r\n * @since 3.0.0\r\n */\r\nvar Angular = {\r\n\r\n    /**\r\n     * Sets the angular velocity of the body.\r\n     * \r\n     * In Arcade Physics, bodies cannot rotate. They are always axis-aligned.\r\n     * However, they can have angular motion, which is passed on to the Game Object bound to the body,\r\n     * causing them to visually rotate, even though the body remains axis-aligned.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Angular#setAngularVelocity\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The amount of angular velocity.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setAngularVelocity: function (value)\r\n    {\r\n        this.body.angularVelocity = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the angular acceleration of the body.\r\n     * \r\n     * In Arcade Physics, bodies cannot rotate. They are always axis-aligned.\r\n     * However, they can have angular motion, which is passed on to the Game Object bound to the body,\r\n     * causing them to visually rotate, even though the body remains axis-aligned.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Angular#setAngularAcceleration\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The amount of angular acceleration.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setAngularAcceleration: function (value)\r\n    {\r\n        this.body.angularAcceleration = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the angular drag of the body. Drag is applied to the current velocity, providing a form of deceleration.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Angular#setAngularDrag\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The amount of drag.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setAngularDrag: function (value)\r\n    {\r\n        this.body.angularDrag = value;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Angular;\r\n"]},"metadata":{},"sourceType":"script"}