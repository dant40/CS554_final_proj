{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar StarRender = require('./StarRender');\n\nvar Class = require('../../../utils/Class');\n\nvar Earcut = require('../../../geom/polygon/Earcut');\n\nvar Shape = require('../Shape');\n/**\r\n * @classdesc\r\n * The Star Shape is a Game Object that can be added to a Scene, Group or Container. You can\r\n * treat it like any other Game Object in your game, such as tweening it, scaling it, or enabling\r\n * it for input or physics. It provides a quick and easy way for you to render this shape in your\r\n * game without using a texture, while still taking advantage of being fully batched in WebGL.\r\n * \r\n * This shape supports both fill and stroke colors.\r\n * \r\n * As the name implies, the Star shape will display a star in your game. You can control several\r\n * aspects of it including the number of points that constitute the star. The default is 5. If\r\n * you change it to 4 it will render as a diamond. If you increase them, you'll get a more spiky\r\n * star shape.\r\n * \r\n * You can also control the inner and outer radius, which is how 'long' each point of the star is.\r\n * Modify these values to create more interesting shapes.\r\n *\r\n * @class Star\r\n * @extends Phaser.GameObjects.Shape\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.13.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n * @param {number} [x=0] - The horizontal position of this Game Object in the world.\r\n * @param {number} [y=0] - The vertical position of this Game Object in the world.\r\n * @param {number} [points=5] - The number of points on the star.\r\n * @param {number} [innerRadius=32] - The inner radius of the star.\r\n * @param {number} [outerRadius=64] - The outer radius of the star.\r\n * @param {number} [fillColor] - The color the star will be filled with, i.e. 0xff0000 for red.\r\n * @param {number} [fillAlpha] - The alpha the star will be filled with. You can also set the alpha of the overall Shape using its `alpha` property.\r\n */\n\n\nvar Star = new Class({\n  Extends: Shape,\n  Mixins: [StarRender],\n  initialize: function Star(scene, x, y, points, innerRadius, outerRadius, fillColor, fillAlpha) {\n    if (x === undefined) {\n      x = 0;\n    }\n\n    if (y === undefined) {\n      y = 0;\n    }\n\n    if (points === undefined) {\n      points = 5;\n    }\n\n    if (innerRadius === undefined) {\n      innerRadius = 32;\n    }\n\n    if (outerRadius === undefined) {\n      outerRadius = 64;\n    }\n\n    Shape.call(this, scene, 'Star', null);\n    /**\r\n     * Private internal value.\r\n     * The number of points in the star.\r\n     *\r\n     * @name Phaser.GameObjects.Star#_points\r\n     * @type {integer}\r\n     * @private\r\n     * @since 3.13.0\r\n     */\n\n    this._points = points;\n    /**\r\n     * Private internal value.\r\n     * The inner radius of the star.\r\n     *\r\n     * @name Phaser.GameObjects.Star#_innerRadius\r\n     * @type {number}\r\n     * @private\r\n     * @since 3.13.0\r\n     */\n\n    this._innerRadius = innerRadius;\n    /**\r\n     * Private internal value.\r\n     * The outer radius of the star.\r\n     *\r\n     * @name Phaser.GameObjects.Star#_outerRadius\r\n     * @type {number}\r\n     * @private\r\n     * @since 3.13.0\r\n     */\n\n    this._outerRadius = outerRadius;\n    this.setPosition(x, y);\n    this.setSize(outerRadius * 2, outerRadius * 2);\n\n    if (fillColor !== undefined) {\n      this.setFillStyle(fillColor, fillAlpha);\n    }\n\n    this.updateDisplayOrigin();\n    this.updateData();\n  },\n\n  /**\r\n   * Sets the number of points that make up the Star shape.\r\n   * This call can be chained.\r\n   *\r\n   * @method Phaser.GameObjects.Star#setPoints\r\n   * @since 3.13.0\r\n   * \r\n   * @param {integer} value - The amount of points the Star will have.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setPoints: function (value) {\n    this._points = value;\n    return this.updateData();\n  },\n\n  /**\r\n   * Sets the inner radius of the Star shape.\r\n   * This call can be chained.\r\n   *\r\n   * @method Phaser.GameObjects.Star#setInnerRadius\r\n   * @since 3.13.0\r\n   * \r\n   * @param {number} value - The amount to set the inner radius to.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setInnerRadius: function (value) {\n    this._innerRadius = value;\n    return this.updateData();\n  },\n\n  /**\r\n   * Sets the outer radius of the Star shape.\r\n   * This call can be chained.\r\n   *\r\n   * @method Phaser.GameObjects.Star#setOuterRadius\r\n   * @since 3.13.0\r\n   * \r\n   * @param {number} value - The amount to set the outer radius to.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setOuterRadius: function (value) {\n    this._outerRadius = value;\n    return this.updateData();\n  },\n\n  /**\r\n   * The number of points that make up the Star shape.\r\n   *\r\n   * @name Phaser.GameObjects.Star#points\r\n   * @type {integer}\r\n   * @default 5\r\n   * @since 3.13.0\r\n   */\n  points: {\n    get: function () {\n      return this._points;\n    },\n    set: function (value) {\n      this._points = value;\n      this.updateData();\n    }\n  },\n\n  /**\r\n   * The inner radius of the Star shape.\r\n   *\r\n   * @name Phaser.GameObjects.Star#innerRadius\r\n   * @type {number}\r\n   * @default 32\r\n   * @since 3.13.0\r\n   */\n  innerRadius: {\n    get: function () {\n      return this._innerRadius;\n    },\n    set: function (value) {\n      this._innerRadius = value;\n      this.updateData();\n    }\n  },\n\n  /**\r\n   * The outer radius of the Star shape.\r\n   *\r\n   * @name Phaser.GameObjects.Star#outerRadius\r\n   * @type {number}\r\n   * @default 64\r\n   * @since 3.13.0\r\n   */\n  outerRadius: {\n    get: function () {\n      return this._outerRadius;\n    },\n    set: function (value) {\n      this._outerRadius = value;\n      this.updateData();\n    }\n  },\n\n  /**\r\n   * Internal method that updates the data and path values.\r\n   *\r\n   * @method Phaser.GameObjects.Star#updateData\r\n   * @private\r\n   * @since 3.13.0\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  updateData: function () {\n    var path = [];\n    var points = this._points;\n    var innerRadius = this._innerRadius;\n    var outerRadius = this._outerRadius;\n    var rot = Math.PI / 2 * 3;\n    var step = Math.PI / points; //  So origin 0.5 = the center of the star\n\n    var x = outerRadius;\n    var y = outerRadius;\n    path.push(x, y + -outerRadius);\n\n    for (var i = 0; i < points; i++) {\n      path.push(x + Math.cos(rot) * outerRadius, y + Math.sin(rot) * outerRadius);\n      rot += step;\n      path.push(x + Math.cos(rot) * innerRadius, y + Math.sin(rot) * innerRadius);\n      rot += step;\n    }\n\n    path.push(x, y + -outerRadius);\n    this.pathIndexes = Earcut(path);\n    this.pathData = path;\n    return this;\n  }\n});\nmodule.exports = Star;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/shape/star/Star.js"],"names":["StarRender","require","Class","Earcut","Shape","Star","Extends","Mixins","initialize","scene","x","y","points","innerRadius","outerRadius","fillColor","fillAlpha","undefined","call","_points","_innerRadius","_outerRadius","setPosition","setSize","setFillStyle","updateDisplayOrigin","updateData","setPoints","value","setInnerRadius","setOuterRadius","get","set","path","rot","Math","PI","step","push","i","cos","sin","pathIndexes","pathData","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar StarRender = require('./StarRender');\r\nvar Class = require('../../../utils/Class');\r\nvar Earcut = require('../../../geom/polygon/Earcut');\r\nvar Shape = require('../Shape');\r\n\r\n/**\r\n * @classdesc\r\n * The Star Shape is a Game Object that can be added to a Scene, Group or Container. You can\r\n * treat it like any other Game Object in your game, such as tweening it, scaling it, or enabling\r\n * it for input or physics. It provides a quick and easy way for you to render this shape in your\r\n * game without using a texture, while still taking advantage of being fully batched in WebGL.\r\n * \r\n * This shape supports both fill and stroke colors.\r\n * \r\n * As the name implies, the Star shape will display a star in your game. You can control several\r\n * aspects of it including the number of points that constitute the star. The default is 5. If\r\n * you change it to 4 it will render as a diamond. If you increase them, you'll get a more spiky\r\n * star shape.\r\n * \r\n * You can also control the inner and outer radius, which is how 'long' each point of the star is.\r\n * Modify these values to create more interesting shapes.\r\n *\r\n * @class Star\r\n * @extends Phaser.GameObjects.Shape\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.13.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n * @param {number} [x=0] - The horizontal position of this Game Object in the world.\r\n * @param {number} [y=0] - The vertical position of this Game Object in the world.\r\n * @param {number} [points=5] - The number of points on the star.\r\n * @param {number} [innerRadius=32] - The inner radius of the star.\r\n * @param {number} [outerRadius=64] - The outer radius of the star.\r\n * @param {number} [fillColor] - The color the star will be filled with, i.e. 0xff0000 for red.\r\n * @param {number} [fillAlpha] - The alpha the star will be filled with. You can also set the alpha of the overall Shape using its `alpha` property.\r\n */\r\nvar Star = new Class({\r\n\r\n    Extends: Shape,\r\n\r\n    Mixins: [\r\n        StarRender\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function Star (scene, x, y, points, innerRadius, outerRadius, fillColor, fillAlpha)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n        if (points === undefined) { points = 5; }\r\n        if (innerRadius === undefined) { innerRadius = 32; }\r\n        if (outerRadius === undefined) { outerRadius = 64; }\r\n\r\n        Shape.call(this, scene, 'Star', null);\r\n\r\n        /**\r\n         * Private internal value.\r\n         * The number of points in the star.\r\n         *\r\n         * @name Phaser.GameObjects.Star#_points\r\n         * @type {integer}\r\n         * @private\r\n         * @since 3.13.0\r\n         */\r\n        this._points = points;\r\n\r\n        /**\r\n         * Private internal value.\r\n         * The inner radius of the star.\r\n         *\r\n         * @name Phaser.GameObjects.Star#_innerRadius\r\n         * @type {number}\r\n         * @private\r\n         * @since 3.13.0\r\n         */\r\n        this._innerRadius = innerRadius;\r\n\r\n        /**\r\n         * Private internal value.\r\n         * The outer radius of the star.\r\n         *\r\n         * @name Phaser.GameObjects.Star#_outerRadius\r\n         * @type {number}\r\n         * @private\r\n         * @since 3.13.0\r\n         */\r\n        this._outerRadius = outerRadius;\r\n\r\n        this.setPosition(x, y);\r\n        this.setSize(outerRadius * 2, outerRadius * 2);\r\n\r\n        if (fillColor !== undefined)\r\n        {\r\n            this.setFillStyle(fillColor, fillAlpha);\r\n        }\r\n\r\n        this.updateDisplayOrigin();\r\n        this.updateData();\r\n    },\r\n\r\n    /**\r\n     * Sets the number of points that make up the Star shape.\r\n     * This call can be chained.\r\n     *\r\n     * @method Phaser.GameObjects.Star#setPoints\r\n     * @since 3.13.0\r\n     * \r\n     * @param {integer} value - The amount of points the Star will have.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setPoints: function (value)\r\n    {\r\n        this._points = value;\r\n\r\n        return this.updateData();\r\n    },\r\n\r\n    /**\r\n     * Sets the inner radius of the Star shape.\r\n     * This call can be chained.\r\n     *\r\n     * @method Phaser.GameObjects.Star#setInnerRadius\r\n     * @since 3.13.0\r\n     * \r\n     * @param {number} value - The amount to set the inner radius to.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setInnerRadius: function (value)\r\n    {\r\n        this._innerRadius = value;\r\n\r\n        return this.updateData();\r\n    },\r\n\r\n    /**\r\n     * Sets the outer radius of the Star shape.\r\n     * This call can be chained.\r\n     *\r\n     * @method Phaser.GameObjects.Star#setOuterRadius\r\n     * @since 3.13.0\r\n     * \r\n     * @param {number} value - The amount to set the outer radius to.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setOuterRadius: function (value)\r\n    {\r\n        this._outerRadius = value;\r\n\r\n        return this.updateData();\r\n    },\r\n\r\n    /**\r\n     * The number of points that make up the Star shape.\r\n     *\r\n     * @name Phaser.GameObjects.Star#points\r\n     * @type {integer}\r\n     * @default 5\r\n     * @since 3.13.0\r\n     */\r\n    points: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._points;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._points = value;\r\n\r\n            this.updateData();\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The inner radius of the Star shape.\r\n     *\r\n     * @name Phaser.GameObjects.Star#innerRadius\r\n     * @type {number}\r\n     * @default 32\r\n     * @since 3.13.0\r\n     */\r\n    innerRadius: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._innerRadius;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._innerRadius = value;\r\n\r\n            this.updateData();\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The outer radius of the Star shape.\r\n     *\r\n     * @name Phaser.GameObjects.Star#outerRadius\r\n     * @type {number}\r\n     * @default 64\r\n     * @since 3.13.0\r\n     */\r\n    outerRadius: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._outerRadius;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._outerRadius = value;\r\n\r\n            this.updateData();\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Internal method that updates the data and path values.\r\n     *\r\n     * @method Phaser.GameObjects.Star#updateData\r\n     * @private\r\n     * @since 3.13.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    updateData: function ()\r\n    {\r\n        var path = [];\r\n\r\n        var points = this._points;\r\n        var innerRadius = this._innerRadius;\r\n        var outerRadius = this._outerRadius;\r\n\r\n        var rot = Math.PI / 2 * 3;\r\n        var step = Math.PI / points;\r\n\r\n        //  So origin 0.5 = the center of the star\r\n        var x = outerRadius;\r\n        var y = outerRadius;\r\n    \r\n        path.push(x, y + -outerRadius);\r\n\r\n        for (var i = 0; i < points; i++)\r\n        {\r\n            path.push(x + Math.cos(rot) * outerRadius, y + Math.sin(rot) * outerRadius);\r\n\r\n            rot += step;\r\n\r\n            path.push(x + Math.cos(rot) * innerRadius, y + Math.sin(rot) * innerRadius);\r\n    \r\n            rot += step;\r\n        }\r\n\r\n        path.push(x, y + -outerRadius);\r\n\r\n        this.pathIndexes = Earcut(path);\r\n        this.pathData = path;\r\n\r\n        return this;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Star;\r\n"]},"metadata":{},"sourceType":"script"}