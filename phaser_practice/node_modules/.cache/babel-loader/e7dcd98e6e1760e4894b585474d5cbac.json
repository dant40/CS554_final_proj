{"ast":null,"code":"/**\r\n * @author       samme\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar QuickSet = require('../display/align/to/QuickSet');\n/**\r\n * Takes an array of Game Objects, or any objects that have public `x` and `y` properties, and aligns them next to each other.\r\n *\r\n * The first item isn't moved. The second item is aligned next to the first, then the third next to the second, and so on.\r\n *\r\n * @function Phaser.Actions.AlignTo\r\n * @since 3.22.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be updated by this action.\r\n * @param {integer} position - The position to align the items with. This is an align constant, such as `Phaser.Display.Align.LEFT_CENTER`.\r\n * @param {number} [offsetX=0] - Optional horizontal offset from the position.\r\n * @param {number} [offsetY=0] - Optional vertical offset from the position.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of objects that were passed to this Action.\r\n */\n\n\nvar AlignTo = function (items, position, offsetX, offsetY) {\n  var target = items[0];\n\n  for (var i = 1; i < items.length; i++) {\n    var item = items[i];\n    QuickSet(item, target, position, offsetX, offsetY);\n    target = item;\n  }\n\n  return items;\n};\n\nmodule.exports = AlignTo;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/actions/AlignTo.js"],"names":["QuickSet","require","AlignTo","items","position","offsetX","offsetY","target","i","length","item","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,8BAAD,CAAtB;AAEA;;;;;;;;;;;;;;;;;;;AAiBA,IAAIC,OAAO,GAAG,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,OAA3B,EAAoCC,OAApC,EACd;AACI,MAAIC,MAAM,GAAGJ,KAAK,CAAC,CAAD,CAAlB;;AAEA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EACA;AACI,QAAIE,IAAI,GAAGP,KAAK,CAACK,CAAD,CAAhB;AAEAR,IAAAA,QAAQ,CAACU,IAAD,EAAOH,MAAP,EAAeH,QAAf,EAAyBC,OAAzB,EAAkCC,OAAlC,CAAR;AAEAC,IAAAA,MAAM,GAAGG,IAAT;AACH;;AAED,SAAOP,KAAP;AACH,CAdD;;AAgBAQ,MAAM,CAACC,OAAP,GAAiBV,OAAjB","sourcesContent":["/**\r\n * @author       samme\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar QuickSet = require('../display/align/to/QuickSet');\r\n\r\n/**\r\n * Takes an array of Game Objects, or any objects that have public `x` and `y` properties, and aligns them next to each other.\r\n *\r\n * The first item isn't moved. The second item is aligned next to the first, then the third next to the second, and so on.\r\n *\r\n * @function Phaser.Actions.AlignTo\r\n * @since 3.22.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be updated by this action.\r\n * @param {integer} position - The position to align the items with. This is an align constant, such as `Phaser.Display.Align.LEFT_CENTER`.\r\n * @param {number} [offsetX=0] - Optional horizontal offset from the position.\r\n * @param {number} [offsetY=0] - Optional vertical offset from the position.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of objects that were passed to this Action.\r\n */\r\nvar AlignTo = function (items, position, offsetX, offsetY)\r\n{\r\n    var target = items[0];\r\n\r\n    for (var i = 1; i < items.length; i++)\r\n    {\r\n        var item = items[i];\r\n\r\n        QuickSet(item, target, position, offsetX, offsetY);\r\n\r\n        target = item;\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = AlignTo;\r\n"]},"metadata":{},"sourceType":"script"}