{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar SafeRange = require('./SafeRange');\n/**\r\n * Scans the array for elements with the given property. If found, the property is set to the `value`.\r\n *\r\n * For example: `SetAll('visible', true)` would set all elements that have a `visible` property to `false`.\r\n *\r\n * Optionally you can specify a start and end index. For example if the array had 100 elements,\r\n * and you set `startIndex` to 0 and `endIndex` to 50, it would update only the first 50 elements.\r\n *\r\n * @function Phaser.Utils.Array.SetAll\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to search.\r\n * @param {string} property - The property to test for on each array element.\r\n * @param {*} value - The value to set the property to.\r\n * @param {integer} [startIndex] - An optional start index to search from.\r\n * @param {integer} [endIndex] - An optional end index to search to.\r\n *\r\n * @return {array} The input array.\r\n */\n\n\nvar SetAll = function (array, property, value, startIndex, endIndex) {\n  if (startIndex === undefined) {\n    startIndex = 0;\n  }\n\n  if (endIndex === undefined) {\n    endIndex = array.length;\n  }\n\n  if (SafeRange(array, startIndex, endIndex)) {\n    for (var i = startIndex; i < endIndex; i++) {\n      var entry = array[i];\n\n      if (entry.hasOwnProperty(property)) {\n        entry[property] = value;\n      }\n    }\n  }\n\n  return array;\n};\n\nmodule.exports = SetAll;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/array/SetAll.js"],"names":["SafeRange","require","SetAll","array","property","value","startIndex","endIndex","undefined","length","i","entry","hasOwnProperty","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;AAEA;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAIC,MAAM,GAAG,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkCC,UAAlC,EAA8CC,QAA9C,EACb;AACI,MAAID,UAAU,KAAKE,SAAnB,EAA8B;AAAEF,IAAAA,UAAU,GAAG,CAAb;AAAiB;;AACjD,MAAIC,QAAQ,KAAKC,SAAjB,EAA4B;AAAED,IAAAA,QAAQ,GAAGJ,KAAK,CAACM,MAAjB;AAA0B;;AAExD,MAAIT,SAAS,CAACG,KAAD,EAAQG,UAAR,EAAoBC,QAApB,CAAb,EACA;AACI,SAAK,IAAIG,CAAC,GAAGJ,UAAb,EAAyBI,CAAC,GAAGH,QAA7B,EAAuCG,CAAC,EAAxC,EACA;AACI,UAAIC,KAAK,GAAGR,KAAK,CAACO,CAAD,CAAjB;;AAEA,UAAIC,KAAK,CAACC,cAAN,CAAqBR,QAArB,CAAJ,EACA;AACIO,QAAAA,KAAK,CAACP,QAAD,CAAL,GAAkBC,KAAlB;AACH;AACJ;AACJ;;AAED,SAAOF,KAAP;AACH,CAnBD;;AAqBAU,MAAM,CAACC,OAAP,GAAiBZ,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar SafeRange = require('./SafeRange');\r\n\r\n/**\r\n * Scans the array for elements with the given property. If found, the property is set to the `value`.\r\n *\r\n * For example: `SetAll('visible', true)` would set all elements that have a `visible` property to `false`.\r\n *\r\n * Optionally you can specify a start and end index. For example if the array had 100 elements,\r\n * and you set `startIndex` to 0 and `endIndex` to 50, it would update only the first 50 elements.\r\n *\r\n * @function Phaser.Utils.Array.SetAll\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to search.\r\n * @param {string} property - The property to test for on each array element.\r\n * @param {*} value - The value to set the property to.\r\n * @param {integer} [startIndex] - An optional start index to search from.\r\n * @param {integer} [endIndex] - An optional end index to search to.\r\n *\r\n * @return {array} The input array.\r\n */\r\nvar SetAll = function (array, property, value, startIndex, endIndex)\r\n{\r\n    if (startIndex === undefined) { startIndex = 0; }\r\n    if (endIndex === undefined) { endIndex = array.length; }\r\n\r\n    if (SafeRange(array, startIndex, endIndex))\r\n    {\r\n        for (var i = startIndex; i < endIndex; i++)\r\n        {\r\n            var entry = array[i];\r\n\r\n            if (entry.hasOwnProperty(property))\r\n            {\r\n                entry[property] = value;\r\n            }\r\n        }\r\n    }\r\n\r\n    return array;\r\n};\r\n\r\nmodule.exports = SetAll;\r\n"]},"metadata":{},"sourceType":"script"}