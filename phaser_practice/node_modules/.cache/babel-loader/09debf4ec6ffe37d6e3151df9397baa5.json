{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * @namespace Phaser.Physics.Matter.Matter\r\n */\nvar Matter = require('./lib/core/Matter');\n\nMatter.Body = require('./lib/body/Body');\nMatter.Composite = require('./lib/body/Composite');\nMatter.World = require('./lib/body/World');\nMatter.Detector = require('./lib/collision/Detector');\nMatter.Grid = require('./lib/collision/Grid');\nMatter.Pairs = require('./lib/collision/Pairs');\nMatter.Pair = require('./lib/collision/Pair');\nMatter.Query = require('./lib/collision/Query');\nMatter.Resolver = require('./lib/collision/Resolver');\nMatter.SAT = require('./lib/collision/SAT');\nMatter.Constraint = require('./lib/constraint/Constraint');\nMatter.Common = require('./lib/core/Common');\nMatter.Engine = require('./lib/core/Engine');\nMatter.Events = require('./lib/core/Events');\nMatter.Sleeping = require('./lib/core/Sleeping');\nMatter.Plugin = require('./lib/core/Plugin');\nMatter.Bodies = require('./lib/factory/Bodies');\nMatter.Composites = require('./lib/factory/Composites');\nMatter.Axes = require('./lib/geometry/Axes');\nMatter.Bounds = require('./lib/geometry/Bounds');\nMatter.Svg = require('./lib/geometry/Svg');\nMatter.Vector = require('./lib/geometry/Vector');\nMatter.Vertices = require('./lib/geometry/Vertices'); // aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nmodule.exports = Matter;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/matter-js/CustomMain.js"],"names":["Matter","require","Body","Composite","World","Detector","Grid","Pairs","Pair","Query","Resolver","SAT","Constraint","Common","Engine","Events","Sleeping","Plugin","Bodies","Composites","Axes","Bounds","Svg","Vector","Vertices","add","remove","addComposite","addBody","addConstraint","clear","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;AAIA,IAAIA,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AAEAD,MAAM,CAACE,IAAP,GAAcD,OAAO,CAAC,iBAAD,CAArB;AACAD,MAAM,CAACG,SAAP,GAAmBF,OAAO,CAAC,sBAAD,CAA1B;AACAD,MAAM,CAACI,KAAP,GAAeH,OAAO,CAAC,kBAAD,CAAtB;AAEAD,MAAM,CAACK,QAAP,GAAkBJ,OAAO,CAAC,0BAAD,CAAzB;AACAD,MAAM,CAACM,IAAP,GAAcL,OAAO,CAAC,sBAAD,CAArB;AACAD,MAAM,CAACO,KAAP,GAAeN,OAAO,CAAC,uBAAD,CAAtB;AACAD,MAAM,CAACQ,IAAP,GAAcP,OAAO,CAAC,sBAAD,CAArB;AACAD,MAAM,CAACS,KAAP,GAAeR,OAAO,CAAC,uBAAD,CAAtB;AACAD,MAAM,CAACU,QAAP,GAAkBT,OAAO,CAAC,0BAAD,CAAzB;AACAD,MAAM,CAACW,GAAP,GAAaV,OAAO,CAAC,qBAAD,CAApB;AAEAD,MAAM,CAACY,UAAP,GAAoBX,OAAO,CAAC,6BAAD,CAA3B;AAEAD,MAAM,CAACa,MAAP,GAAgBZ,OAAO,CAAC,mBAAD,CAAvB;AACAD,MAAM,CAACc,MAAP,GAAgBb,OAAO,CAAC,mBAAD,CAAvB;AACAD,MAAM,CAACe,MAAP,GAAgBd,OAAO,CAAC,mBAAD,CAAvB;AACAD,MAAM,CAACgB,QAAP,GAAkBf,OAAO,CAAC,qBAAD,CAAzB;AACAD,MAAM,CAACiB,MAAP,GAAgBhB,OAAO,CAAC,mBAAD,CAAvB;AAEAD,MAAM,CAACkB,MAAP,GAAgBjB,OAAO,CAAC,sBAAD,CAAvB;AACAD,MAAM,CAACmB,UAAP,GAAoBlB,OAAO,CAAC,0BAAD,CAA3B;AAEAD,MAAM,CAACoB,IAAP,GAAcnB,OAAO,CAAC,qBAAD,CAArB;AACAD,MAAM,CAACqB,MAAP,GAAgBpB,OAAO,CAAC,uBAAD,CAAvB;AACAD,MAAM,CAACsB,GAAP,GAAarB,OAAO,CAAC,oBAAD,CAApB;AACAD,MAAM,CAACuB,MAAP,GAAgBtB,OAAO,CAAC,uBAAD,CAAvB;AACAD,MAAM,CAACwB,QAAP,GAAkBvB,OAAO,CAAC,yBAAD,CAAzB,C,CAEA;;AAEAD,MAAM,CAACI,KAAP,CAAaqB,GAAb,GAAmBzB,MAAM,CAACG,SAAP,CAAiBsB,GAApC;AACAzB,MAAM,CAACI,KAAP,CAAasB,MAAb,GAAsB1B,MAAM,CAACG,SAAP,CAAiBuB,MAAvC;AACA1B,MAAM,CAACI,KAAP,CAAauB,YAAb,GAA4B3B,MAAM,CAACG,SAAP,CAAiBwB,YAA7C;AACA3B,MAAM,CAACI,KAAP,CAAawB,OAAb,GAAuB5B,MAAM,CAACG,SAAP,CAAiByB,OAAxC;AACA5B,MAAM,CAACI,KAAP,CAAayB,aAAb,GAA6B7B,MAAM,CAACG,SAAP,CAAiB0B,aAA9C;AACA7B,MAAM,CAACI,KAAP,CAAa0B,KAAb,GAAqB9B,MAAM,CAACG,SAAP,CAAiB2B,KAAtC;AAEAC,MAAM,CAACC,OAAP,GAAiBhC,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Physics.Matter.Matter\r\n */\r\n\r\nvar Matter = require('./lib/core/Matter');\r\n\r\nMatter.Body = require('./lib/body/Body');\r\nMatter.Composite = require('./lib/body/Composite');\r\nMatter.World = require('./lib/body/World');\r\n\r\nMatter.Detector = require('./lib/collision/Detector');\r\nMatter.Grid = require('./lib/collision/Grid');\r\nMatter.Pairs = require('./lib/collision/Pairs');\r\nMatter.Pair = require('./lib/collision/Pair');\r\nMatter.Query = require('./lib/collision/Query');\r\nMatter.Resolver = require('./lib/collision/Resolver');\r\nMatter.SAT = require('./lib/collision/SAT');\r\n\r\nMatter.Constraint = require('./lib/constraint/Constraint');\r\n\r\nMatter.Common = require('./lib/core/Common');\r\nMatter.Engine = require('./lib/core/Engine');\r\nMatter.Events = require('./lib/core/Events');\r\nMatter.Sleeping = require('./lib/core/Sleeping');\r\nMatter.Plugin = require('./lib/core/Plugin');\r\n\r\nMatter.Bodies = require('./lib/factory/Bodies');\r\nMatter.Composites = require('./lib/factory/Composites');\r\n\r\nMatter.Axes = require('./lib/geometry/Axes');\r\nMatter.Bounds = require('./lib/geometry/Bounds');\r\nMatter.Svg = require('./lib/geometry/Svg');\r\nMatter.Vector = require('./lib/geometry/Vector');\r\nMatter.Vertices = require('./lib/geometry/Vertices');\r\n\r\n// aliases\r\n\r\nMatter.World.add = Matter.Composite.add;\r\nMatter.World.remove = Matter.Composite.remove;\r\nMatter.World.addComposite = Matter.Composite.addComposite;\r\nMatter.World.addBody = Matter.Composite.addBody;\r\nMatter.World.addConstraint = Matter.Composite.addConstraint;\r\nMatter.World.clear = Matter.Composite.clear;\r\n\r\nmodule.exports = Matter;\r\n"]},"metadata":{},"sourceType":"script"}