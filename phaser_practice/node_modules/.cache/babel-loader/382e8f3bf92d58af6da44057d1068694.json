{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Internal function to process the separation of a physics body from a tile.\r\n *\r\n * @function Phaser.Physics.Arcade.Tilemap.ProcessTileSeparationY\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Arcade.Body} body - The Body object to separate.\r\n * @param {number} y - The y separation amount.\r\n */\nvar ProcessTileSeparationY = function (body, y) {\n  if (y < 0) {\n    body.blocked.none = false;\n    body.blocked.up = true;\n  } else if (y > 0) {\n    body.blocked.none = false;\n    body.blocked.down = true;\n  }\n\n  body.position.y -= y;\n\n  if (body.bounce.y === 0) {\n    body.velocity.y = 0;\n  } else {\n    body.velocity.y = -body.velocity.y * body.bounce.y;\n  }\n};\n\nmodule.exports = ProcessTileSeparationY;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/arcade/tilemap/ProcessTileSeparationY.js"],"names":["ProcessTileSeparationY","body","y","blocked","none","up","down","position","bounce","velocity","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;AASA,IAAIA,sBAAsB,GAAG,UAAUC,IAAV,EAAgBC,CAAhB,EAC7B;AACI,MAAIA,CAAC,GAAG,CAAR,EACA;AACID,IAAAA,IAAI,CAACE,OAAL,CAAaC,IAAb,GAAoB,KAApB;AACAH,IAAAA,IAAI,CAACE,OAAL,CAAaE,EAAb,GAAkB,IAAlB;AACH,GAJD,MAKK,IAAIH,CAAC,GAAG,CAAR,EACL;AACID,IAAAA,IAAI,CAACE,OAAL,CAAaC,IAAb,GAAoB,KAApB;AACAH,IAAAA,IAAI,CAACE,OAAL,CAAaG,IAAb,GAAoB,IAApB;AACH;;AAEDL,EAAAA,IAAI,CAACM,QAAL,CAAcL,CAAd,IAAmBA,CAAnB;;AAEA,MAAID,IAAI,CAACO,MAAL,CAAYN,CAAZ,KAAkB,CAAtB,EACA;AACID,IAAAA,IAAI,CAACQ,QAAL,CAAcP,CAAd,GAAkB,CAAlB;AACH,GAHD,MAKA;AACID,IAAAA,IAAI,CAACQ,QAAL,CAAcP,CAAd,GAAkB,CAACD,IAAI,CAACQ,QAAL,CAAcP,CAAf,GAAmBD,IAAI,CAACO,MAAL,CAAYN,CAAjD;AACH;AACJ,CAvBD;;AAyBAQ,MAAM,CAACC,OAAP,GAAiBX,sBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Internal function to process the separation of a physics body from a tile.\r\n *\r\n * @function Phaser.Physics.Arcade.Tilemap.ProcessTileSeparationY\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Arcade.Body} body - The Body object to separate.\r\n * @param {number} y - The y separation amount.\r\n */\r\nvar ProcessTileSeparationY = function (body, y)\r\n{\r\n    if (y < 0)\r\n    {\r\n        body.blocked.none = false;\r\n        body.blocked.up = true;\r\n    }\r\n    else if (y > 0)\r\n    {\r\n        body.blocked.none = false;\r\n        body.blocked.down = true;\r\n    }\r\n\r\n    body.position.y -= y;\r\n\r\n    if (body.bounce.y === 0)\r\n    {\r\n        body.velocity.y = 0;\r\n    }\r\n    else\r\n    {\r\n        body.velocity.y = -body.velocity.y * body.bounce.y;\r\n    }\r\n};\r\n\r\nmodule.exports = ProcessTileSeparationY;\r\n"]},"metadata":{},"sourceType":"script"}