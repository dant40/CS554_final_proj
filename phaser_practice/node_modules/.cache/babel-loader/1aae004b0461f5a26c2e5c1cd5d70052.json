{"ast":null,"code":"/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar GetLineToCircle = require('./GetLineToCircle');\n\nvar CircleToRectangle = require('./CircleToRectangle');\n/**\r\n * Checks for intersection between a circle and a rectangle,\r\n * and returns the intersection points as a Point object array.\r\n *\r\n * @function Phaser.Geom.Intersects.GetCircleToRectangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The circle to be checked.\r\n * @param {Phaser.Geom.Rectangle} rect - The rectangle to be checked.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\n\n\nvar GetCircleToRectangle = function (circle, rect, out) {\n  if (out === undefined) {\n    out = [];\n  }\n\n  if (CircleToRectangle(circle, rect)) {\n    var lineA = rect.getLineA();\n    var lineB = rect.getLineB();\n    var lineC = rect.getLineC();\n    var lineD = rect.getLineD();\n    GetLineToCircle(lineA, circle, out);\n    GetLineToCircle(lineB, circle, out);\n    GetLineToCircle(lineC, circle, out);\n    GetLineToCircle(lineD, circle, out);\n  }\n\n  return out;\n};\n\nmodule.exports = GetCircleToRectangle;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/intersects/GetCircleToRectangle.js"],"names":["GetLineToCircle","require","CircleToRectangle","GetCircleToRectangle","circle","rect","out","undefined","lineA","getLineA","lineB","getLineB","lineC","getLineC","lineD","getLineD","module","exports"],"mappings":"AAAA;;;;;;AAOA,IAAIA,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA7B;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAA/B;AAEA;;;;;;;;;;;;;;;AAaA,IAAIE,oBAAoB,GAAG,UAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,GAAxB,EAC3B;AACI,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AAAED,IAAAA,GAAG,GAAG,EAAN;AAAW;;AAEpC,MAAIJ,iBAAiB,CAACE,MAAD,EAASC,IAAT,CAArB,EACA;AACI,QAAIG,KAAK,GAAGH,IAAI,CAACI,QAAL,EAAZ;AACA,QAAIC,KAAK,GAAGL,IAAI,CAACM,QAAL,EAAZ;AACA,QAAIC,KAAK,GAAGP,IAAI,CAACQ,QAAL,EAAZ;AACA,QAAIC,KAAK,GAAGT,IAAI,CAACU,QAAL,EAAZ;AAEAf,IAAAA,eAAe,CAACQ,KAAD,EAAQJ,MAAR,EAAgBE,GAAhB,CAAf;AACAN,IAAAA,eAAe,CAACU,KAAD,EAAQN,MAAR,EAAgBE,GAAhB,CAAf;AACAN,IAAAA,eAAe,CAACY,KAAD,EAAQR,MAAR,EAAgBE,GAAhB,CAAf;AACAN,IAAAA,eAAe,CAACc,KAAD,EAAQV,MAAR,EAAgBE,GAAhB,CAAf;AACH;;AAED,SAAOA,GAAP;AACH,CAlBD;;AAoBAU,MAAM,CAACC,OAAP,GAAiBd,oBAAjB","sourcesContent":["/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetLineToCircle = require('./GetLineToCircle');\r\nvar CircleToRectangle = require('./CircleToRectangle');\r\n\r\n/**\r\n * Checks for intersection between a circle and a rectangle,\r\n * and returns the intersection points as a Point object array.\r\n *\r\n * @function Phaser.Geom.Intersects.GetCircleToRectangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The circle to be checked.\r\n * @param {Phaser.Geom.Rectangle} rect - The rectangle to be checked.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\r\nvar GetCircleToRectangle = function (circle, rect, out)\r\n{\r\n    if (out === undefined) { out = []; }\r\n\r\n    if (CircleToRectangle(circle, rect))\r\n    {\r\n        var lineA = rect.getLineA();\r\n        var lineB = rect.getLineB();\r\n        var lineC = rect.getLineC();\r\n        var lineD = rect.getLineD();\r\n\r\n        GetLineToCircle(lineA, circle, out);\r\n        GetLineToCircle(lineB, circle, out);\r\n        GetLineToCircle(lineC, circle, out);\r\n        GetLineToCircle(lineD, circle, out);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetCircleToRectangle;\r\n"]},"metadata":{},"sourceType":"script"}