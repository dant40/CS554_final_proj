{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * The Tween Repeat Event.\r\n * \r\n * This event is dispatched by a Tween when one of the properties it is tweening repeats.\r\n * \r\n * This event will only be dispatched if the Tween has a property with a repeat count set.\r\n * \r\n * If a Tween has a `repeatDelay` set, this event will fire after that delay expires.\r\n * \r\n * The difference between `loop` and `repeat` is that `repeat` is a property setting,\r\n * where-as `loop` applies to the entire Tween.\r\n * \r\n * Listen to it from a Tween instance using `Tween.on('repeat', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var tween = this.tweens.add({\r\n *     targets: image,\r\n *     x: 500,\r\n *     ease: 'Power1',\r\n *     duration: 3000,\r\n *     repeat: 4\r\n * });\r\n * tween.on('repeat', listener);\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TWEEN_REPEAT\r\n * @since 3.19.0\r\n * \r\n * @param {Phaser.Tweens.Tween} tween - A reference to the Tween instance that emitted the event.\r\n * @param {string} key - The key of the property that just repeated.\r\n * @param {any} target - The target that the property just repeated on.\r\n */\nmodule.exports = 'repeat';","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/tweens/events/TWEEN_REPEAT_EVENT.js"],"names":["module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCAA,MAAM,CAACC,OAAP,GAAiB,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Tween Repeat Event.\r\n * \r\n * This event is dispatched by a Tween when one of the properties it is tweening repeats.\r\n * \r\n * This event will only be dispatched if the Tween has a property with a repeat count set.\r\n * \r\n * If a Tween has a `repeatDelay` set, this event will fire after that delay expires.\r\n * \r\n * The difference between `loop` and `repeat` is that `repeat` is a property setting,\r\n * where-as `loop` applies to the entire Tween.\r\n * \r\n * Listen to it from a Tween instance using `Tween.on('repeat', listener)`, i.e.:\r\n * \r\n * ```javascript\r\n * var tween = this.tweens.add({\r\n *     targets: image,\r\n *     x: 500,\r\n *     ease: 'Power1',\r\n *     duration: 3000,\r\n *     repeat: 4\r\n * });\r\n * tween.on('repeat', listener);\r\n * ```\r\n *\r\n * @event Phaser.Tweens.Events#TWEEN_REPEAT\r\n * @since 3.19.0\r\n * \r\n * @param {Phaser.Tweens.Tween} tween - A reference to the Tween instance that emitted the event.\r\n * @param {string} key - The key of the property that just repeated.\r\n * @param {any} target - The target that the property just repeated on.\r\n */\r\nmodule.exports = 'repeat';\r\n"]},"metadata":{},"sourceType":"script"}