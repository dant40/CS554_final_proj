{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n//  Browser specific prefix, so not going to change between contexts, only between browsers\nvar prefix = '';\n/**\r\n * @namespace Phaser.Display.Canvas.Smoothing\r\n * @since 3.0.0\r\n */\n\nvar Smoothing = function () {\n  /**\r\n   * Gets the Smoothing Enabled vendor prefix being used on the given context, or null if not set.\r\n   *\r\n   * @function Phaser.Display.Canvas.Smoothing.getPrefix\r\n   * @since 3.0.0\r\n   *\r\n   * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The canvas context to check.\r\n   *\r\n   * @return {string} The name of the property on the context which controls image smoothing (either `imageSmoothingEnabled` or a vendor-prefixed version thereof), or `null` if not supported.\r\n   */\n  var getPrefix = function (context) {\n    var vendors = ['i', 'webkitI', 'msI', 'mozI', 'oI'];\n\n    for (var i = 0; i < vendors.length; i++) {\n      var s = vendors[i] + 'mageSmoothingEnabled';\n\n      if (s in context) {\n        return s;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Sets the Image Smoothing property on the given context. Set to false to disable image smoothing.\r\n   * By default browsers have image smoothing enabled, which isn't always what you visually want, especially\r\n   * when using pixel art in a game. Note that this sets the property on the context itself, so that any image\r\n   * drawn to the context will be affected. This sets the property across all current browsers but support is\r\n   * patchy on earlier browsers, especially on mobile.\r\n   *\r\n   * @function Phaser.Display.Canvas.Smoothing.enable\r\n   * @since 3.0.0\r\n   *\r\n   * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The context on which to enable smoothing.\r\n   *\r\n   * @return {(CanvasRenderingContext2D|WebGLRenderingContext)} The provided context.\r\n   */\n\n\n  var enable = function (context) {\n    if (prefix === '') {\n      prefix = getPrefix(context);\n    }\n\n    if (prefix) {\n      context[prefix] = true;\n    }\n\n    return context;\n  };\n  /**\r\n   * Sets the Image Smoothing property on the given context. Set to false to disable image smoothing.\r\n   * By default browsers have image smoothing enabled, which isn't always what you visually want, especially\r\n   * when using pixel art in a game. Note that this sets the property on the context itself, so that any image\r\n   * drawn to the context will be affected. This sets the property across all current browsers but support is\r\n   * patchy on earlier browsers, especially on mobile.\r\n   *\r\n   * @function Phaser.Display.Canvas.Smoothing.disable\r\n   * @since 3.0.0\r\n   *\r\n   * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The context on which to disable smoothing.\r\n   *\r\n   * @return {(CanvasRenderingContext2D|WebGLRenderingContext)} The provided context.\r\n   */\n\n\n  var disable = function (context) {\n    if (prefix === '') {\n      prefix = getPrefix(context);\n    }\n\n    if (prefix) {\n      context[prefix] = false;\n    }\n\n    return context;\n  };\n  /**\r\n   * Returns `true` if the given context has image smoothing enabled, otherwise returns `false`.\r\n   * Returns null if no smoothing prefix is available.\r\n   *\r\n   * @function Phaser.Display.Canvas.Smoothing.isEnabled\r\n   * @since 3.0.0\r\n   *\r\n   * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The context to check.\r\n   *\r\n   * @return {?boolean} `true` if smoothing is enabled on the context, otherwise `false`. `null` if not supported.\r\n   */\n\n\n  var isEnabled = function (context) {\n    return prefix !== null ? context[prefix] : null;\n  };\n\n  return {\n    disable: disable,\n    enable: enable,\n    getPrefix: getPrefix,\n    isEnabled: isEnabled\n  };\n};\n\nmodule.exports = Smoothing();","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/display/canvas/Smoothing.js"],"names":["prefix","Smoothing","getPrefix","context","vendors","i","length","s","enable","disable","isEnabled","module","exports"],"mappings":"AAAA;;;;;AAMA;AACA,IAAIA,MAAM,GAAG,EAAb;AAEA;;;;;AAIA,IAAIC,SAAS,GAAG,YAChB;AACI;;;;;;;;;;AAUA,MAAIC,SAAS,GAAG,UAAUC,OAAV,EAChB;AACI,QAAIC,OAAO,GAAG,CAAE,GAAF,EAAO,SAAP,EAAkB,KAAlB,EAAyB,MAAzB,EAAiC,IAAjC,CAAd;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EACA;AACI,UAAIE,CAAC,GAAGH,OAAO,CAACC,CAAD,CAAP,GAAa,sBAArB;;AAEA,UAAIE,CAAC,IAAIJ,OAAT,EACA;AACI,eAAOI,CAAP;AACH;AACJ;;AAED,WAAO,IAAP;AACH,GAfD;AAiBA;;;;;;;;;;;;;;;;AAcA,MAAIC,MAAM,GAAG,UAAUL,OAAV,EACb;AACI,QAAIH,MAAM,KAAK,EAAf,EACA;AACIA,MAAAA,MAAM,GAAGE,SAAS,CAACC,OAAD,CAAlB;AACH;;AAED,QAAIH,MAAJ,EACA;AACIG,MAAAA,OAAO,CAACH,MAAD,CAAP,GAAkB,IAAlB;AACH;;AAED,WAAOG,OAAP;AACH,GAbD;AAeA;;;;;;;;;;;;;;;;AAcA,MAAIM,OAAO,GAAG,UAAUN,OAAV,EACd;AACI,QAAIH,MAAM,KAAK,EAAf,EACA;AACIA,MAAAA,MAAM,GAAGE,SAAS,CAACC,OAAD,CAAlB;AACH;;AAED,QAAIH,MAAJ,EACA;AACIG,MAAAA,OAAO,CAACH,MAAD,CAAP,GAAkB,KAAlB;AACH;;AAED,WAAOG,OAAP;AACH,GAbD;AAeA;;;;;;;;;;;;;AAWA,MAAIO,SAAS,GAAG,UAAUP,OAAV,EAChB;AACI,WAAQH,MAAM,KAAK,IAAZ,GAAoBG,OAAO,CAACH,MAAD,CAA3B,GAAsC,IAA7C;AACH,GAHD;;AAKA,SAAO;AACHS,IAAAA,OAAO,EAAEA,OADN;AAEHD,IAAAA,MAAM,EAAEA,MAFL;AAGHN,IAAAA,SAAS,EAAEA,SAHR;AAIHQ,IAAAA,SAAS,EAAEA;AAJR,GAAP;AAOH,CA9GD;;AAgHAC,MAAM,CAACC,OAAP,GAAiBX,SAAS,EAA1B","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  Browser specific prefix, so not going to change between contexts, only between browsers\r\nvar prefix = '';\r\n\r\n/**\r\n * @namespace Phaser.Display.Canvas.Smoothing\r\n * @since 3.0.0\r\n */\r\nvar Smoothing = function ()\r\n{\r\n    /**\r\n     * Gets the Smoothing Enabled vendor prefix being used on the given context, or null if not set.\r\n     *\r\n     * @function Phaser.Display.Canvas.Smoothing.getPrefix\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The canvas context to check.\r\n     *\r\n     * @return {string} The name of the property on the context which controls image smoothing (either `imageSmoothingEnabled` or a vendor-prefixed version thereof), or `null` if not supported.\r\n     */\r\n    var getPrefix = function (context)\r\n    {\r\n        var vendors = [ 'i', 'webkitI', 'msI', 'mozI', 'oI' ];\r\n\r\n        for (var i = 0; i < vendors.length; i++)\r\n        {\r\n            var s = vendors[i] + 'mageSmoothingEnabled';\r\n\r\n            if (s in context)\r\n            {\r\n                return s;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Sets the Image Smoothing property on the given context. Set to false to disable image smoothing.\r\n     * By default browsers have image smoothing enabled, which isn't always what you visually want, especially\r\n     * when using pixel art in a game. Note that this sets the property on the context itself, so that any image\r\n     * drawn to the context will be affected. This sets the property across all current browsers but support is\r\n     * patchy on earlier browsers, especially on mobile.\r\n     *\r\n     * @function Phaser.Display.Canvas.Smoothing.enable\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The context on which to enable smoothing.\r\n     *\r\n     * @return {(CanvasRenderingContext2D|WebGLRenderingContext)} The provided context.\r\n     */\r\n    var enable = function (context)\r\n    {\r\n        if (prefix === '')\r\n        {\r\n            prefix = getPrefix(context);\r\n        }\r\n\r\n        if (prefix)\r\n        {\r\n            context[prefix] = true;\r\n        }\r\n\r\n        return context;\r\n    };\r\n\r\n    /**\r\n     * Sets the Image Smoothing property on the given context. Set to false to disable image smoothing.\r\n     * By default browsers have image smoothing enabled, which isn't always what you visually want, especially\r\n     * when using pixel art in a game. Note that this sets the property on the context itself, so that any image\r\n     * drawn to the context will be affected. This sets the property across all current browsers but support is\r\n     * patchy on earlier browsers, especially on mobile.\r\n     *\r\n     * @function Phaser.Display.Canvas.Smoothing.disable\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The context on which to disable smoothing.\r\n     *\r\n     * @return {(CanvasRenderingContext2D|WebGLRenderingContext)} The provided context.\r\n     */\r\n    var disable = function (context)\r\n    {\r\n        if (prefix === '')\r\n        {\r\n            prefix = getPrefix(context);\r\n        }\r\n\r\n        if (prefix)\r\n        {\r\n            context[prefix] = false;\r\n        }\r\n\r\n        return context;\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if the given context has image smoothing enabled, otherwise returns `false`.\r\n     * Returns null if no smoothing prefix is available.\r\n     *\r\n     * @function Phaser.Display.Canvas.Smoothing.isEnabled\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(CanvasRenderingContext2D|WebGLRenderingContext)} context - The context to check.\r\n     *\r\n     * @return {?boolean} `true` if smoothing is enabled on the context, otherwise `false`. `null` if not supported.\r\n     */\r\n    var isEnabled = function (context)\r\n    {\r\n        return (prefix !== null) ? context[prefix] : null;\r\n    };\r\n\r\n    return {\r\n        disable: disable,\r\n        enable: enable,\r\n        getPrefix: getPrefix,\r\n        isEnabled: isEnabled\r\n    };\r\n\r\n};\r\n\r\nmodule.exports = Smoothing();\r\n"]},"metadata":{},"sourceType":"script"}