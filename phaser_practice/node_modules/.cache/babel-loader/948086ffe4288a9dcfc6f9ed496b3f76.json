{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Checks if an array can be used as a matrix.\r\n *\r\n * A matrix is a two-dimensional array (array of arrays), where all sub-arrays (rows) have the same length. There must be at least two rows:\r\n *\r\n * ```\r\n *    [\r\n *        [ 1, 1, 1, 1, 1, 1 ],\r\n *        [ 2, 0, 0, 0, 0, 4 ],\r\n *        [ 2, 0, 1, 2, 0, 4 ],\r\n *        [ 2, 0, 3, 4, 0, 4 ],\r\n *        [ 2, 0, 0, 0, 0, 4 ],\r\n *        [ 3, 3, 3, 3, 3, 3 ]\r\n *    ]\r\n * ```\r\n *\r\n * @function Phaser.Utils.Array.Matrix.CheckMatrix\r\n * @since 3.0.0\r\n * \r\n * @generic T\r\n * @genericUse {T[][]} - [matrix]\r\n *\r\n * @param {T[][]} [matrix] - The array to check.\r\n *\r\n * @return {boolean} `true` if the given `matrix` array is a valid matrix.\r\n */\nvar CheckMatrix = function (matrix) {\n  if (!Array.isArray(matrix) || matrix.length < 2 || !Array.isArray(matrix[0])) {\n    return false;\n  } //  How long is the first row?\n\n\n  var size = matrix[0].length; //  Validate the rest of the rows are the same length\n\n  for (var i = 1; i < matrix.length; i++) {\n    if (matrix[i].length !== size) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nmodule.exports = CheckMatrix;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/array/matrix/CheckMatrix.js"],"names":["CheckMatrix","matrix","Array","isArray","length","size","i","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAIA,WAAW,GAAG,UAAUC,MAAV,EAClB;AACI,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAD,IAA0BA,MAAM,CAACG,MAAP,GAAgB,CAA1C,IAA+C,CAACF,KAAK,CAACC,OAAN,CAAcF,MAAM,CAAC,CAAD,CAApB,CAApD,EACA;AACI,WAAO,KAAP;AACH,GAJL,CAMI;;;AACA,MAAII,IAAI,GAAGJ,MAAM,CAAC,CAAD,CAAN,CAAUG,MAArB,CAPJ,CASI;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACG,MAA3B,EAAmCE,CAAC,EAApC,EACA;AACI,QAAIL,MAAM,CAACK,CAAD,CAAN,CAAUF,MAAV,KAAqBC,IAAzB,EACA;AACI,aAAO,KAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH,CApBD;;AAsBAE,MAAM,CAACC,OAAP,GAAiBR,WAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Checks if an array can be used as a matrix.\r\n *\r\n * A matrix is a two-dimensional array (array of arrays), where all sub-arrays (rows) have the same length. There must be at least two rows:\r\n *\r\n * ```\r\n *    [\r\n *        [ 1, 1, 1, 1, 1, 1 ],\r\n *        [ 2, 0, 0, 0, 0, 4 ],\r\n *        [ 2, 0, 1, 2, 0, 4 ],\r\n *        [ 2, 0, 3, 4, 0, 4 ],\r\n *        [ 2, 0, 0, 0, 0, 4 ],\r\n *        [ 3, 3, 3, 3, 3, 3 ]\r\n *    ]\r\n * ```\r\n *\r\n * @function Phaser.Utils.Array.Matrix.CheckMatrix\r\n * @since 3.0.0\r\n * \r\n * @generic T\r\n * @genericUse {T[][]} - [matrix]\r\n *\r\n * @param {T[][]} [matrix] - The array to check.\r\n *\r\n * @return {boolean} `true` if the given `matrix` array is a valid matrix.\r\n */\r\nvar CheckMatrix = function (matrix)\r\n{\r\n    if (!Array.isArray(matrix) || matrix.length < 2 || !Array.isArray(matrix[0]))\r\n    {\r\n        return false;\r\n    }\r\n\r\n    //  How long is the first row?\r\n    var size = matrix[0].length;\r\n\r\n    //  Validate the rest of the rows are the same length\r\n    for (var i = 1; i < matrix.length; i++)\r\n    {\r\n        if (matrix[i].length !== size)\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nmodule.exports = CheckMatrix;\r\n"]},"metadata":{},"sourceType":"script"}