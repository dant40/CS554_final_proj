{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Shallow Object Clone. Will not clone nested objects.\r\n *\r\n * @function Phaser.Utils.Objects.Clone\r\n * @since 3.0.0\r\n *\r\n * @param {object} obj - the object from which to clone\r\n *\r\n * @return {object} a new object with the same properties as the input obj\r\n */\nvar Clone = function (obj) {\n  var clone = {};\n\n  for (var key in obj) {\n    if (Array.isArray(obj[key])) {\n      clone[key] = obj[key].slice(0);\n    } else {\n      clone[key] = obj[key];\n    }\n  }\n\n  return clone;\n};\n\nmodule.exports = Clone;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/object/Clone.js"],"names":["Clone","obj","clone","key","Array","isArray","slice","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;AAUA,IAAIA,KAAK,GAAG,UAAUC,GAAV,EACZ;AACI,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,GAAT,IAAgBF,GAAhB,EACA;AACI,QAAIG,KAAK,CAACC,OAAN,CAAcJ,GAAG,CAACE,GAAD,CAAjB,CAAJ,EACA;AACID,MAAAA,KAAK,CAACC,GAAD,CAAL,GAAaF,GAAG,CAACE,GAAD,CAAH,CAASG,KAAT,CAAe,CAAf,CAAb;AACH,KAHD,MAKA;AACIJ,MAAAA,KAAK,CAACC,GAAD,CAAL,GAAaF,GAAG,CAACE,GAAD,CAAhB;AACH;AACJ;;AAED,SAAOD,KAAP;AACH,CAjBD;;AAmBAK,MAAM,CAACC,OAAP,GAAiBR,KAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Shallow Object Clone. Will not clone nested objects.\r\n *\r\n * @function Phaser.Utils.Objects.Clone\r\n * @since 3.0.0\r\n *\r\n * @param {object} obj - the object from which to clone\r\n *\r\n * @return {object} a new object with the same properties as the input obj\r\n */\r\nvar Clone = function (obj)\r\n{\r\n    var clone = {};\r\n\r\n    for (var key in obj)\r\n    {\r\n        if (Array.isArray(obj[key]))\r\n        {\r\n            clone[key] = obj[key].slice(0);\r\n        }\r\n        else\r\n        {\r\n            clone[key] = obj[key];\r\n        }\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nmodule.exports = Clone;\r\n"]},"metadata":{},"sourceType":"script"}