{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar BlendModes = require('../renderer/BlendModes');\n\nvar GetAdvancedValue = require('../utils/object/GetAdvancedValue');\n/**\r\n * Builds a Game Object using the provided configuration object.\r\n *\r\n * @function Phaser.GameObjects.BuildGameObject\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - A reference to the Scene.\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The initial GameObject.\r\n * @param {Phaser.Types.GameObjects.GameObjectConfig} config - The config to build the GameObject with.\r\n *\r\n * @return {Phaser.GameObjects.GameObject} The built Game Object.\r\n */\n\n\nvar BuildGameObject = function (scene, gameObject, config) {\n  //  Position\n  gameObject.x = GetAdvancedValue(config, 'x', 0);\n  gameObject.y = GetAdvancedValue(config, 'y', 0);\n  gameObject.depth = GetAdvancedValue(config, 'depth', 0); //  Flip\n\n  gameObject.flipX = GetAdvancedValue(config, 'flipX', false);\n  gameObject.flipY = GetAdvancedValue(config, 'flipY', false); //  Scale\n  //  Either: { scale: 2 } or { scale: { x: 2, y: 2 }}\n\n  var scale = GetAdvancedValue(config, 'scale', null);\n\n  if (typeof scale === 'number') {\n    gameObject.setScale(scale);\n  } else if (scale !== null) {\n    gameObject.scaleX = GetAdvancedValue(scale, 'x', 1);\n    gameObject.scaleY = GetAdvancedValue(scale, 'y', 1);\n  } //  ScrollFactor\n  //  Either: { scrollFactor: 2 } or { scrollFactor: { x: 2, y: 2 }}\n\n\n  var scrollFactor = GetAdvancedValue(config, 'scrollFactor', null);\n\n  if (typeof scrollFactor === 'number') {\n    gameObject.setScrollFactor(scrollFactor);\n  } else if (scrollFactor !== null) {\n    gameObject.scrollFactorX = GetAdvancedValue(scrollFactor, 'x', 1);\n    gameObject.scrollFactorY = GetAdvancedValue(scrollFactor, 'y', 1);\n  } //  Rotation\n\n\n  gameObject.rotation = GetAdvancedValue(config, 'rotation', 0);\n  var angle = GetAdvancedValue(config, 'angle', null);\n\n  if (angle !== null) {\n    gameObject.angle = angle;\n  } //  Alpha\n\n\n  gameObject.alpha = GetAdvancedValue(config, 'alpha', 1); //  Origin\n  //  Either: { origin: 0.5 } or { origin: { x: 0.5, y: 0.5 }}\n\n  var origin = GetAdvancedValue(config, 'origin', null);\n\n  if (typeof origin === 'number') {\n    gameObject.setOrigin(origin);\n  } else if (origin !== null) {\n    var ox = GetAdvancedValue(origin, 'x', 0.5);\n    var oy = GetAdvancedValue(origin, 'y', 0.5);\n    gameObject.setOrigin(ox, oy);\n  } //  BlendMode\n\n\n  gameObject.blendMode = GetAdvancedValue(config, 'blendMode', BlendModes.NORMAL); //  Visible\n\n  gameObject.visible = GetAdvancedValue(config, 'visible', true); //  Add to Scene\n\n  var add = GetAdvancedValue(config, 'add', true);\n\n  if (add) {\n    scene.sys.displayList.add(gameObject);\n  }\n\n  if (gameObject.preUpdate) {\n    scene.sys.updateList.add(gameObject);\n  }\n\n  return gameObject;\n};\n\nmodule.exports = BuildGameObject;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/BuildGameObject.js"],"names":["BlendModes","require","GetAdvancedValue","BuildGameObject","scene","gameObject","config","x","y","depth","flipX","flipY","scale","setScale","scaleX","scaleY","scrollFactor","setScrollFactor","scrollFactorX","scrollFactorY","rotation","angle","alpha","origin","setOrigin","ox","oy","blendMode","NORMAL","visible","add","sys","displayList","preUpdate","updateList","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar BlendModes = require('../renderer/BlendModes');\r\nvar GetAdvancedValue = require('../utils/object/GetAdvancedValue');\r\n\r\n/**\r\n * Builds a Game Object using the provided configuration object.\r\n *\r\n * @function Phaser.GameObjects.BuildGameObject\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - A reference to the Scene.\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The initial GameObject.\r\n * @param {Phaser.Types.GameObjects.GameObjectConfig} config - The config to build the GameObject with.\r\n *\r\n * @return {Phaser.GameObjects.GameObject} The built Game Object.\r\n */\r\nvar BuildGameObject = function (scene, gameObject, config)\r\n{\r\n    //  Position\r\n\r\n    gameObject.x = GetAdvancedValue(config, 'x', 0);\r\n    gameObject.y = GetAdvancedValue(config, 'y', 0);\r\n    gameObject.depth = GetAdvancedValue(config, 'depth', 0);\r\n\r\n    //  Flip\r\n\r\n    gameObject.flipX = GetAdvancedValue(config, 'flipX', false);\r\n    gameObject.flipY = GetAdvancedValue(config, 'flipY', false);\r\n\r\n    //  Scale\r\n    //  Either: { scale: 2 } or { scale: { x: 2, y: 2 }}\r\n\r\n    var scale = GetAdvancedValue(config, 'scale', null);\r\n\r\n    if (typeof scale === 'number')\r\n    {\r\n        gameObject.setScale(scale);\r\n    }\r\n    else if (scale !== null)\r\n    {\r\n        gameObject.scaleX = GetAdvancedValue(scale, 'x', 1);\r\n        gameObject.scaleY = GetAdvancedValue(scale, 'y', 1);\r\n    }\r\n\r\n    //  ScrollFactor\r\n    //  Either: { scrollFactor: 2 } or { scrollFactor: { x: 2, y: 2 }}\r\n\r\n    var scrollFactor = GetAdvancedValue(config, 'scrollFactor', null);\r\n\r\n    if (typeof scrollFactor === 'number')\r\n    {\r\n        gameObject.setScrollFactor(scrollFactor);\r\n    }\r\n    else if (scrollFactor !== null)\r\n    {\r\n        gameObject.scrollFactorX = GetAdvancedValue(scrollFactor, 'x', 1);\r\n        gameObject.scrollFactorY = GetAdvancedValue(scrollFactor, 'y', 1);\r\n    }\r\n\r\n    //  Rotation\r\n\r\n    gameObject.rotation = GetAdvancedValue(config, 'rotation', 0);\r\n\r\n    var angle = GetAdvancedValue(config, 'angle', null);\r\n\r\n    if (angle !== null)\r\n    {\r\n        gameObject.angle = angle;\r\n    }\r\n\r\n    //  Alpha\r\n\r\n    gameObject.alpha = GetAdvancedValue(config, 'alpha', 1);\r\n\r\n    //  Origin\r\n    //  Either: { origin: 0.5 } or { origin: { x: 0.5, y: 0.5 }}\r\n\r\n    var origin = GetAdvancedValue(config, 'origin', null);\r\n\r\n    if (typeof origin === 'number')\r\n    {\r\n        gameObject.setOrigin(origin);\r\n    }\r\n    else if (origin !== null)\r\n    {\r\n        var ox = GetAdvancedValue(origin, 'x', 0.5);\r\n        var oy = GetAdvancedValue(origin, 'y', 0.5);\r\n\r\n        gameObject.setOrigin(ox, oy);\r\n    }\r\n\r\n    //  BlendMode\r\n\r\n    gameObject.blendMode = GetAdvancedValue(config, 'blendMode', BlendModes.NORMAL);\r\n\r\n    //  Visible\r\n\r\n    gameObject.visible = GetAdvancedValue(config, 'visible', true);\r\n\r\n    //  Add to Scene\r\n\r\n    var add = GetAdvancedValue(config, 'add', true);\r\n\r\n    if (add)\r\n    {\r\n        scene.sys.displayList.add(gameObject);\r\n    }\r\n\r\n    if (gameObject.preUpdate)\r\n    {\r\n        scene.sys.updateList.add(gameObject);\r\n    }\r\n\r\n    return gameObject;\r\n};\r\n\r\nmodule.exports = BuildGameObject;\r\n"]},"metadata":{},"sourceType":"script"}