{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Sets the strokeStyle and lineWidth on the target context based on the given Shape.\r\n *\r\n * @method Phaser.GameObjects.Shape#LineStyleCanvas\r\n * @since 3.13.0\r\n * @private\r\n *\r\n * @param {CanvasRenderingContext2D} ctx - The context to set the stroke style on.\r\n * @param {Phaser.GameObjects.Shape} src - The Game Object to set the stroke style from.\r\n * @param {number} [altColor] - An alternative color to render with.\r\n * @param {number} [altAlpha] - An alternative alpha to render with.\r\n */\nvar LineStyleCanvas = function (ctx, src, altColor, altAlpha) {\n  var strokeColor = altColor ? altColor : src.strokeColor;\n  var strokeAlpha = altAlpha ? altAlpha : src.strokeAlpha;\n  var red = (strokeColor & 0xFF0000) >>> 16;\n  var green = (strokeColor & 0xFF00) >>> 8;\n  var blue = strokeColor & 0xFF;\n  ctx.strokeStyle = 'rgba(' + red + ',' + green + ',' + blue + ',' + strokeAlpha + ')';\n  ctx.lineWidth = src.lineWidth;\n};\n\nmodule.exports = LineStyleCanvas;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/shape/LineStyleCanvas.js"],"names":["LineStyleCanvas","ctx","src","altColor","altAlpha","strokeColor","strokeAlpha","red","green","blue","strokeStyle","lineWidth","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;AAYA,IAAIA,eAAe,GAAG,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,QAApB,EAA8BC,QAA9B,EACtB;AACI,MAAIC,WAAW,GAAIF,QAAD,GAAaA,QAAb,GAAwBD,GAAG,CAACG,WAA9C;AACA,MAAIC,WAAW,GAAIF,QAAD,GAAaA,QAAb,GAAwBF,GAAG,CAACI,WAA9C;AAEA,MAAIC,GAAG,GAAI,CAACF,WAAW,GAAG,QAAf,MAA6B,EAAxC;AACA,MAAIG,KAAK,GAAI,CAACH,WAAW,GAAG,MAAf,MAA2B,CAAxC;AACA,MAAII,IAAI,GAAIJ,WAAW,GAAG,IAA1B;AAEAJ,EAAAA,GAAG,CAACS,WAAJ,GAAkB,UAAUH,GAAV,GAAgB,GAAhB,GAAsBC,KAAtB,GAA8B,GAA9B,GAAoCC,IAApC,GAA2C,GAA3C,GAAiDH,WAAjD,GAA+D,GAAjF;AACAL,EAAAA,GAAG,CAACU,SAAJ,GAAgBT,GAAG,CAACS,SAApB;AACH,CAXD;;AAaAC,MAAM,CAACC,OAAP,GAAiBb,eAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Sets the strokeStyle and lineWidth on the target context based on the given Shape.\r\n *\r\n * @method Phaser.GameObjects.Shape#LineStyleCanvas\r\n * @since 3.13.0\r\n * @private\r\n *\r\n * @param {CanvasRenderingContext2D} ctx - The context to set the stroke style on.\r\n * @param {Phaser.GameObjects.Shape} src - The Game Object to set the stroke style from.\r\n * @param {number} [altColor] - An alternative color to render with.\r\n * @param {number} [altAlpha] - An alternative alpha to render with.\r\n */\r\nvar LineStyleCanvas = function (ctx, src, altColor, altAlpha)\r\n{\r\n    var strokeColor = (altColor) ? altColor : src.strokeColor;\r\n    var strokeAlpha = (altAlpha) ? altAlpha : src.strokeAlpha;\r\n\r\n    var red = ((strokeColor & 0xFF0000) >>> 16);\r\n    var green = ((strokeColor & 0xFF00) >>> 8);\r\n    var blue = (strokeColor & 0xFF);\r\n\r\n    ctx.strokeStyle = 'rgba(' + red + ',' + green + ',' + blue + ',' + strokeAlpha + ')';\r\n    ctx.lineWidth = src.lineWidth;\r\n};\r\n\r\nmodule.exports = LineStyleCanvas;\r\n"]},"metadata":{},"sourceType":"script"}