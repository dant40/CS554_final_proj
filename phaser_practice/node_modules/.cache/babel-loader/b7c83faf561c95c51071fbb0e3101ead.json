{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Provides methods for setting the gravity properties of an Arcade Physics Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.Physics.Arcade.Components.Gravity\r\n * @since 3.0.0\r\n */\nvar Gravity = {\n  /**\r\n   * Set the X and Y values of the gravitational pull to act upon this Arcade Physics Game Object. Values can be positive or negative. Larger values result in a stronger effect.\r\n   * \r\n   * If only one value is provided, this value will be used for both the X and Y axis.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Gravity#setGravity\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The gravitational force to be applied to the X-axis.\r\n   * @param {number} [y=x] - The gravitational force to be applied to the Y-axis. If this is not specified, the X value will be used.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setGravity: function (x, y) {\n    this.body.gravity.set(x, y);\n    return this;\n  },\n\n  /**\r\n   * Set the gravitational force to be applied to the X axis. Value can be positive or negative. Larger values result in a stronger effect.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Gravity#setGravityX\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The gravitational force to be applied to the X-axis.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setGravityX: function (x) {\n    this.body.gravity.x = x;\n    return this;\n  },\n\n  /**\r\n   * Set the gravitational force to be applied to the Y axis. Value can be positive or negative. Larger values result in a stronger effect.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Gravity#setGravityY\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} y - The gravitational force to be applied to the Y-axis.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setGravityY: function (y) {\n    this.body.gravity.y = y;\n    return this;\n  }\n};\nmodule.exports = Gravity;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/arcade/components/Gravity.js"],"names":["Gravity","setGravity","x","y","body","gravity","set","setGravityX","setGravityY","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;AAOA,IAAIA,OAAO,GAAG;AAEV;;;;;;;;;;;;;AAaAC,EAAAA,UAAU,EAAE,UAAUC,CAAV,EAAaC,CAAb,EACZ;AACI,SAAKC,IAAL,CAAUC,OAAV,CAAkBC,GAAlB,CAAsBJ,CAAtB,EAAyBC,CAAzB;AAEA,WAAO,IAAP;AACH,GApBS;;AAsBV;;;;;;;;;;AAUAI,EAAAA,WAAW,EAAE,UAAUL,CAAV,EACb;AACI,SAAKE,IAAL,CAAUC,OAAV,CAAkBH,CAAlB,GAAsBA,CAAtB;AAEA,WAAO,IAAP;AACH,GArCS;;AAuCV;;;;;;;;;;AAUAM,EAAAA,WAAW,EAAE,UAAUL,CAAV,EACb;AACI,SAAKC,IAAL,CAAUC,OAAV,CAAkBF,CAAlB,GAAsBA,CAAtB;AAEA,WAAO,IAAP;AACH;AAtDS,CAAd;AA0DAM,MAAM,CAACC,OAAP,GAAiBV,OAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods for setting the gravity properties of an Arcade Physics Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.Physics.Arcade.Components.Gravity\r\n * @since 3.0.0\r\n */\r\nvar Gravity = {\r\n\r\n    /**\r\n     * Set the X and Y values of the gravitational pull to act upon this Arcade Physics Game Object. Values can be positive or negative. Larger values result in a stronger effect.\r\n     * \r\n     * If only one value is provided, this value will be used for both the X and Y axis.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Gravity#setGravity\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The gravitational force to be applied to the X-axis.\r\n     * @param {number} [y=x] - The gravitational force to be applied to the Y-axis. If this is not specified, the X value will be used.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setGravity: function (x, y)\r\n    {\r\n        this.body.gravity.set(x, y);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the gravitational force to be applied to the X axis. Value can be positive or negative. Larger values result in a stronger effect.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Gravity#setGravityX\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The gravitational force to be applied to the X-axis.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setGravityX: function (x)\r\n    {\r\n        this.body.gravity.x = x;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the gravitational force to be applied to the Y axis. Value can be positive or negative. Larger values result in a stronger effect.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Gravity#setGravityY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} y - The gravitational force to be applied to the Y-axis.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setGravityY: function (y)\r\n    {\r\n        this.body.gravity.y = y;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Gravity;\r\n"]},"metadata":{},"sourceType":"script"}