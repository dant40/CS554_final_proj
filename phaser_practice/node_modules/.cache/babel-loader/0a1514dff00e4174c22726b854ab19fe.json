{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * @typedef {object} LeaderboardScore\r\n *\r\n * @property {integer} score - An integer score value.\r\n * @property {string} scoreFormatted - The score value, formatted with the score format associated with the leaderboard.\r\n * @property {integer} timestamp - The Unix timestamp of when the leaderboard entry was last updated.\r\n * @property {integer} rank - The entry's leaderboard ranking.\r\n * @property {string} data - The developer-specified payload associated with the score, or null if one was not set.\r\n * @property {string} playerName - The player's localized display name.\r\n * @property {string} playerPhotoURL -  A url to the player's public profile photo.\r\n * @property {string} playerID - The game's unique identifier for the player.\r\n */\nvar LeaderboardScore = function (entry) {\n  return {\n    score: entry.getScore(),\n    scoreFormatted: entry.getFormattedScore(),\n    timestamp: entry.getTimestamp(),\n    rank: entry.getRank(),\n    data: entry.getExtraData(),\n    playerName: entry.getPlayer().getName(),\n    playerPhotoURL: entry.getPlayer().getPhoto(),\n    playerID: entry.getPlayer().getID()\n  };\n};\n\nmodule.exports = LeaderboardScore;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/plugins/fbinstant/src/LeaderboardScore.js"],"names":["LeaderboardScore","entry","score","getScore","scoreFormatted","getFormattedScore","timestamp","getTimestamp","rank","getRank","data","getExtraData","playerName","getPlayer","getName","playerPhotoURL","getPhoto","playerID","getID","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;AAaA,IAAIA,gBAAgB,GAAG,UAAUC,KAAV,EACvB;AACI,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,QAAN,EADJ;AAEHC,IAAAA,cAAc,EAAEH,KAAK,CAACI,iBAAN,EAFb;AAGHC,IAAAA,SAAS,EAAEL,KAAK,CAACM,YAAN,EAHR;AAIHC,IAAAA,IAAI,EAAEP,KAAK,CAACQ,OAAN,EAJH;AAKHC,IAAAA,IAAI,EAAET,KAAK,CAACU,YAAN,EALH;AAMHC,IAAAA,UAAU,EAAEX,KAAK,CAACY,SAAN,GAAkBC,OAAlB,EANT;AAOHC,IAAAA,cAAc,EAAEd,KAAK,CAACY,SAAN,GAAkBG,QAAlB,EAPb;AAQHC,IAAAA,QAAQ,EAAEhB,KAAK,CAACY,SAAN,GAAkBK,KAAlB;AARP,GAAP;AAUH,CAZD;;AAcAC,MAAM,CAACC,OAAP,GAAiBpB,gBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * @typedef {object} LeaderboardScore\r\n *\r\n * @property {integer} score - An integer score value.\r\n * @property {string} scoreFormatted - The score value, formatted with the score format associated with the leaderboard.\r\n * @property {integer} timestamp - The Unix timestamp of when the leaderboard entry was last updated.\r\n * @property {integer} rank - The entry's leaderboard ranking.\r\n * @property {string} data - The developer-specified payload associated with the score, or null if one was not set.\r\n * @property {string} playerName - The player's localized display name.\r\n * @property {string} playerPhotoURL -  A url to the player's public profile photo.\r\n * @property {string} playerID - The game's unique identifier for the player.\r\n */\r\n\r\nvar LeaderboardScore = function (entry)\r\n{\r\n    return {\r\n        score: entry.getScore(),\r\n        scoreFormatted: entry.getFormattedScore(),\r\n        timestamp: entry.getTimestamp(),\r\n        rank: entry.getRank(),\r\n        data: entry.getExtraData(),\r\n        playerName: entry.getPlayer().getName(),\r\n        playerPhotoURL: entry.getPlayer().getPhoto(),\r\n        playerID: entry.getPlayer().getID()\r\n    };\r\n};\r\n\r\nmodule.exports = LeaderboardScore;\r\n"]},"metadata":{},"sourceType":"script"}