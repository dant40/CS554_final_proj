{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n\nvar Components = require('./components');\n\nvar Image = require('../../gameobjects/image/Image');\n/**\r\n * @classdesc\r\n * An Impact Physics Image Game Object.\r\n * \r\n * An Image is a light-weight Game Object useful for the display of static images in your game,\r\n * such as logos, backgrounds, scenery or other non-animated elements. Images can have input\r\n * events and physics bodies, or be tweened, tinted or scrolled. The main difference between an\r\n * Image and a Sprite is that you cannot animate an Image as they do not have the Animation component.\r\n *\r\n * @class ImpactImage\r\n * @extends Phaser.GameObjects.Image\r\n * @memberof Phaser.Physics.Impact\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @extends Phaser.Physics.Impact.Components.Acceleration\r\n * @extends Phaser.Physics.Impact.Components.BodyScale\r\n * @extends Phaser.Physics.Impact.Components.BodyType\r\n * @extends Phaser.Physics.Impact.Components.Bounce\r\n * @extends Phaser.Physics.Impact.Components.CheckAgainst\r\n * @extends Phaser.Physics.Impact.Components.Collides\r\n * @extends Phaser.Physics.Impact.Components.Debug\r\n * @extends Phaser.Physics.Impact.Components.Friction\r\n * @extends Phaser.Physics.Impact.Components.Gravity\r\n * @extends Phaser.Physics.Impact.Components.Offset\r\n * @extends Phaser.Physics.Impact.Components.SetGameObject\r\n * @extends Phaser.Physics.Impact.Components.Velocity\r\n * @extends Phaser.GameObjects.Components.Alpha\r\n * @extends Phaser.GameObjects.Components.BlendMode\r\n * @extends Phaser.GameObjects.Components.Depth\r\n * @extends Phaser.GameObjects.Components.Flip\r\n * @extends Phaser.GameObjects.Components.GetBounds\r\n * @extends Phaser.GameObjects.Components.Origin\r\n * @extends Phaser.GameObjects.Components.Pipeline\r\n * @extends Phaser.GameObjects.Components.ScrollFactor\r\n * @extends Phaser.GameObjects.Components.Size\r\n * @extends Phaser.GameObjects.Components.Texture\r\n * @extends Phaser.GameObjects.Components.Tint\r\n * @extends Phaser.GameObjects.Components.Transform\r\n * @extends Phaser.GameObjects.Components.Visible\r\n *\r\n * @param {Phaser.Physics.Impact.World} world - The physics world of the Impact physics system.\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\n\n\nvar ImpactImage = new Class({\n  Extends: Image,\n  Mixins: [Components.Acceleration, Components.BodyScale, Components.BodyType, Components.Bounce, Components.CheckAgainst, Components.Collides, Components.Debug, Components.Friction, Components.Gravity, Components.Offset, Components.SetGameObject, Components.Velocity],\n  initialize: function ImpactImage(world, x, y, texture, frame) {\n    Image.call(this, world.scene, x, y, texture, frame);\n    /**\r\n     * The Physics Body linked to an ImpactImage.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#body\r\n     * @type {Phaser.Physics.Impact.Body}\r\n     * @since 3.0.0\r\n     */\n\n    this.body = world.create(x - this.frame.centerX, y - this.frame.centerY, this.width, this.height);\n    this.body.parent = this;\n    this.body.gameObject = this;\n    /**\r\n     * The size of the physics Body.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#size\r\n     * @type {{x: number, y: number}}\r\n     * @since 3.0.0\r\n     */\n\n    this.size = this.body.size;\n    /**\r\n     * The X and Y offset of the Body from the left and top of the Image.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#offset\r\n     * @type {{x: number, y: number}}\r\n     * @since 3.0.0\r\n     */\n\n    this.offset = this.body.offset;\n    /**\r\n     * The velocity, or rate of change the Body's position. Measured in pixels per second.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#vel\r\n     * @type {{x: number, y: number}}\r\n     * @since 3.0.0\r\n     */\n\n    this.vel = this.body.vel;\n    /**\r\n     * The acceleration is the rate of change of the velocity. Measured in pixels per second squared.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#accel\r\n     * @type {{x: number, y: number}}\r\n     * @since 3.0.0\r\n     */\n\n    this.accel = this.body.accel;\n    /**\r\n     * Friction between colliding bodies.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#friction\r\n     * @type {{x: number, y: number}}\r\n     * @since 3.0.0\r\n     */\n\n    this.friction = this.body.friction;\n    /**\r\n     * The maximum velocity of the body.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#maxVel\r\n     * @type {{x: number, y: number}}\r\n     * @since 3.0.0\r\n     */\n\n    this.maxVel = this.body.maxVel;\n  }\n});\nmodule.exports = ImpactImage;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/impact/ImpactImage.js"],"names":["Class","require","Components","Image","ImpactImage","Extends","Mixins","Acceleration","BodyScale","BodyType","Bounce","CheckAgainst","Collides","Debug","Friction","Gravity","Offset","SetGameObject","Velocity","initialize","world","x","y","texture","frame","call","scene","body","create","centerX","centerY","width","height","parent","gameObject","size","offset","vel","accel","friction","maxVel","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,+BAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,IAAIG,WAAW,GAAG,IAAIJ,KAAJ,CAAU;AAExBK,EAAAA,OAAO,EAAEF,KAFe;AAIxBG,EAAAA,MAAM,EAAE,CACJJ,UAAU,CAACK,YADP,EAEJL,UAAU,CAACM,SAFP,EAGJN,UAAU,CAACO,QAHP,EAIJP,UAAU,CAACQ,MAJP,EAKJR,UAAU,CAACS,YALP,EAMJT,UAAU,CAACU,QANP,EAOJV,UAAU,CAACW,KAPP,EAQJX,UAAU,CAACY,QARP,EASJZ,UAAU,CAACa,OATP,EAUJb,UAAU,CAACc,MAVP,EAWJd,UAAU,CAACe,aAXP,EAYJf,UAAU,CAACgB,QAZP,CAJgB;AAmBxBC,EAAAA,UAAU,EAEV,SAASf,WAAT,CAAsBgB,KAAtB,EAA6BC,CAA7B,EAAgCC,CAAhC,EAAmCC,OAAnC,EAA4CC,KAA5C,EACA;AACIrB,IAAAA,KAAK,CAACsB,IAAN,CAAW,IAAX,EAAiBL,KAAK,CAACM,KAAvB,EAA8BL,CAA9B,EAAiCC,CAAjC,EAAoCC,OAApC,EAA6CC,KAA7C;AAEA;;;;;;;;AAOA,SAAKG,IAAL,GAAYP,KAAK,CAACQ,MAAN,CAAaP,CAAC,GAAG,KAAKG,KAAL,CAAWK,OAA5B,EAAqCP,CAAC,GAAG,KAAKE,KAAL,CAAWM,OAApD,EAA6D,KAAKC,KAAlE,EAAyE,KAAKC,MAA9E,CAAZ;AAEA,SAAKL,IAAL,CAAUM,MAAV,GAAmB,IAAnB;AACA,SAAKN,IAAL,CAAUO,UAAV,GAAuB,IAAvB;AAEA;;;;;;;;AAOA,SAAKC,IAAL,GAAY,KAAKR,IAAL,CAAUQ,IAAtB;AAEA;;;;;;;;AAOA,SAAKC,MAAL,GAAc,KAAKT,IAAL,CAAUS,MAAxB;AAEA;;;;;;;;AAOA,SAAKC,GAAL,GAAW,KAAKV,IAAL,CAAUU,GAArB;AAEA;;;;;;;;AAOA,SAAKC,KAAL,GAAa,KAAKX,IAAL,CAAUW,KAAvB;AAEA;;;;;;;;AAOA,SAAKC,QAAL,GAAgB,KAAKZ,IAAL,CAAUY,QAA1B;AAEA;;;;;;;;AAOA,SAAKC,MAAL,GAAc,KAAKb,IAAL,CAAUa,MAAxB;AACH;AA1FuB,CAAV,CAAlB;AA8FAC,MAAM,CAACC,OAAP,GAAiBtC,WAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Components = require('./components');\r\nvar Image = require('../../gameobjects/image/Image');\r\n\r\n/**\r\n * @classdesc\r\n * An Impact Physics Image Game Object.\r\n * \r\n * An Image is a light-weight Game Object useful for the display of static images in your game,\r\n * such as logos, backgrounds, scenery or other non-animated elements. Images can have input\r\n * events and physics bodies, or be tweened, tinted or scrolled. The main difference between an\r\n * Image and a Sprite is that you cannot animate an Image as they do not have the Animation component.\r\n *\r\n * @class ImpactImage\r\n * @extends Phaser.GameObjects.Image\r\n * @memberof Phaser.Physics.Impact\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @extends Phaser.Physics.Impact.Components.Acceleration\r\n * @extends Phaser.Physics.Impact.Components.BodyScale\r\n * @extends Phaser.Physics.Impact.Components.BodyType\r\n * @extends Phaser.Physics.Impact.Components.Bounce\r\n * @extends Phaser.Physics.Impact.Components.CheckAgainst\r\n * @extends Phaser.Physics.Impact.Components.Collides\r\n * @extends Phaser.Physics.Impact.Components.Debug\r\n * @extends Phaser.Physics.Impact.Components.Friction\r\n * @extends Phaser.Physics.Impact.Components.Gravity\r\n * @extends Phaser.Physics.Impact.Components.Offset\r\n * @extends Phaser.Physics.Impact.Components.SetGameObject\r\n * @extends Phaser.Physics.Impact.Components.Velocity\r\n * @extends Phaser.GameObjects.Components.Alpha\r\n * @extends Phaser.GameObjects.Components.BlendMode\r\n * @extends Phaser.GameObjects.Components.Depth\r\n * @extends Phaser.GameObjects.Components.Flip\r\n * @extends Phaser.GameObjects.Components.GetBounds\r\n * @extends Phaser.GameObjects.Components.Origin\r\n * @extends Phaser.GameObjects.Components.Pipeline\r\n * @extends Phaser.GameObjects.Components.ScrollFactor\r\n * @extends Phaser.GameObjects.Components.Size\r\n * @extends Phaser.GameObjects.Components.Texture\r\n * @extends Phaser.GameObjects.Components.Tint\r\n * @extends Phaser.GameObjects.Components.Transform\r\n * @extends Phaser.GameObjects.Components.Visible\r\n *\r\n * @param {Phaser.Physics.Impact.World} world - The physics world of the Impact physics system.\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\r\nvar ImpactImage = new Class({\r\n\r\n    Extends: Image,\r\n\r\n    Mixins: [\r\n        Components.Acceleration,\r\n        Components.BodyScale,\r\n        Components.BodyType,\r\n        Components.Bounce,\r\n        Components.CheckAgainst,\r\n        Components.Collides,\r\n        Components.Debug,\r\n        Components.Friction,\r\n        Components.Gravity,\r\n        Components.Offset,\r\n        Components.SetGameObject,\r\n        Components.Velocity\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function ImpactImage (world, x, y, texture, frame)\r\n    {\r\n        Image.call(this, world.scene, x, y, texture, frame);\r\n\r\n        /**\r\n         * The Physics Body linked to an ImpactImage.\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#body\r\n         * @type {Phaser.Physics.Impact.Body}\r\n         * @since 3.0.0\r\n         */\r\n        this.body = world.create(x - this.frame.centerX, y - this.frame.centerY, this.width, this.height);\r\n\r\n        this.body.parent = this;\r\n        this.body.gameObject = this;\r\n\r\n        /**\r\n         * The size of the physics Body.\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#size\r\n         * @type {{x: number, y: number}}\r\n         * @since 3.0.0\r\n         */\r\n        this.size = this.body.size;\r\n\r\n        /**\r\n         * The X and Y offset of the Body from the left and top of the Image.\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#offset\r\n         * @type {{x: number, y: number}}\r\n         * @since 3.0.0\r\n         */\r\n        this.offset = this.body.offset;\r\n\r\n        /**\r\n         * The velocity, or rate of change the Body's position. Measured in pixels per second.\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#vel\r\n         * @type {{x: number, y: number}}\r\n         * @since 3.0.0\r\n         */\r\n        this.vel = this.body.vel;\r\n\r\n        /**\r\n         * The acceleration is the rate of change of the velocity. Measured in pixels per second squared.\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#accel\r\n         * @type {{x: number, y: number}}\r\n         * @since 3.0.0\r\n         */\r\n        this.accel = this.body.accel;\r\n\r\n        /**\r\n         * Friction between colliding bodies.\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#friction\r\n         * @type {{x: number, y: number}}\r\n         * @since 3.0.0\r\n         */\r\n        this.friction = this.body.friction;\r\n\r\n        /**\r\n         * The maximum velocity of the body.\r\n         *\r\n         * @name Phaser.Physics.Impact.ImpactImage#maxVel\r\n         * @type {{x: number, y: number}}\r\n         * @since 3.0.0\r\n         */\r\n        this.maxVel = this.body.maxVel;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = ImpactImage;\r\n"]},"metadata":{},"sourceType":"script"}