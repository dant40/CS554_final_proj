{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Triangle = require('./Triangle');\n/**\r\n * Builds an equilateral triangle. In the equilateral triangle, all the sides are the same length (congruent) and all the angles are the same size (congruent).\r\n * The x/y specifies the top-middle of the triangle (x1/y1) and length is the length of each side.\r\n *\r\n * @function Phaser.Geom.Triangle.BuildEquilateral\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - x coordinate of the top point of the triangle.\r\n * @param {number} y - y coordinate of the top point of the triangle.\r\n * @param {number} length - Length of each side of the triangle.\r\n *\r\n * @return {Phaser.Geom.Triangle} The Triangle object of the given size.\r\n */\n\n\nvar BuildEquilateral = function (x, y, length) {\n  var height = length * (Math.sqrt(3) / 2);\n  var x1 = x;\n  var y1 = y;\n  var x2 = x + length / 2;\n  var y2 = y + height;\n  var x3 = x - length / 2;\n  var y3 = y + height;\n  return new Triangle(x1, y1, x2, y2, x3, y3);\n};\n\nmodule.exports = BuildEquilateral;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/triangle/BuildEquilateral.js"],"names":["Triangle","require","BuildEquilateral","x","y","length","height","Math","sqrt","x1","y1","x2","y2","x3","y3","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;AAEA;;;;;;;;;;;;;;;AAaA,IAAIC,gBAAgB,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,MAAhB,EACvB;AACI,MAAIC,MAAM,GAAGD,MAAM,IAAIE,IAAI,CAACC,IAAL,CAAU,CAAV,IAAe,CAAnB,CAAnB;AAEA,MAAIC,EAAE,GAAGN,CAAT;AACA,MAAIO,EAAE,GAAGN,CAAT;AAEA,MAAIO,EAAE,GAAGR,CAAC,GAAIE,MAAM,GAAG,CAAvB;AACA,MAAIO,EAAE,GAAGR,CAAC,GAAGE,MAAb;AAEA,MAAIO,EAAE,GAAGV,CAAC,GAAIE,MAAM,GAAG,CAAvB;AACA,MAAIS,EAAE,GAAGV,CAAC,GAAGE,MAAb;AAEA,SAAO,IAAIN,QAAJ,CAAaS,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,CAAP;AACH,CAdD;;AAgBAC,MAAM,CAACC,OAAP,GAAiBd,gBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Triangle = require('./Triangle');\r\n\r\n/**\r\n * Builds an equilateral triangle. In the equilateral triangle, all the sides are the same length (congruent) and all the angles are the same size (congruent).\r\n * The x/y specifies the top-middle of the triangle (x1/y1) and length is the length of each side.\r\n *\r\n * @function Phaser.Geom.Triangle.BuildEquilateral\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - x coordinate of the top point of the triangle.\r\n * @param {number} y - y coordinate of the top point of the triangle.\r\n * @param {number} length - Length of each side of the triangle.\r\n *\r\n * @return {Phaser.Geom.Triangle} The Triangle object of the given size.\r\n */\r\nvar BuildEquilateral = function (x, y, length)\r\n{\r\n    var height = length * (Math.sqrt(3) / 2);\r\n\r\n    var x1 = x;\r\n    var y1 = y;\r\n\r\n    var x2 = x + (length / 2);\r\n    var y2 = y + height;\r\n\r\n    var x3 = x - (length / 2);\r\n    var y3 = y + height;\r\n\r\n    return new Triangle(x1, y1, x2, y2, x3, y3);\r\n};\r\n\r\nmodule.exports = BuildEquilateral;\r\n"]},"metadata":{},"sourceType":"script"}