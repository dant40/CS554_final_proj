{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Returns a Random element from the array.\r\n *\r\n * @function Phaser.Utils.Array.GetRandom\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to select the random entry from.\r\n * @param {integer} [startIndex=0] - An optional start index.\r\n * @param {integer} [length=array.length] - An optional length, the total number of elements (from the startIndex) to choose from.\r\n *\r\n * @return {*} A random element from the array, or `null` if no element could be found in the range given.\r\n */\nvar GetRandom = function (array, startIndex, length) {\n  if (startIndex === undefined) {\n    startIndex = 0;\n  }\n\n  if (length === undefined) {\n    length = array.length;\n  }\n\n  var randomIndex = startIndex + Math.floor(Math.random() * length);\n  return array[randomIndex] === undefined ? null : array[randomIndex];\n};\n\nmodule.exports = GetRandom;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/array/GetRandom.js"],"names":["GetRandom","array","startIndex","length","undefined","randomIndex","Math","floor","random","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;AAYA,IAAIA,SAAS,GAAG,UAAUC,KAAV,EAAiBC,UAAjB,EAA6BC,MAA7B,EAChB;AACI,MAAID,UAAU,KAAKE,SAAnB,EAA8B;AAAEF,IAAAA,UAAU,GAAG,CAAb;AAAiB;;AACjD,MAAIC,MAAM,KAAKC,SAAf,EAA0B;AAAED,IAAAA,MAAM,GAAGF,KAAK,CAACE,MAAf;AAAwB;;AAEpD,MAAIE,WAAW,GAAGH,UAAU,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,MAA3B,CAA/B;AAEA,SAAQF,KAAK,CAACI,WAAD,CAAL,KAAuBD,SAAxB,GAAqC,IAArC,GAA4CH,KAAK,CAACI,WAAD,CAAxD;AACH,CARD;;AAUAI,MAAM,CAACC,OAAP,GAAiBV,SAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Returns a Random element from the array.\r\n *\r\n * @function Phaser.Utils.Array.GetRandom\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to select the random entry from.\r\n * @param {integer} [startIndex=0] - An optional start index.\r\n * @param {integer} [length=array.length] - An optional length, the total number of elements (from the startIndex) to choose from.\r\n *\r\n * @return {*} A random element from the array, or `null` if no element could be found in the range given.\r\n */\r\nvar GetRandom = function (array, startIndex, length)\r\n{\r\n    if (startIndex === undefined) { startIndex = 0; }\r\n    if (length === undefined) { length = array.length; }\r\n\r\n    var randomIndex = startIndex + Math.floor(Math.random() * length);\r\n\r\n    return (array[randomIndex] === undefined) ? null : array[randomIndex];\r\n};\r\n\r\nmodule.exports = GetRandom;\r\n"]},"metadata":{},"sourceType":"script"}