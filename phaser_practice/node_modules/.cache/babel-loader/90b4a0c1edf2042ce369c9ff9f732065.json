{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n//  Adapted from [gl-matrix](https://github.com/toji/gl-matrix) by toji\n//  and [vecmath](https://github.com/mattdesl/vecmath) by mattdesl\nvar Class = require('../utils/Class');\n\nvar EPSILON = 0.000001;\n/**\r\n * @classdesc\r\n * A four-dimensional matrix.\r\n *\r\n * @class Matrix4\r\n * @memberof Phaser.Math\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Math.Matrix4} [m] - Optional Matrix4 to copy values from.\r\n */\n\nvar Matrix4 = new Class({\n  initialize: function Matrix4(m) {\n    /**\r\n     * The matrix values.\r\n     *\r\n     * @name Phaser.Math.Matrix4#val\r\n     * @type {Float32Array}\r\n     * @since 3.0.0\r\n     */\n    this.val = new Float32Array(16);\n\n    if (m) {\n      //  Assume Matrix4 with val:\n      this.copy(m);\n    } else {\n      //  Default to identity\n      this.identity();\n    }\n  },\n\n  /**\r\n   * Make a clone of this Matrix4.\r\n   *\r\n   * @method Phaser.Math.Matrix4#clone\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.Math.Matrix4} A clone of this Matrix4.\r\n   */\n  clone: function () {\n    return new Matrix4(this);\n  },\n  //  TODO - Should work with basic values\n\n  /**\r\n   * This method is an alias for `Matrix4.copy`.\r\n   *\r\n   * @method Phaser.Math.Matrix4#set\r\n   * @since 3.0.0\r\n   *\r\n   * @param {Phaser.Math.Matrix4} src - The Matrix to set the values of this Matrix's from.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  set: function (src) {\n    return this.copy(src);\n  },\n\n  /**\r\n   * Copy the values of a given Matrix into this Matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#copy\r\n   * @since 3.0.0\r\n   *\r\n   * @param {Phaser.Math.Matrix4} src - The Matrix to copy the values from.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  copy: function (src) {\n    var out = this.val;\n    var a = src.val;\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return this;\n  },\n\n  /**\r\n   * Set the values of this Matrix from the given array.\r\n   *\r\n   * @method Phaser.Math.Matrix4#fromArray\r\n   * @since 3.0.0\r\n   *\r\n   * @param {array} a - The array to copy the values from.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  fromArray: function (a) {\n    var out = this.val;\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return this;\n  },\n\n  /**\r\n   * Reset this Matrix.\r\n   *\r\n   * Sets all values to `0`.\r\n   *\r\n   * @method Phaser.Math.Matrix4#zero\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  zero: function () {\n    var out = this.val;\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 0;\n    return this;\n  },\n\n  /**\r\n   * Set the `x`, `y` and `z` values of this Matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#xyz\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The x value.\r\n   * @param {number} y - The y value.\r\n   * @param {number} z - The z value.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  xyz: function (x, y, z) {\n    this.identity();\n    var out = this.val;\n    out[12] = x;\n    out[13] = y;\n    out[14] = z;\n    return this;\n  },\n\n  /**\r\n   * Set the scaling values of this Matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#scaling\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The x scaling value.\r\n   * @param {number} y - The y scaling value.\r\n   * @param {number} z - The z scaling value.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  scaling: function (x, y, z) {\n    this.zero();\n    var out = this.val;\n    out[0] = x;\n    out[5] = y;\n    out[10] = z;\n    out[15] = 1;\n    return this;\n  },\n\n  /**\r\n   * Reset this Matrix to an identity (default) matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#identity\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  identity: function () {\n    var out = this.val;\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return this;\n  },\n\n  /**\r\n   * Transpose this Matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#transpose\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  transpose: function () {\n    var a = this.val;\n    var a01 = a[1];\n    var a02 = a[2];\n    var a03 = a[3];\n    var a12 = a[6];\n    var a13 = a[7];\n    var a23 = a[11];\n    a[1] = a[4];\n    a[2] = a[8];\n    a[3] = a[12];\n    a[4] = a01;\n    a[6] = a[9];\n    a[7] = a[13];\n    a[8] = a02;\n    a[9] = a12;\n    a[11] = a[14];\n    a[12] = a03;\n    a[13] = a13;\n    a[14] = a23;\n    return this;\n  },\n\n  /**\r\n   * Invert this Matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#invert\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  invert: function () {\n    var a = this.val;\n    var a00 = a[0];\n    var a01 = a[1];\n    var a02 = a[2];\n    var a03 = a[3];\n    var a10 = a[4];\n    var a11 = a[5];\n    var a12 = a[6];\n    var a13 = a[7];\n    var a20 = a[8];\n    var a21 = a[9];\n    var a22 = a[10];\n    var a23 = a[11];\n    var a30 = a[12];\n    var a31 = a[13];\n    var a32 = a[14];\n    var a33 = a[15];\n    var b00 = a00 * a11 - a01 * a10;\n    var b01 = a00 * a12 - a02 * a10;\n    var b02 = a00 * a13 - a03 * a10;\n    var b03 = a01 * a12 - a02 * a11;\n    var b04 = a01 * a13 - a03 * a11;\n    var b05 = a02 * a13 - a03 * a12;\n    var b06 = a20 * a31 - a21 * a30;\n    var b07 = a20 * a32 - a22 * a30;\n    var b08 = a20 * a33 - a23 * a30;\n    var b09 = a21 * a32 - a22 * a31;\n    var b10 = a21 * a33 - a23 * a31;\n    var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n    var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n      return null;\n    }\n\n    det = 1 / det;\n    a[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    a[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    a[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    a[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    a[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    a[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    a[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    a[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    a[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    a[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    a[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    a[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    a[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    a[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    a[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    a[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n    return this;\n  },\n\n  /**\r\n   * Calculate the adjoint, or adjugate, of this Matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#adjoint\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  adjoint: function () {\n    var a = this.val;\n    var a00 = a[0];\n    var a01 = a[1];\n    var a02 = a[2];\n    var a03 = a[3];\n    var a10 = a[4];\n    var a11 = a[5];\n    var a12 = a[6];\n    var a13 = a[7];\n    var a20 = a[8];\n    var a21 = a[9];\n    var a22 = a[10];\n    var a23 = a[11];\n    var a30 = a[12];\n    var a31 = a[13];\n    var a32 = a[14];\n    var a33 = a[15];\n    a[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n    a[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    a[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n    a[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    a[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    a[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n    a[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    a[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n    a[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n    a[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    a[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n    a[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    a[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    a[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n    a[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    a[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n    return this;\n  },\n\n  /**\r\n   * Calculate the determinant of this Matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#determinant\r\n   * @since 3.0.0\r\n   *\r\n   * @return {number} The determinant of this Matrix.\r\n   */\n  determinant: function () {\n    var a = this.val;\n    var a00 = a[0];\n    var a01 = a[1];\n    var a02 = a[2];\n    var a03 = a[3];\n    var a10 = a[4];\n    var a11 = a[5];\n    var a12 = a[6];\n    var a13 = a[7];\n    var a20 = a[8];\n    var a21 = a[9];\n    var a22 = a[10];\n    var a23 = a[11];\n    var a30 = a[12];\n    var a31 = a[13];\n    var a32 = a[14];\n    var a33 = a[15];\n    var b00 = a00 * a11 - a01 * a10;\n    var b01 = a00 * a12 - a02 * a10;\n    var b02 = a00 * a13 - a03 * a10;\n    var b03 = a01 * a12 - a02 * a11;\n    var b04 = a01 * a13 - a03 * a11;\n    var b05 = a02 * a13 - a03 * a12;\n    var b06 = a20 * a31 - a21 * a30;\n    var b07 = a20 * a32 - a22 * a30;\n    var b08 = a20 * a33 - a23 * a30;\n    var b09 = a21 * a32 - a22 * a31;\n    var b10 = a21 * a33 - a23 * a31;\n    var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  },\n\n  /**\r\n   * Multiply this Matrix by the given Matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#multiply\r\n   * @since 3.0.0\r\n   *\r\n   * @param {Phaser.Math.Matrix4} src - The Matrix to multiply this Matrix by.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  multiply: function (src) {\n    var a = this.val;\n    var a00 = a[0];\n    var a01 = a[1];\n    var a02 = a[2];\n    var a03 = a[3];\n    var a10 = a[4];\n    var a11 = a[5];\n    var a12 = a[6];\n    var a13 = a[7];\n    var a20 = a[8];\n    var a21 = a[9];\n    var a22 = a[10];\n    var a23 = a[11];\n    var a30 = a[12];\n    var a31 = a[13];\n    var a32 = a[14];\n    var a33 = a[15];\n    var b = src.val; // Cache only the current line of the second matrix\n\n    var b0 = b[0];\n    var b1 = b[1];\n    var b2 = b[2];\n    var b3 = b[3];\n    a[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    a[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    a[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    a[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    a[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    a[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    a[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    a[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    a[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    a[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    a[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    a[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    a[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    a[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    a[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    a[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return this;\n  },\n\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Math.Matrix4#multiplyLocal\r\n   * @since 3.0.0\r\n   *\r\n   * @param {Phaser.Math.Matrix4} src - [description]\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  multiplyLocal: function (src) {\n    var a = [];\n    var m1 = this.val;\n    var m2 = src.val;\n    a[0] = m1[0] * m2[0] + m1[1] * m2[4] + m1[2] * m2[8] + m1[3] * m2[12];\n    a[1] = m1[0] * m2[1] + m1[1] * m2[5] + m1[2] * m2[9] + m1[3] * m2[13];\n    a[2] = m1[0] * m2[2] + m1[1] * m2[6] + m1[2] * m2[10] + m1[3] * m2[14];\n    a[3] = m1[0] * m2[3] + m1[1] * m2[7] + m1[2] * m2[11] + m1[3] * m2[15];\n    a[4] = m1[4] * m2[0] + m1[5] * m2[4] + m1[6] * m2[8] + m1[7] * m2[12];\n    a[5] = m1[4] * m2[1] + m1[5] * m2[5] + m1[6] * m2[9] + m1[7] * m2[13];\n    a[6] = m1[4] * m2[2] + m1[5] * m2[6] + m1[6] * m2[10] + m1[7] * m2[14];\n    a[7] = m1[4] * m2[3] + m1[5] * m2[7] + m1[6] * m2[11] + m1[7] * m2[15];\n    a[8] = m1[8] * m2[0] + m1[9] * m2[4] + m1[10] * m2[8] + m1[11] * m2[12];\n    a[9] = m1[8] * m2[1] + m1[9] * m2[5] + m1[10] * m2[9] + m1[11] * m2[13];\n    a[10] = m1[8] * m2[2] + m1[9] * m2[6] + m1[10] * m2[10] + m1[11] * m2[14];\n    a[11] = m1[8] * m2[3] + m1[9] * m2[7] + m1[10] * m2[11] + m1[11] * m2[15];\n    a[12] = m1[12] * m2[0] + m1[13] * m2[4] + m1[14] * m2[8] + m1[15] * m2[12];\n    a[13] = m1[12] * m2[1] + m1[13] * m2[5] + m1[14] * m2[9] + m1[15] * m2[13];\n    a[14] = m1[12] * m2[2] + m1[13] * m2[6] + m1[14] * m2[10] + m1[15] * m2[14];\n    a[15] = m1[12] * m2[3] + m1[13] * m2[7] + m1[14] * m2[11] + m1[15] * m2[15];\n    return this.fromArray(a);\n  },\n\n  /**\r\n   * Translate this Matrix using the given Vector.\r\n   *\r\n   * @method Phaser.Math.Matrix4#translate\r\n   * @since 3.0.0\r\n   *\r\n   * @param {(Phaser.Math.Vector3|Phaser.Math.Vector4)} v - The Vector to translate this Matrix with.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  translate: function (v) {\n    var x = v.x;\n    var y = v.y;\n    var z = v.z;\n    var a = this.val;\n    a[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    a[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    a[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    a[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    return this;\n  },\n\n  /**\r\n   * Translate this Matrix using the given values.\r\n   *\r\n   * @method Phaser.Math.Matrix4#translateXYZ\r\n   * @since 3.16.0\r\n   *\r\n   * @param {number} x - The x component.\r\n   * @param {number} y - The y component.\r\n   * @param {number} z - The z component.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  translateXYZ: function (x, y, z) {\n    var a = this.val;\n    a[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    a[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    a[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    a[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    return this;\n  },\n\n  /**\r\n   * Apply a scale transformation to this Matrix.\r\n   *\r\n   * Uses the `x`, `y` and `z` components of the given Vector to scale the Matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#scale\r\n   * @since 3.0.0\r\n   *\r\n   * @param {(Phaser.Math.Vector3|Phaser.Math.Vector4)} v - The Vector to scale this Matrix with.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  scale: function (v) {\n    var x = v.x;\n    var y = v.y;\n    var z = v.z;\n    var a = this.val;\n    a[0] = a[0] * x;\n    a[1] = a[1] * x;\n    a[2] = a[2] * x;\n    a[3] = a[3] * x;\n    a[4] = a[4] * y;\n    a[5] = a[5] * y;\n    a[6] = a[6] * y;\n    a[7] = a[7] * y;\n    a[8] = a[8] * z;\n    a[9] = a[9] * z;\n    a[10] = a[10] * z;\n    a[11] = a[11] * z;\n    return this;\n  },\n\n  /**\r\n   * Apply a scale transformation to this Matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#scaleXYZ\r\n   * @since 3.16.0\r\n   *\r\n   * @param {number} x - The x component.\r\n   * @param {number} y - The y component.\r\n   * @param {number} z - The z component.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  scaleXYZ: function (x, y, z) {\n    var a = this.val;\n    a[0] = a[0] * x;\n    a[1] = a[1] * x;\n    a[2] = a[2] * x;\n    a[3] = a[3] * x;\n    a[4] = a[4] * y;\n    a[5] = a[5] * y;\n    a[6] = a[6] * y;\n    a[7] = a[7] * y;\n    a[8] = a[8] * z;\n    a[9] = a[9] * z;\n    a[10] = a[10] * z;\n    a[11] = a[11] * z;\n    return this;\n  },\n\n  /**\r\n   * Derive a rotation matrix around the given axis.\r\n   *\r\n   * @method Phaser.Math.Matrix4#makeRotationAxis\r\n   * @since 3.0.0\r\n   *\r\n   * @param {(Phaser.Math.Vector3|Phaser.Math.Vector4)} axis - The rotation axis.\r\n   * @param {number} angle - The rotation angle in radians.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  makeRotationAxis: function (axis, angle) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n    var c = Math.cos(angle);\n    var s = Math.sin(angle);\n    var t = 1 - c;\n    var x = axis.x;\n    var y = axis.y;\n    var z = axis.z;\n    var tx = t * x;\n    var ty = t * y;\n    this.fromArray([tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1]);\n    return this;\n  },\n\n  /**\r\n   * Apply a rotation transformation to this Matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#rotate\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} rad - The angle in radians to rotate by.\r\n   * @param {Phaser.Math.Vector3} axis - The axis to rotate upon.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  rotate: function (rad, axis) {\n    var a = this.val;\n    var x = axis.x;\n    var y = axis.y;\n    var z = axis.z;\n    var len = Math.sqrt(x * x + y * y + z * z);\n\n    if (Math.abs(len) < EPSILON) {\n      return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    var s = Math.sin(rad);\n    var c = Math.cos(rad);\n    var t = 1 - c;\n    var a00 = a[0];\n    var a01 = a[1];\n    var a02 = a[2];\n    var a03 = a[3];\n    var a10 = a[4];\n    var a11 = a[5];\n    var a12 = a[6];\n    var a13 = a[7];\n    var a20 = a[8];\n    var a21 = a[9];\n    var a22 = a[10];\n    var a23 = a[11]; // Construct the elements of the rotation matrix\n\n    var b00 = x * x * t + c;\n    var b01 = y * x * t + z * s;\n    var b02 = z * x * t - y * s;\n    var b10 = x * y * t - z * s;\n    var b11 = y * y * t + c;\n    var b12 = z * y * t + x * s;\n    var b20 = x * z * t + y * s;\n    var b21 = y * z * t - x * s;\n    var b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n    a[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    a[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    a[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    a[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    a[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    a[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    a[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    a[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    a[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    a[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    a[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    a[11] = a03 * b20 + a13 * b21 + a23 * b22;\n    return this;\n  },\n\n  /**\r\n   * Rotate this matrix on its X axis.\r\n   *\r\n   * @method Phaser.Math.Matrix4#rotateX\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} rad - The angle in radians to rotate by.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  rotateX: function (rad) {\n    var a = this.val;\n    var s = Math.sin(rad);\n    var c = Math.cos(rad);\n    var a10 = a[4];\n    var a11 = a[5];\n    var a12 = a[6];\n    var a13 = a[7];\n    var a20 = a[8];\n    var a21 = a[9];\n    var a22 = a[10];\n    var a23 = a[11]; // Perform axis-specific matrix multiplication\n\n    a[4] = a10 * c + a20 * s;\n    a[5] = a11 * c + a21 * s;\n    a[6] = a12 * c + a22 * s;\n    a[7] = a13 * c + a23 * s;\n    a[8] = a20 * c - a10 * s;\n    a[9] = a21 * c - a11 * s;\n    a[10] = a22 * c - a12 * s;\n    a[11] = a23 * c - a13 * s;\n    return this;\n  },\n\n  /**\r\n   * Rotate this matrix on its Y axis.\r\n   *\r\n   * @method Phaser.Math.Matrix4#rotateY\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} rad - The angle to rotate by, in radians.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  rotateY: function (rad) {\n    var a = this.val;\n    var s = Math.sin(rad);\n    var c = Math.cos(rad);\n    var a00 = a[0];\n    var a01 = a[1];\n    var a02 = a[2];\n    var a03 = a[3];\n    var a20 = a[8];\n    var a21 = a[9];\n    var a22 = a[10];\n    var a23 = a[11]; // Perform axis-specific matrix multiplication\n\n    a[0] = a00 * c - a20 * s;\n    a[1] = a01 * c - a21 * s;\n    a[2] = a02 * c - a22 * s;\n    a[3] = a03 * c - a23 * s;\n    a[8] = a00 * s + a20 * c;\n    a[9] = a01 * s + a21 * c;\n    a[10] = a02 * s + a22 * c;\n    a[11] = a03 * s + a23 * c;\n    return this;\n  },\n\n  /**\r\n   * Rotate this matrix on its Z axis.\r\n   *\r\n   * @method Phaser.Math.Matrix4#rotateZ\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} rad - The angle to rotate by, in radians.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  rotateZ: function (rad) {\n    var a = this.val;\n    var s = Math.sin(rad);\n    var c = Math.cos(rad);\n    var a00 = a[0];\n    var a01 = a[1];\n    var a02 = a[2];\n    var a03 = a[3];\n    var a10 = a[4];\n    var a11 = a[5];\n    var a12 = a[6];\n    var a13 = a[7]; // Perform axis-specific matrix multiplication\n\n    a[0] = a00 * c + a10 * s;\n    a[1] = a01 * c + a11 * s;\n    a[2] = a02 * c + a12 * s;\n    a[3] = a03 * c + a13 * s;\n    a[4] = a10 * c - a00 * s;\n    a[5] = a11 * c - a01 * s;\n    a[6] = a12 * c - a02 * s;\n    a[7] = a13 * c - a03 * s;\n    return this;\n  },\n\n  /**\r\n   * Set the values of this Matrix from the given rotation Quaternion and translation Vector.\r\n   *\r\n   * @method Phaser.Math.Matrix4#fromRotationTranslation\r\n   * @since 3.0.0\r\n   *\r\n   * @param {Phaser.Math.Quaternion} q - The Quaternion to set rotation from.\r\n   * @param {Phaser.Math.Vector3} v - The Vector to set translation from.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  fromRotationTranslation: function (q, v) {\n    // Quaternion math\n    var out = this.val;\n    var x = q.x;\n    var y = q.y;\n    var z = q.z;\n    var w = q.w;\n    var x2 = x + x;\n    var y2 = y + y;\n    var z2 = z + z;\n    var xx = x * x2;\n    var xy = x * y2;\n    var xz = x * z2;\n    var yy = y * y2;\n    var yz = y * z2;\n    var zz = z * z2;\n    var wx = w * x2;\n    var wy = w * y2;\n    var wz = w * z2;\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v.x;\n    out[13] = v.y;\n    out[14] = v.z;\n    out[15] = 1;\n    return this;\n  },\n\n  /**\r\n   * Set the values of this Matrix from the given Quaternion.\r\n   *\r\n   * @method Phaser.Math.Matrix4#fromQuat\r\n   * @since 3.0.0\r\n   *\r\n   * @param {Phaser.Math.Quaternion} q - The Quaternion to set the values of this Matrix from.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  fromQuat: function (q) {\n    var out = this.val;\n    var x = q.x;\n    var y = q.y;\n    var z = q.z;\n    var w = q.w;\n    var x2 = x + x;\n    var y2 = y + y;\n    var z2 = z + z;\n    var xx = x * x2;\n    var xy = x * y2;\n    var xz = x * z2;\n    var yy = y * y2;\n    var yz = y * z2;\n    var zz = z * z2;\n    var wx = w * x2;\n    var wy = w * y2;\n    var wz = w * z2;\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return this;\n  },\n\n  /**\r\n   * Generate a frustum matrix with the given bounds.\r\n   *\r\n   * @method Phaser.Math.Matrix4#frustum\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} left - The left bound of the frustum.\r\n   * @param {number} right - The right bound of the frustum.\r\n   * @param {number} bottom - The bottom bound of the frustum.\r\n   * @param {number} top - The top bound of the frustum.\r\n   * @param {number} near - The near bound of the frustum.\r\n   * @param {number} far - The far bound of the frustum.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  frustum: function (left, right, bottom, top, near, far) {\n    var out = this.val;\n    var rl = 1 / (right - left);\n    var tb = 1 / (top - bottom);\n    var nf = 1 / (near - far);\n    out[0] = near * 2 * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = near * 2 * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = far * near * 2 * nf;\n    out[15] = 0;\n    return this;\n  },\n\n  /**\r\n   * Generate a perspective projection matrix with the given bounds.\r\n   *\r\n   * @method Phaser.Math.Matrix4#perspective\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} fovy - Vertical field of view in radians\r\n   * @param {number} aspect - Aspect ratio. Typically viewport width  /height.\r\n   * @param {number} near - Near bound of the frustum.\r\n   * @param {number} far - Far bound of the frustum.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  perspective: function (fovy, aspect, near, far) {\n    var out = this.val;\n    var f = 1.0 / Math.tan(fovy / 2);\n    var nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return this;\n  },\n\n  /**\r\n   * Generate a perspective projection matrix with the given bounds.\r\n   *\r\n   * @method Phaser.Math.Matrix4#perspectiveLH\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} width - The width of the frustum.\r\n   * @param {number} height - The height of the frustum.\r\n   * @param {number} near - Near bound of the frustum.\r\n   * @param {number} far - Far bound of the frustum.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  perspectiveLH: function (width, height, near, far) {\n    var out = this.val;\n    out[0] = 2 * near / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 2 * near / height;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = -far / (near - far);\n    out[11] = 1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = near * far / (near - far);\n    out[15] = 0;\n    return this;\n  },\n\n  /**\r\n   * Generate an orthogonal projection matrix with the given bounds.\r\n   *\r\n   * @method Phaser.Math.Matrix4#ortho\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} left - The left bound of the frustum.\r\n   * @param {number} right - The right bound of the frustum.\r\n   * @param {number} bottom - The bottom bound of the frustum.\r\n   * @param {number} top - The top bound of the frustum.\r\n   * @param {number} near - The near bound of the frustum.\r\n   * @param {number} far - The far bound of the frustum.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  ortho: function (left, right, bottom, top, near, far) {\n    var out = this.val;\n    var lr = left - right;\n    var bt = bottom - top;\n    var nf = near - far; //  Avoid division by zero\n\n    lr = lr === 0 ? lr : 1 / lr;\n    bt = bt === 0 ? bt : 1 / bt;\n    nf = nf === 0 ? nf : 1 / nf;\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return this;\n  },\n\n  /**\r\n   * Generate a look-at matrix with the given eye position, focal point, and up axis.\r\n   *\r\n   * @method Phaser.Math.Matrix4#lookAt\r\n   * @since 3.0.0\r\n   *\r\n   * @param {Phaser.Math.Vector3} eye - Position of the viewer\r\n   * @param {Phaser.Math.Vector3} center - Point the viewer is looking at\r\n   * @param {Phaser.Math.Vector3} up - vec3 pointing up.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  lookAt: function (eye, center, up) {\n    var out = this.val;\n    var eyex = eye.x;\n    var eyey = eye.y;\n    var eyez = eye.z;\n    var upx = up.x;\n    var upy = up.y;\n    var upz = up.z;\n    var centerx = center.x;\n    var centery = center.y;\n    var centerz = center.z;\n\n    if (Math.abs(eyex - centerx) < EPSILON && Math.abs(eyey - centery) < EPSILON && Math.abs(eyez - centerz) < EPSILON) {\n      return this.identity();\n    }\n\n    var z0 = eyex - centerx;\n    var z1 = eyey - centery;\n    var z2 = eyez - centerz;\n    var len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n    var x0 = upy * z2 - upz * z1;\n    var x1 = upz * z0 - upx * z2;\n    var x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n    if (!len) {\n      x0 = 0;\n      x1 = 0;\n      x2 = 0;\n    } else {\n      len = 1 / len;\n      x0 *= len;\n      x1 *= len;\n      x2 *= len;\n    }\n\n    var y0 = z1 * x2 - z2 * x1;\n    var y1 = z2 * x0 - z0 * x2;\n    var y2 = z0 * x1 - z1 * x0;\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n    if (!len) {\n      y0 = 0;\n      y1 = 0;\n      y2 = 0;\n    } else {\n      len = 1 / len;\n      y0 *= len;\n      y1 *= len;\n      y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n    return this;\n  },\n\n  /**\r\n   * Set the values of this matrix from the given `yaw`, `pitch` and `roll` values.\r\n   *\r\n   * @method Phaser.Math.Matrix4#yawPitchRoll\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} yaw - [description]\r\n   * @param {number} pitch - [description]\r\n   * @param {number} roll - [description]\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  yawPitchRoll: function (yaw, pitch, roll) {\n    this.zero();\n\n    _tempMat1.zero();\n\n    _tempMat2.zero();\n\n    var m0 = this.val;\n    var m1 = _tempMat1.val;\n    var m2 = _tempMat2.val; //  Rotate Z\n\n    var s = Math.sin(roll);\n    var c = Math.cos(roll);\n    m0[10] = 1;\n    m0[15] = 1;\n    m0[0] = c;\n    m0[1] = s;\n    m0[4] = -s;\n    m0[5] = c; //  Rotate X\n\n    s = Math.sin(pitch);\n    c = Math.cos(pitch);\n    m1[0] = 1;\n    m1[15] = 1;\n    m1[5] = c;\n    m1[10] = c;\n    m1[9] = -s;\n    m1[6] = s; //  Rotate Y\n\n    s = Math.sin(yaw);\n    c = Math.cos(yaw);\n    m2[5] = 1;\n    m2[15] = 1;\n    m2[0] = c;\n    m2[2] = -s;\n    m2[8] = s;\n    m2[10] = c;\n    this.multiplyLocal(_tempMat1);\n    this.multiplyLocal(_tempMat2);\n    return this;\n  },\n\n  /**\r\n   * Generate a world matrix from the given rotation, position, scale, view matrix and projection matrix.\r\n   *\r\n   * @method Phaser.Math.Matrix4#setWorldMatrix\r\n   * @since 3.0.0\r\n   *\r\n   * @param {Phaser.Math.Vector3} rotation - The rotation of the world matrix.\r\n   * @param {Phaser.Math.Vector3} position - The position of the world matrix.\r\n   * @param {Phaser.Math.Vector3} scale - The scale of the world matrix.\r\n   * @param {Phaser.Math.Matrix4} [viewMatrix] - The view matrix.\r\n   * @param {Phaser.Math.Matrix4} [projectionMatrix] - The projection matrix.\r\n   *\r\n   * @return {Phaser.Math.Matrix4} This Matrix4.\r\n   */\n  setWorldMatrix: function (rotation, position, scale, viewMatrix, projectionMatrix) {\n    this.yawPitchRoll(rotation.y, rotation.x, rotation.z);\n\n    _tempMat1.scaling(scale.x, scale.y, scale.z);\n\n    _tempMat2.xyz(position.x, position.y, position.z);\n\n    this.multiplyLocal(_tempMat1);\n    this.multiplyLocal(_tempMat2);\n\n    if (viewMatrix !== undefined) {\n      this.multiplyLocal(viewMatrix);\n    }\n\n    if (projectionMatrix !== undefined) {\n      this.multiplyLocal(projectionMatrix);\n    }\n\n    return this;\n  }\n});\n\nvar _tempMat1 = new Matrix4();\n\nvar _tempMat2 = new Matrix4();\n\nmodule.exports = Matrix4;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/math/Matrix4.js"],"names":["Class","require","EPSILON","Matrix4","initialize","m","val","Float32Array","copy","identity","clone","set","src","out","a","fromArray","zero","xyz","x","y","z","scaling","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","multiply","b","b0","b1","b2","b3","multiplyLocal","m1","m2","translate","v","translateXYZ","scale","scaleXYZ","makeRotationAxis","axis","angle","c","Math","cos","s","sin","t","tx","ty","rotate","rad","len","sqrt","abs","b12","b20","b21","b22","rotateX","rotateY","rotateZ","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","perspectiveLH","width","height","ortho","lr","bt","lookAt","eye","center","up","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","z0","z1","x0","x1","y0","y1","yawPitchRoll","yaw","pitch","roll","_tempMat1","_tempMat2","m0","setWorldMatrix","rotation","position","viewMatrix","projectionMatrix","undefined","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  Adapted from [gl-matrix](https://github.com/toji/gl-matrix) by toji\r\n//  and [vecmath](https://github.com/mattdesl/vecmath) by mattdesl\r\n\r\nvar Class = require('../utils/Class');\r\n\r\nvar EPSILON = 0.000001;\r\n\r\n/**\r\n * @classdesc\r\n * A four-dimensional matrix.\r\n *\r\n * @class Matrix4\r\n * @memberof Phaser.Math\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Math.Matrix4} [m] - Optional Matrix4 to copy values from.\r\n */\r\nvar Matrix4 = new Class({\r\n\r\n    initialize:\r\n\r\n    function Matrix4 (m)\r\n    {\r\n        /**\r\n         * The matrix values.\r\n         *\r\n         * @name Phaser.Math.Matrix4#val\r\n         * @type {Float32Array}\r\n         * @since 3.0.0\r\n         */\r\n        this.val = new Float32Array(16);\r\n\r\n        if (m)\r\n        {\r\n            //  Assume Matrix4 with val:\r\n            this.copy(m);\r\n        }\r\n        else\r\n        {\r\n            //  Default to identity\r\n            this.identity();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Make a clone of this Matrix4.\r\n     *\r\n     * @method Phaser.Math.Matrix4#clone\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Matrix4} A clone of this Matrix4.\r\n     */\r\n    clone: function ()\r\n    {\r\n        return new Matrix4(this);\r\n    },\r\n\r\n    //  TODO - Should work with basic values\r\n\r\n    /**\r\n     * This method is an alias for `Matrix4.copy`.\r\n     *\r\n     * @method Phaser.Math.Matrix4#set\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Matrix4} src - The Matrix to set the values of this Matrix's from.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    set: function (src)\r\n    {\r\n        return this.copy(src);\r\n    },\r\n\r\n    /**\r\n     * Copy the values of a given Matrix into this Matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#copy\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Matrix4} src - The Matrix to copy the values from.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    copy: function (src)\r\n    {\r\n        var out = this.val;\r\n        var a = src.val;\r\n\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[3];\r\n        out[4] = a[4];\r\n        out[5] = a[5];\r\n        out[6] = a[6];\r\n        out[7] = a[7];\r\n        out[8] = a[8];\r\n        out[9] = a[9];\r\n        out[10] = a[10];\r\n        out[11] = a[11];\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the values of this Matrix from the given array.\r\n     *\r\n     * @method Phaser.Math.Matrix4#fromArray\r\n     * @since 3.0.0\r\n     *\r\n     * @param {array} a - The array to copy the values from.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    fromArray: function (a)\r\n    {\r\n        var out = this.val;\r\n\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[3];\r\n        out[4] = a[4];\r\n        out[5] = a[5];\r\n        out[6] = a[6];\r\n        out[7] = a[7];\r\n        out[8] = a[8];\r\n        out[9] = a[9];\r\n        out[10] = a[10];\r\n        out[11] = a[11];\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Reset this Matrix.\r\n     *\r\n     * Sets all values to `0`.\r\n     *\r\n     * @method Phaser.Math.Matrix4#zero\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    zero: function ()\r\n    {\r\n        var out = this.val;\r\n\r\n        out[0] = 0;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = 0;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 0;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the `x`, `y` and `z` values of this Matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#xyz\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The x value.\r\n     * @param {number} y - The y value.\r\n     * @param {number} z - The z value.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    xyz: function (x, y, z)\r\n    {\r\n        this.identity();\r\n\r\n        var out = this.val;\r\n\r\n        out[12] = x;\r\n        out[13] = y;\r\n        out[14] = z;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the scaling values of this Matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#scaling\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The x scaling value.\r\n     * @param {number} y - The y scaling value.\r\n     * @param {number} z - The z scaling value.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    scaling: function (x, y, z)\r\n    {\r\n        this.zero();\r\n\r\n        var out = this.val;\r\n\r\n        out[0] = x;\r\n        out[5] = y;\r\n        out[10] = z;\r\n        out[15] = 1;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Reset this Matrix to an identity (default) matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#identity\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    identity: function ()\r\n    {\r\n        var out = this.val;\r\n\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = 1;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 1;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Transpose this Matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#transpose\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    transpose: function ()\r\n    {\r\n        var a = this.val;\r\n\r\n        var a01 = a[1];\r\n        var a02 = a[2];\r\n        var a03 = a[3];\r\n        var a12 = a[6];\r\n        var a13 = a[7];\r\n        var a23 = a[11];\r\n\r\n        a[1] = a[4];\r\n        a[2] = a[8];\r\n        a[3] = a[12];\r\n        a[4] = a01;\r\n        a[6] = a[9];\r\n        a[7] = a[13];\r\n        a[8] = a02;\r\n        a[9] = a12;\r\n        a[11] = a[14];\r\n        a[12] = a03;\r\n        a[13] = a13;\r\n        a[14] = a23;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Invert this Matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#invert\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    invert: function ()\r\n    {\r\n        var a = this.val;\r\n\r\n        var a00 = a[0];\r\n        var a01 = a[1];\r\n        var a02 = a[2];\r\n        var a03 = a[3];\r\n\r\n        var a10 = a[4];\r\n        var a11 = a[5];\r\n        var a12 = a[6];\r\n        var a13 = a[7];\r\n\r\n        var a20 = a[8];\r\n        var a21 = a[9];\r\n        var a22 = a[10];\r\n        var a23 = a[11];\r\n\r\n        var a30 = a[12];\r\n        var a31 = a[13];\r\n        var a32 = a[14];\r\n        var a33 = a[15];\r\n\r\n        var b00 = a00 * a11 - a01 * a10;\r\n        var b01 = a00 * a12 - a02 * a10;\r\n        var b02 = a00 * a13 - a03 * a10;\r\n        var b03 = a01 * a12 - a02 * a11;\r\n\r\n        var b04 = a01 * a13 - a03 * a11;\r\n        var b05 = a02 * a13 - a03 * a12;\r\n        var b06 = a20 * a31 - a21 * a30;\r\n        var b07 = a20 * a32 - a22 * a30;\r\n\r\n        var b08 = a20 * a33 - a23 * a30;\r\n        var b09 = a21 * a32 - a22 * a31;\r\n        var b10 = a21 * a33 - a23 * a31;\r\n        var b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        det = 1 / det;\r\n\r\n        a[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        a[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        a[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        a[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        a[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        a[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        a[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        a[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        a[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        a[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        a[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        a[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        a[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        a[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        a[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        a[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Calculate the adjoint, or adjugate, of this Matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#adjoint\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    adjoint: function ()\r\n    {\r\n        var a = this.val;\r\n\r\n        var a00 = a[0];\r\n        var a01 = a[1];\r\n        var a02 = a[2];\r\n        var a03 = a[3];\r\n\r\n        var a10 = a[4];\r\n        var a11 = a[5];\r\n        var a12 = a[6];\r\n        var a13 = a[7];\r\n\r\n        var a20 = a[8];\r\n        var a21 = a[9];\r\n        var a22 = a[10];\r\n        var a23 = a[11];\r\n\r\n        var a30 = a[12];\r\n        var a31 = a[13];\r\n        var a32 = a[14];\r\n        var a33 = a[15];\r\n\r\n        a[0] = (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\r\n        a[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n        a[2] = (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\r\n        a[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n        a[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n        a[5] = (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\r\n        a[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n        a[7] = (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\r\n        a[8] = (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\r\n        a[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n        a[10] = (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\r\n        a[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n        a[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n        a[13] = (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\r\n        a[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n        a[15] = (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Calculate the determinant of this Matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#determinant\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The determinant of this Matrix.\r\n     */\r\n    determinant: function ()\r\n    {\r\n        var a = this.val;\r\n\r\n        var a00 = a[0];\r\n        var a01 = a[1];\r\n        var a02 = a[2];\r\n        var a03 = a[3];\r\n\r\n        var a10 = a[4];\r\n        var a11 = a[5];\r\n        var a12 = a[6];\r\n        var a13 = a[7];\r\n\r\n        var a20 = a[8];\r\n        var a21 = a[9];\r\n        var a22 = a[10];\r\n        var a23 = a[11];\r\n\r\n        var a30 = a[12];\r\n        var a31 = a[13];\r\n        var a32 = a[14];\r\n        var a33 = a[15];\r\n\r\n        var b00 = a00 * a11 - a01 * a10;\r\n        var b01 = a00 * a12 - a02 * a10;\r\n        var b02 = a00 * a13 - a03 * a10;\r\n        var b03 = a01 * a12 - a02 * a11;\r\n        var b04 = a01 * a13 - a03 * a11;\r\n        var b05 = a02 * a13 - a03 * a12;\r\n        var b06 = a20 * a31 - a21 * a30;\r\n        var b07 = a20 * a32 - a22 * a30;\r\n        var b08 = a20 * a33 - a23 * a30;\r\n        var b09 = a21 * a32 - a22 * a31;\r\n        var b10 = a21 * a33 - a23 * a31;\r\n        var b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n    },\r\n\r\n    /**\r\n     * Multiply this Matrix by the given Matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#multiply\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Matrix4} src - The Matrix to multiply this Matrix by.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    multiply: function (src)\r\n    {\r\n        var a = this.val;\r\n\r\n        var a00 = a[0];\r\n        var a01 = a[1];\r\n        var a02 = a[2];\r\n        var a03 = a[3];\r\n\r\n        var a10 = a[4];\r\n        var a11 = a[5];\r\n        var a12 = a[6];\r\n        var a13 = a[7];\r\n\r\n        var a20 = a[8];\r\n        var a21 = a[9];\r\n        var a22 = a[10];\r\n        var a23 = a[11];\r\n\r\n        var a30 = a[12];\r\n        var a31 = a[13];\r\n        var a32 = a[14];\r\n        var a33 = a[15];\r\n\r\n        var b = src.val;\r\n\r\n        // Cache only the current line of the second matrix\r\n        var b0 = b[0];\r\n        var b1 = b[1];\r\n        var b2 = b[2];\r\n        var b3 = b[3];\r\n\r\n        a[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        a[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        a[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        a[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[4];\r\n        b1 = b[5];\r\n        b2 = b[6];\r\n        b3 = b[7];\r\n\r\n        a[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        a[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        a[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        a[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[8];\r\n        b1 = b[9];\r\n        b2 = b[10];\r\n        b3 = b[11];\r\n\r\n        a[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        a[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        a[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        a[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[12];\r\n        b1 = b[13];\r\n        b2 = b[14];\r\n        b3 = b[15];\r\n\r\n        a[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        a[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        a[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        a[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Math.Matrix4#multiplyLocal\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Matrix4} src - [description]\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    multiplyLocal: function (src)\r\n    {\r\n        var a = [];\r\n        var m1 = this.val;\r\n        var m2 = src.val;\r\n\r\n        a[0] = m1[0] * m2[0] + m1[1] * m2[4] + m1[2] * m2[8] + m1[3] * m2[12];\r\n        a[1] = m1[0] * m2[1] + m1[1] * m2[5] + m1[2] * m2[9] + m1[3] * m2[13];\r\n        a[2] = m1[0] * m2[2] + m1[1] * m2[6] + m1[2] * m2[10] + m1[3] * m2[14];\r\n        a[3] = m1[0] * m2[3] + m1[1] * m2[7] + m1[2] * m2[11] + m1[3] * m2[15];\r\n\r\n        a[4] = m1[4] * m2[0] + m1[5] * m2[4] + m1[6] * m2[8] + m1[7] * m2[12];\r\n        a[5] = m1[4] * m2[1] + m1[5] * m2[5] + m1[6] * m2[9] + m1[7] * m2[13];\r\n        a[6] = m1[4] * m2[2] + m1[5] * m2[6] + m1[6] * m2[10] + m1[7] * m2[14];\r\n        a[7] = m1[4] * m2[3] + m1[5] * m2[7] + m1[6] * m2[11] + m1[7] * m2[15];\r\n\r\n        a[8] = m1[8] * m2[0] + m1[9] * m2[4] + m1[10] * m2[8] + m1[11] * m2[12];\r\n        a[9] = m1[8] * m2[1] + m1[9] * m2[5] + m1[10] * m2[9] + m1[11] * m2[13];\r\n        a[10] = m1[8] * m2[2] + m1[9] * m2[6] + m1[10] * m2[10] + m1[11] * m2[14];\r\n        a[11] = m1[8] * m2[3] + m1[9] * m2[7] + m1[10] * m2[11] + m1[11] * m2[15];\r\n\r\n        a[12] = m1[12] * m2[0] + m1[13] * m2[4] + m1[14] * m2[8] + m1[15] * m2[12];\r\n        a[13] = m1[12] * m2[1] + m1[13] * m2[5] + m1[14] * m2[9] + m1[15] * m2[13];\r\n        a[14] = m1[12] * m2[2] + m1[13] * m2[6] + m1[14] * m2[10] + m1[15] * m2[14];\r\n        a[15] = m1[12] * m2[3] + m1[13] * m2[7] + m1[14] * m2[11] + m1[15] * m2[15];\r\n\r\n        return this.fromArray(a);\r\n    },\r\n\r\n    /**\r\n     * Translate this Matrix using the given Vector.\r\n     *\r\n     * @method Phaser.Math.Matrix4#translate\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Math.Vector3|Phaser.Math.Vector4)} v - The Vector to translate this Matrix with.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    translate: function (v)\r\n    {\r\n        var x = v.x;\r\n        var y = v.y;\r\n        var z = v.z;\r\n        var a = this.val;\r\n\r\n        a[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n        a[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n        a[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n        a[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Translate this Matrix using the given values.\r\n     *\r\n     * @method Phaser.Math.Matrix4#translateXYZ\r\n     * @since 3.16.0\r\n     *\r\n     * @param {number} x - The x component.\r\n     * @param {number} y - The y component.\r\n     * @param {number} z - The z component.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    translateXYZ: function (x, y, z)\r\n    {\r\n        var a = this.val;\r\n\r\n        a[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n        a[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n        a[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n        a[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Apply a scale transformation to this Matrix.\r\n     *\r\n     * Uses the `x`, `y` and `z` components of the given Vector to scale the Matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#scale\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Math.Vector3|Phaser.Math.Vector4)} v - The Vector to scale this Matrix with.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    scale: function (v)\r\n    {\r\n        var x = v.x;\r\n        var y = v.y;\r\n        var z = v.z;\r\n        var a = this.val;\r\n\r\n        a[0] = a[0] * x;\r\n        a[1] = a[1] * x;\r\n        a[2] = a[2] * x;\r\n        a[3] = a[3] * x;\r\n\r\n        a[4] = a[4] * y;\r\n        a[5] = a[5] * y;\r\n        a[6] = a[6] * y;\r\n        a[7] = a[7] * y;\r\n\r\n        a[8] = a[8] * z;\r\n        a[9] = a[9] * z;\r\n        a[10] = a[10] * z;\r\n        a[11] = a[11] * z;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Apply a scale transformation to this Matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#scaleXYZ\r\n     * @since 3.16.0\r\n     *\r\n     * @param {number} x - The x component.\r\n     * @param {number} y - The y component.\r\n     * @param {number} z - The z component.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    scaleXYZ: function (x, y, z)\r\n    {\r\n        var a = this.val;\r\n\r\n        a[0] = a[0] * x;\r\n        a[1] = a[1] * x;\r\n        a[2] = a[2] * x;\r\n        a[3] = a[3] * x;\r\n\r\n        a[4] = a[4] * y;\r\n        a[5] = a[5] * y;\r\n        a[6] = a[6] * y;\r\n        a[7] = a[7] * y;\r\n\r\n        a[8] = a[8] * z;\r\n        a[9] = a[9] * z;\r\n        a[10] = a[10] * z;\r\n        a[11] = a[11] * z;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Derive a rotation matrix around the given axis.\r\n     *\r\n     * @method Phaser.Math.Matrix4#makeRotationAxis\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Math.Vector3|Phaser.Math.Vector4)} axis - The rotation axis.\r\n     * @param {number} angle - The rotation angle in radians.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    makeRotationAxis: function (axis, angle)\r\n    {\r\n        // Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n        var c = Math.cos(angle);\r\n        var s = Math.sin(angle);\r\n        var t = 1 - c;\r\n        var x = axis.x;\r\n        var y = axis.y;\r\n        var z = axis.z;\r\n        var tx = t * x;\r\n        var ty = t * y;\r\n\r\n        this.fromArray([\r\n            tx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n            tx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n            tx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n            0, 0, 0, 1\r\n        ]);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Apply a rotation transformation to this Matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#rotate\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} rad - The angle in radians to rotate by.\r\n     * @param {Phaser.Math.Vector3} axis - The axis to rotate upon.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    rotate: function (rad, axis)\r\n    {\r\n        var a = this.val;\r\n        var x = axis.x;\r\n        var y = axis.y;\r\n        var z = axis.z;\r\n        var len = Math.sqrt(x * x + y * y + z * z);\r\n\r\n        if (Math.abs(len) < EPSILON)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        var s = Math.sin(rad);\r\n        var c = Math.cos(rad);\r\n        var t = 1 - c;\r\n\r\n        var a00 = a[0];\r\n        var a01 = a[1];\r\n        var a02 = a[2];\r\n        var a03 = a[3];\r\n\r\n        var a10 = a[4];\r\n        var a11 = a[5];\r\n        var a12 = a[6];\r\n        var a13 = a[7];\r\n\r\n        var a20 = a[8];\r\n        var a21 = a[9];\r\n        var a22 = a[10];\r\n        var a23 = a[11];\r\n\r\n        // Construct the elements of the rotation matrix\r\n        var b00 = x * x * t + c;\r\n        var b01 = y * x * t + z * s;\r\n        var b02 = z * x * t - y * s;\r\n\r\n        var b10 = x * y * t - z * s;\r\n        var b11 = y * y * t + c;\r\n        var b12 = z * y * t + x * s;\r\n\r\n        var b20 = x * z * t + y * s;\r\n        var b21 = y * z * t - x * s;\r\n        var b22 = z * z * t + c;\r\n\r\n        // Perform rotation-specific matrix multiplication\r\n        a[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        a[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        a[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        a[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        a[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        a[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        a[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        a[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        a[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        a[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        a[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        a[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Rotate this matrix on its X axis.\r\n     *\r\n     * @method Phaser.Math.Matrix4#rotateX\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} rad - The angle in radians to rotate by.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    rotateX: function (rad)\r\n    {\r\n        var a = this.val;\r\n        var s = Math.sin(rad);\r\n        var c = Math.cos(rad);\r\n\r\n        var a10 = a[4];\r\n        var a11 = a[5];\r\n        var a12 = a[6];\r\n        var a13 = a[7];\r\n\r\n        var a20 = a[8];\r\n        var a21 = a[9];\r\n        var a22 = a[10];\r\n        var a23 = a[11];\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        a[4] = a10 * c + a20 * s;\r\n        a[5] = a11 * c + a21 * s;\r\n        a[6] = a12 * c + a22 * s;\r\n        a[7] = a13 * c + a23 * s;\r\n        a[8] = a20 * c - a10 * s;\r\n        a[9] = a21 * c - a11 * s;\r\n        a[10] = a22 * c - a12 * s;\r\n        a[11] = a23 * c - a13 * s;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Rotate this matrix on its Y axis.\r\n     *\r\n     * @method Phaser.Math.Matrix4#rotateY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} rad - The angle to rotate by, in radians.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    rotateY: function (rad)\r\n    {\r\n        var a = this.val;\r\n        var s = Math.sin(rad);\r\n        var c = Math.cos(rad);\r\n\r\n        var a00 = a[0];\r\n        var a01 = a[1];\r\n        var a02 = a[2];\r\n        var a03 = a[3];\r\n\r\n        var a20 = a[8];\r\n        var a21 = a[9];\r\n        var a22 = a[10];\r\n        var a23 = a[11];\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        a[0] = a00 * c - a20 * s;\r\n        a[1] = a01 * c - a21 * s;\r\n        a[2] = a02 * c - a22 * s;\r\n        a[3] = a03 * c - a23 * s;\r\n        a[8] = a00 * s + a20 * c;\r\n        a[9] = a01 * s + a21 * c;\r\n        a[10] = a02 * s + a22 * c;\r\n        a[11] = a03 * s + a23 * c;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Rotate this matrix on its Z axis.\r\n     *\r\n     * @method Phaser.Math.Matrix4#rotateZ\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} rad - The angle to rotate by, in radians.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    rotateZ: function (rad)\r\n    {\r\n        var a = this.val;\r\n        var s = Math.sin(rad);\r\n        var c = Math.cos(rad);\r\n\r\n        var a00 = a[0];\r\n        var a01 = a[1];\r\n        var a02 = a[2];\r\n        var a03 = a[3];\r\n\r\n        var a10 = a[4];\r\n        var a11 = a[5];\r\n        var a12 = a[6];\r\n        var a13 = a[7];\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        a[0] = a00 * c + a10 * s;\r\n        a[1] = a01 * c + a11 * s;\r\n        a[2] = a02 * c + a12 * s;\r\n        a[3] = a03 * c + a13 * s;\r\n        a[4] = a10 * c - a00 * s;\r\n        a[5] = a11 * c - a01 * s;\r\n        a[6] = a12 * c - a02 * s;\r\n        a[7] = a13 * c - a03 * s;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the values of this Matrix from the given rotation Quaternion and translation Vector.\r\n     *\r\n     * @method Phaser.Math.Matrix4#fromRotationTranslation\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Quaternion} q - The Quaternion to set rotation from.\r\n     * @param {Phaser.Math.Vector3} v - The Vector to set translation from.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    fromRotationTranslation: function (q, v)\r\n    {\r\n        // Quaternion math\r\n        var out = this.val;\r\n\r\n        var x = q.x;\r\n        var y = q.y;\r\n        var z = q.z;\r\n        var w = q.w;\r\n\r\n        var x2 = x + x;\r\n        var y2 = y + y;\r\n        var z2 = z + z;\r\n\r\n        var xx = x * x2;\r\n        var xy = x * y2;\r\n        var xz = x * z2;\r\n\r\n        var yy = y * y2;\r\n        var yz = y * z2;\r\n        var zz = z * z2;\r\n\r\n        var wx = w * x2;\r\n        var wy = w * y2;\r\n        var wz = w * z2;\r\n\r\n        out[0] = 1 - (yy + zz);\r\n        out[1] = xy + wz;\r\n        out[2] = xz - wy;\r\n        out[3] = 0;\r\n\r\n        out[4] = xy - wz;\r\n        out[5] = 1 - (xx + zz);\r\n        out[6] = yz + wx;\r\n        out[7] = 0;\r\n\r\n        out[8] = xz + wy;\r\n        out[9] = yz - wx;\r\n        out[10] = 1 - (xx + yy);\r\n        out[11] = 0;\r\n\r\n        out[12] = v.x;\r\n        out[13] = v.y;\r\n        out[14] = v.z;\r\n        out[15] = 1;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the values of this Matrix from the given Quaternion.\r\n     *\r\n     * @method Phaser.Math.Matrix4#fromQuat\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Quaternion} q - The Quaternion to set the values of this Matrix from.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    fromQuat: function (q)\r\n    {\r\n        var out = this.val;\r\n\r\n        var x = q.x;\r\n        var y = q.y;\r\n        var z = q.z;\r\n        var w = q.w;\r\n\r\n        var x2 = x + x;\r\n        var y2 = y + y;\r\n        var z2 = z + z;\r\n\r\n        var xx = x * x2;\r\n        var xy = x * y2;\r\n        var xz = x * z2;\r\n\r\n        var yy = y * y2;\r\n        var yz = y * z2;\r\n        var zz = z * z2;\r\n\r\n        var wx = w * x2;\r\n        var wy = w * y2;\r\n        var wz = w * z2;\r\n\r\n        out[0] = 1 - (yy + zz);\r\n        out[1] = xy + wz;\r\n        out[2] = xz - wy;\r\n        out[3] = 0;\r\n\r\n        out[4] = xy - wz;\r\n        out[5] = 1 - (xx + zz);\r\n        out[6] = yz + wx;\r\n        out[7] = 0;\r\n\r\n        out[8] = xz + wy;\r\n        out[9] = yz - wx;\r\n        out[10] = 1 - (xx + yy);\r\n        out[11] = 0;\r\n\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Generate a frustum matrix with the given bounds.\r\n     *\r\n     * @method Phaser.Math.Matrix4#frustum\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} left - The left bound of the frustum.\r\n     * @param {number} right - The right bound of the frustum.\r\n     * @param {number} bottom - The bottom bound of the frustum.\r\n     * @param {number} top - The top bound of the frustum.\r\n     * @param {number} near - The near bound of the frustum.\r\n     * @param {number} far - The far bound of the frustum.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    frustum: function (left, right, bottom, top, near, far)\r\n    {\r\n        var out = this.val;\r\n\r\n        var rl = 1 / (right - left);\r\n        var tb = 1 / (top - bottom);\r\n        var nf = 1 / (near - far);\r\n\r\n        out[0] = (near * 2) * rl;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n\r\n        out[4] = 0;\r\n        out[5] = (near * 2) * tb;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n\r\n        out[8] = (right + left) * rl;\r\n        out[9] = (top + bottom) * tb;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = (far * near * 2) * nf;\r\n        out[15] = 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Generate a perspective projection matrix with the given bounds.\r\n     *\r\n     * @method Phaser.Math.Matrix4#perspective\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} fovy - Vertical field of view in radians\r\n     * @param {number} aspect - Aspect ratio. Typically viewport width  /height.\r\n     * @param {number} near - Near bound of the frustum.\r\n     * @param {number} far - Far bound of the frustum.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    perspective: function (fovy, aspect, near, far)\r\n    {\r\n        var out = this.val;\r\n        var f = 1.0 / Math.tan(fovy / 2);\r\n        var nf = 1 / (near - far);\r\n\r\n        out[0] = f / aspect;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n\r\n        out[4] = 0;\r\n        out[5] = f;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = (2 * far * near) * nf;\r\n        out[15] = 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Generate a perspective projection matrix with the given bounds.\r\n     *\r\n     * @method Phaser.Math.Matrix4#perspectiveLH\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} width - The width of the frustum.\r\n     * @param {number} height - The height of the frustum.\r\n     * @param {number} near - Near bound of the frustum.\r\n     * @param {number} far - Far bound of the frustum.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    perspectiveLH: function (width, height, near, far)\r\n    {\r\n        var out = this.val;\r\n\r\n        out[0] = (2 * near) / width;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n\r\n        out[4] = 0;\r\n        out[5] = (2 * near) / height;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = -far / (near - far);\r\n        out[11] = 1;\r\n\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = (near * far) / (near - far);\r\n        out[15] = 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Generate an orthogonal projection matrix with the given bounds.\r\n     *\r\n     * @method Phaser.Math.Matrix4#ortho\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} left - The left bound of the frustum.\r\n     * @param {number} right - The right bound of the frustum.\r\n     * @param {number} bottom - The bottom bound of the frustum.\r\n     * @param {number} top - The top bound of the frustum.\r\n     * @param {number} near - The near bound of the frustum.\r\n     * @param {number} far - The far bound of the frustum.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    ortho: function (left, right, bottom, top, near, far)\r\n    {\r\n        var out = this.val;\r\n        var lr = left - right;\r\n        var bt = bottom - top;\r\n        var nf = near - far;\r\n\r\n        //  Avoid division by zero\r\n        lr = (lr === 0) ? lr : 1 / lr;\r\n        bt = (bt === 0) ? bt : 1 / bt;\r\n        nf = (nf === 0) ? nf : 1 / nf;\r\n\r\n        out[0] = -2 * lr;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n\r\n        out[4] = 0;\r\n        out[5] = -2 * bt;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 2 * nf;\r\n        out[11] = 0;\r\n\r\n        out[12] = (left + right) * lr;\r\n        out[13] = (top + bottom) * bt;\r\n        out[14] = (far + near) * nf;\r\n        out[15] = 1;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Generate a look-at matrix with the given eye position, focal point, and up axis.\r\n     *\r\n     * @method Phaser.Math.Matrix4#lookAt\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Vector3} eye - Position of the viewer\r\n     * @param {Phaser.Math.Vector3} center - Point the viewer is looking at\r\n     * @param {Phaser.Math.Vector3} up - vec3 pointing up.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    lookAt: function (eye, center, up)\r\n    {\r\n        var out = this.val;\r\n\r\n        var eyex = eye.x;\r\n        var eyey = eye.y;\r\n        var eyez = eye.z;\r\n\r\n        var upx = up.x;\r\n        var upy = up.y;\r\n        var upz = up.z;\r\n\r\n        var centerx = center.x;\r\n        var centery = center.y;\r\n        var centerz = center.z;\r\n\r\n        if (Math.abs(eyex - centerx) < EPSILON &&\r\n            Math.abs(eyey - centery) < EPSILON &&\r\n            Math.abs(eyez - centerz) < EPSILON)\r\n        {\r\n            return this.identity();\r\n        }\r\n\r\n        var z0 = eyex - centerx;\r\n        var z1 = eyey - centery;\r\n        var z2 = eyez - centerz;\r\n\r\n        var len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n\r\n        z0 *= len;\r\n        z1 *= len;\r\n        z2 *= len;\r\n\r\n        var x0 = upy * z2 - upz * z1;\r\n        var x1 = upz * z0 - upx * z2;\r\n        var x2 = upx * z1 - upy * z0;\r\n\r\n        len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n\r\n        if (!len)\r\n        {\r\n            x0 = 0;\r\n            x1 = 0;\r\n            x2 = 0;\r\n        }\r\n        else\r\n        {\r\n            len = 1 / len;\r\n            x0 *= len;\r\n            x1 *= len;\r\n            x2 *= len;\r\n        }\r\n\r\n        var y0 = z1 * x2 - z2 * x1;\r\n        var y1 = z2 * x0 - z0 * x2;\r\n        var y2 = z0 * x1 - z1 * x0;\r\n\r\n        len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n\r\n        if (!len)\r\n        {\r\n            y0 = 0;\r\n            y1 = 0;\r\n            y2 = 0;\r\n        }\r\n        else\r\n        {\r\n            len = 1 / len;\r\n            y0 *= len;\r\n            y1 *= len;\r\n            y2 *= len;\r\n        }\r\n\r\n        out[0] = x0;\r\n        out[1] = y0;\r\n        out[2] = z0;\r\n        out[3] = 0;\r\n\r\n        out[4] = x1;\r\n        out[5] = y1;\r\n        out[6] = z1;\r\n        out[7] = 0;\r\n\r\n        out[8] = x2;\r\n        out[9] = y2;\r\n        out[10] = z2;\r\n        out[11] = 0;\r\n\r\n        out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n        out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n        out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n        out[15] = 1;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the values of this matrix from the given `yaw`, `pitch` and `roll` values.\r\n     *\r\n     * @method Phaser.Math.Matrix4#yawPitchRoll\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} yaw - [description]\r\n     * @param {number} pitch - [description]\r\n     * @param {number} roll - [description]\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    yawPitchRoll: function (yaw, pitch, roll)\r\n    {\r\n        this.zero();\r\n        _tempMat1.zero();\r\n        _tempMat2.zero();\r\n\r\n        var m0 = this.val;\r\n        var m1 = _tempMat1.val;\r\n        var m2 = _tempMat2.val;\r\n\r\n        //  Rotate Z\r\n        var s = Math.sin(roll);\r\n        var c = Math.cos(roll);\r\n\r\n        m0[10] = 1;\r\n        m0[15] = 1;\r\n        m0[0] = c;\r\n        m0[1] = s;\r\n        m0[4] = -s;\r\n        m0[5] = c;\r\n\r\n        //  Rotate X\r\n        s = Math.sin(pitch);\r\n        c = Math.cos(pitch);\r\n\r\n        m1[0] = 1;\r\n        m1[15] = 1;\r\n        m1[5] = c;\r\n        m1[10] = c;\r\n        m1[9] = -s;\r\n        m1[6] = s;\r\n\r\n        //  Rotate Y\r\n        s = Math.sin(yaw);\r\n        c = Math.cos(yaw);\r\n\r\n        m2[5] = 1;\r\n        m2[15] = 1;\r\n        m2[0] = c;\r\n        m2[2] = -s;\r\n        m2[8] = s;\r\n        m2[10] = c;\r\n\r\n        this.multiplyLocal(_tempMat1);\r\n        this.multiplyLocal(_tempMat2);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Generate a world matrix from the given rotation, position, scale, view matrix and projection matrix.\r\n     *\r\n     * @method Phaser.Math.Matrix4#setWorldMatrix\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Vector3} rotation - The rotation of the world matrix.\r\n     * @param {Phaser.Math.Vector3} position - The position of the world matrix.\r\n     * @param {Phaser.Math.Vector3} scale - The scale of the world matrix.\r\n     * @param {Phaser.Math.Matrix4} [viewMatrix] - The view matrix.\r\n     * @param {Phaser.Math.Matrix4} [projectionMatrix] - The projection matrix.\r\n     *\r\n     * @return {Phaser.Math.Matrix4} This Matrix4.\r\n     */\r\n    setWorldMatrix: function (rotation, position, scale, viewMatrix, projectionMatrix)\r\n    {\r\n        this.yawPitchRoll(rotation.y, rotation.x, rotation.z);\r\n\r\n        _tempMat1.scaling(scale.x, scale.y, scale.z);\r\n        _tempMat2.xyz(position.x, position.y, position.z);\r\n\r\n        this.multiplyLocal(_tempMat1);\r\n        this.multiplyLocal(_tempMat2);\r\n\r\n        if (viewMatrix !== undefined)\r\n        {\r\n            this.multiplyLocal(viewMatrix);\r\n        }\r\n\r\n        if (projectionMatrix !== undefined)\r\n        {\r\n            this.multiplyLocal(projectionMatrix);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n});\r\n\r\nvar _tempMat1 = new Matrix4();\r\nvar _tempMat2 = new Matrix4();\r\n\r\nmodule.exports = Matrix4;\r\n"]},"metadata":{},"sourceType":"script"}