{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n\nvar Components = require('./components');\n\nvar Image = require('../../gameobjects/image/Image');\n/**\r\n * @classdesc\r\n * An Arcade Physics Image is an Image with an Arcade Physics body and related components.\r\n * The body can be dynamic or static.\r\n *\r\n * The main difference between an Arcade Image and an Arcade Sprite is that you cannot animate an Arcade Image.\r\n *\r\n * @class Image\r\n * @extends Phaser.GameObjects.Image\r\n * @memberof Phaser.Physics.Arcade\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @extends Phaser.Physics.Arcade.Components.Acceleration\r\n * @extends Phaser.Physics.Arcade.Components.Angular\r\n * @extends Phaser.Physics.Arcade.Components.Bounce\r\n * @extends Phaser.Physics.Arcade.Components.Debug\r\n * @extends Phaser.Physics.Arcade.Components.Drag\r\n * @extends Phaser.Physics.Arcade.Components.Enable\r\n * @extends Phaser.Physics.Arcade.Components.Friction\r\n * @extends Phaser.Physics.Arcade.Components.Gravity\r\n * @extends Phaser.Physics.Arcade.Components.Immovable\r\n * @extends Phaser.Physics.Arcade.Components.Mass\r\n * @extends Phaser.Physics.Arcade.Components.Size\r\n * @extends Phaser.Physics.Arcade.Components.Velocity\r\n * @extends Phaser.GameObjects.Components.Alpha\r\n * @extends Phaser.GameObjects.Components.BlendMode\r\n * @extends Phaser.GameObjects.Components.Depth\r\n * @extends Phaser.GameObjects.Components.Flip\r\n * @extends Phaser.GameObjects.Components.GetBounds\r\n * @extends Phaser.GameObjects.Components.Origin\r\n * @extends Phaser.GameObjects.Components.Pipeline\r\n * @extends Phaser.GameObjects.Components.ScrollFactor\r\n * @extends Phaser.GameObjects.Components.Size\r\n * @extends Phaser.GameObjects.Components.Texture\r\n * @extends Phaser.GameObjects.Components.Tint\r\n * @extends Phaser.GameObjects.Components.Transform\r\n * @extends Phaser.GameObjects.Components.Visible\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\n\n\nvar ArcadeImage = new Class({\n  Extends: Image,\n  Mixins: [Components.Acceleration, Components.Angular, Components.Bounce, Components.Debug, Components.Drag, Components.Enable, Components.Friction, Components.Gravity, Components.Immovable, Components.Mass, Components.Size, Components.Velocity],\n  initialize: function ArcadeImage(scene, x, y, texture, frame) {\n    Image.call(this, scene, x, y, texture, frame);\n    /**\r\n     * This Game Object's Physics Body.\r\n     *\r\n     * @name Phaser.Physics.Arcade.Image#body\r\n     * @type {?(Phaser.Physics.Arcade.Body|Phaser.Physics.Arcade.StaticBody)}\r\n     * @default null\r\n     * @since 3.0.0\r\n     */\n\n    this.body = null;\n  }\n});\nmodule.exports = ArcadeImage;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/arcade/ArcadeImage.js"],"names":["Class","require","Components","Image","ArcadeImage","Extends","Mixins","Acceleration","Angular","Bounce","Debug","Drag","Enable","Friction","Gravity","Immovable","Mass","Size","Velocity","initialize","scene","x","y","texture","frame","call","body","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,+BAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,IAAIG,WAAW,GAAG,IAAIJ,KAAJ,CAAU;AAExBK,EAAAA,OAAO,EAAEF,KAFe;AAIxBG,EAAAA,MAAM,EAAE,CACJJ,UAAU,CAACK,YADP,EAEJL,UAAU,CAACM,OAFP,EAGJN,UAAU,CAACO,MAHP,EAIJP,UAAU,CAACQ,KAJP,EAKJR,UAAU,CAACS,IALP,EAMJT,UAAU,CAACU,MANP,EAOJV,UAAU,CAACW,QAPP,EAQJX,UAAU,CAACY,OARP,EASJZ,UAAU,CAACa,SATP,EAUJb,UAAU,CAACc,IAVP,EAWJd,UAAU,CAACe,IAXP,EAYJf,UAAU,CAACgB,QAZP,CAJgB;AAmBxBC,EAAAA,UAAU,EAEV,SAASf,WAAT,CAAsBgB,KAAtB,EAA6BC,CAA7B,EAAgCC,CAAhC,EAAmCC,OAAnC,EAA4CC,KAA5C,EACA;AACIrB,IAAAA,KAAK,CAACsB,IAAN,CAAW,IAAX,EAAiBL,KAAjB,EAAwBC,CAAxB,EAA2BC,CAA3B,EAA8BC,OAA9B,EAAuCC,KAAvC;AAEA;;;;;;;;;AAQA,SAAKE,IAAL,GAAY,IAAZ;AACH;AAlCuB,CAAV,CAAlB;AAsCAC,MAAM,CAACC,OAAP,GAAiBxB,WAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Components = require('./components');\r\nvar Image = require('../../gameobjects/image/Image');\r\n\r\n/**\r\n * @classdesc\r\n * An Arcade Physics Image is an Image with an Arcade Physics body and related components.\r\n * The body can be dynamic or static.\r\n *\r\n * The main difference between an Arcade Image and an Arcade Sprite is that you cannot animate an Arcade Image.\r\n *\r\n * @class Image\r\n * @extends Phaser.GameObjects.Image\r\n * @memberof Phaser.Physics.Arcade\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @extends Phaser.Physics.Arcade.Components.Acceleration\r\n * @extends Phaser.Physics.Arcade.Components.Angular\r\n * @extends Phaser.Physics.Arcade.Components.Bounce\r\n * @extends Phaser.Physics.Arcade.Components.Debug\r\n * @extends Phaser.Physics.Arcade.Components.Drag\r\n * @extends Phaser.Physics.Arcade.Components.Enable\r\n * @extends Phaser.Physics.Arcade.Components.Friction\r\n * @extends Phaser.Physics.Arcade.Components.Gravity\r\n * @extends Phaser.Physics.Arcade.Components.Immovable\r\n * @extends Phaser.Physics.Arcade.Components.Mass\r\n * @extends Phaser.Physics.Arcade.Components.Size\r\n * @extends Phaser.Physics.Arcade.Components.Velocity\r\n * @extends Phaser.GameObjects.Components.Alpha\r\n * @extends Phaser.GameObjects.Components.BlendMode\r\n * @extends Phaser.GameObjects.Components.Depth\r\n * @extends Phaser.GameObjects.Components.Flip\r\n * @extends Phaser.GameObjects.Components.GetBounds\r\n * @extends Phaser.GameObjects.Components.Origin\r\n * @extends Phaser.GameObjects.Components.Pipeline\r\n * @extends Phaser.GameObjects.Components.ScrollFactor\r\n * @extends Phaser.GameObjects.Components.Size\r\n * @extends Phaser.GameObjects.Components.Texture\r\n * @extends Phaser.GameObjects.Components.Tint\r\n * @extends Phaser.GameObjects.Components.Transform\r\n * @extends Phaser.GameObjects.Components.Visible\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\r\nvar ArcadeImage = new Class({\r\n\r\n    Extends: Image,\r\n\r\n    Mixins: [\r\n        Components.Acceleration,\r\n        Components.Angular,\r\n        Components.Bounce,\r\n        Components.Debug,\r\n        Components.Drag,\r\n        Components.Enable,\r\n        Components.Friction,\r\n        Components.Gravity,\r\n        Components.Immovable,\r\n        Components.Mass,\r\n        Components.Size,\r\n        Components.Velocity\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function ArcadeImage (scene, x, y, texture, frame)\r\n    {\r\n        Image.call(this, scene, x, y, texture, frame);\r\n\r\n        /**\r\n         * This Game Object's Physics Body.\r\n         *\r\n         * @name Phaser.Physics.Arcade.Image#body\r\n         * @type {?(Phaser.Physics.Arcade.Body|Phaser.Physics.Arcade.StaticBody)}\r\n         * @default null\r\n         * @since 3.0.0\r\n         */\r\n        this.body = null;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = ArcadeImage;\r\n"]},"metadata":{},"sourceType":"script"}