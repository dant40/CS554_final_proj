{"ast":null,"code":"module.exports = ['#define SHADER_NAME PHASER_BITMAP_MASK_FS', '', 'precision mediump float;', '', 'uniform vec2 uResolution;', 'uniform sampler2D uMainSampler;', 'uniform sampler2D uMaskSampler;', 'uniform bool uInvertMaskAlpha;', '', 'void main()', '{', '    vec2 uv = gl_FragCoord.xy / uResolution;', '    vec4 mainColor = texture2D(uMainSampler, uv);', '    vec4 maskColor = texture2D(uMaskSampler, uv);', '    float alpha = mainColor.a;', '', '    if (!uInvertMaskAlpha)', '    {', '        alpha *= (maskColor.a);', '    }', '    else', '    {', '        alpha *= (1.0 - maskColor.a);', '    }', '', '    gl_FragColor = vec4(mainColor.rgb * alpha, alpha);', '}', ''].join('\\n');","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js"],"names":["module","exports","join"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,CACb,2CADa,EAEb,EAFa,EAGb,0BAHa,EAIb,EAJa,EAKb,2BALa,EAMb,iCANa,EAOb,iCAPa,EAQb,gCARa,EASb,EATa,EAUb,aAVa,EAWb,GAXa,EAYb,8CAZa,EAab,mDAba,EAcb,mDAda,EAeb,gCAfa,EAgBb,EAhBa,EAiBb,4BAjBa,EAkBb,OAlBa,EAmBb,iCAnBa,EAoBb,OApBa,EAqBb,UArBa,EAsBb,OAtBa,EAuBb,uCAvBa,EAwBb,OAxBa,EAyBb,EAzBa,EA0Bb,wDA1Ba,EA2Bb,GA3Ba,EA4Bb,EA5Ba,EA6BfC,IA7Be,CA6BV,IA7BU,CAAjB","sourcesContent":["module.exports = [\n    '#define SHADER_NAME PHASER_BITMAP_MASK_FS',\n    '',\n    'precision mediump float;',\n    '',\n    'uniform vec2 uResolution;',\n    'uniform sampler2D uMainSampler;',\n    'uniform sampler2D uMaskSampler;',\n    'uniform bool uInvertMaskAlpha;',\n    '',\n    'void main()',\n    '{',\n    '    vec2 uv = gl_FragCoord.xy / uResolution;',\n    '    vec4 mainColor = texture2D(uMainSampler, uv);',\n    '    vec4 maskColor = texture2D(uMaskSampler, uv);',\n    '    float alpha = mainColor.a;',\n    '',\n    '    if (!uInvertMaskAlpha)',\n    '    {',\n    '        alpha *= (maskColor.a);',\n    '    }',\n    '    else',\n    '    {',\n    '        alpha *= (1.0 - maskColor.a);',\n    '    }',\n    '',\n    '    gl_FragColor = vec4(mainColor.rgb * alpha, alpha);',\n    '}',\n    ''\n].join('\\n');\n"]},"metadata":{},"sourceType":"script"}