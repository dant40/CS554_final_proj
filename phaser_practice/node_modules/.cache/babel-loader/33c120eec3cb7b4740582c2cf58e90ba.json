{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Takes a string and replaces instances of markers with values in the given array.\r\n * The markers take the form of `%1`, `%2`, etc. I.e.:\r\n *\r\n * `Format(\"The %1 is worth %2 gold\", [ 'Sword', 500 ])`\r\n *\r\n * @function Phaser.Utils.String.Format\r\n * @since 3.0.0\r\n *\r\n * @param {string} string - The string containing the replacement markers.\r\n * @param {array} values - An array containing values that will replace the markers. If no value exists an empty string is inserted instead.\r\n *\r\n * @return {string} The string containing replaced values.\r\n */\nvar Format = function (string, values) {\n  return string.replace(/%([0-9]+)/g, function (s, n) {\n    return values[Number(n) - 1];\n  });\n};\n\nmodule.exports = Format;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/string/Format.js"],"names":["Format","string","values","replace","s","n","Number","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;AAcA,IAAIA,MAAM,GAAG,UAAUC,MAAV,EAAkBC,MAAlB,EACb;AACI,SAAOD,MAAM,CAACE,OAAP,CAAe,YAAf,EAA6B,UAAUC,CAAV,EAAaC,CAAb,EACpC;AACI,WAAOH,MAAM,CAACI,MAAM,CAACD,CAAD,CAAN,GAAY,CAAb,CAAb;AACH,GAHM,CAAP;AAIH,CAND;;AAQAE,MAAM,CAACC,OAAP,GAAiBR,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Takes a string and replaces instances of markers with values in the given array.\r\n * The markers take the form of `%1`, `%2`, etc. I.e.:\r\n *\r\n * `Format(\"The %1 is worth %2 gold\", [ 'Sword', 500 ])`\r\n *\r\n * @function Phaser.Utils.String.Format\r\n * @since 3.0.0\r\n *\r\n * @param {string} string - The string containing the replacement markers.\r\n * @param {array} values - An array containing values that will replace the markers. If no value exists an empty string is inserted instead.\r\n *\r\n * @return {string} The string containing replaced values.\r\n */\r\nvar Format = function (string, values)\r\n{\r\n    return string.replace(/%([0-9]+)/g, function (s, n)\r\n    {\r\n        return values[Number(n) - 1];\r\n    });\r\n};\r\n\r\nmodule.exports = Format;\r\n"]},"metadata":{},"sourceType":"script"}