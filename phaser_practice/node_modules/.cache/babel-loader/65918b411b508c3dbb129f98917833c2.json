{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Point = require('../point/Point');\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Geom.Triangle.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - [description]\r\n * @param {Phaser.Geom.Point} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\n\n\nvar Random = function (triangle, out) {\n  if (out === undefined) {\n    out = new Point();\n  } //  Basis vectors\n\n\n  var ux = triangle.x2 - triangle.x1;\n  var uy = triangle.y2 - triangle.y1;\n  var vx = triangle.x3 - triangle.x1;\n  var vy = triangle.y3 - triangle.y1; //  Random point within the unit square\n\n  var r = Math.random();\n  var s = Math.random(); //  Point outside the triangle? Remap it.\n\n  if (r + s >= 1) {\n    r = 1 - r;\n    s = 1 - s;\n  }\n\n  out.x = triangle.x1 + (ux * r + vx * s);\n  out.y = triangle.y1 + (uy * r + vy * s);\n  return out;\n};\n\nmodule.exports = Random;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/triangle/Random.js"],"names":["Point","require","Random","triangle","out","undefined","ux","x2","x1","uy","y2","y1","vx","x3","vy","y3","r","Math","random","s","x","y","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB;AAEA;;;;;;;;;;;;;;;AAaA,IAAIC,MAAM,GAAG,UAAUC,QAAV,EAAoBC,GAApB,EACb;AACI,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AAAED,IAAAA,GAAG,GAAG,IAAIJ,KAAJ,EAAN;AAAoB,GADjD,CAGI;;;AACA,MAAIM,EAAE,GAAGH,QAAQ,CAACI,EAAT,GAAcJ,QAAQ,CAACK,EAAhC;AACA,MAAIC,EAAE,GAAGN,QAAQ,CAACO,EAAT,GAAcP,QAAQ,CAACQ,EAAhC;AAEA,MAAIC,EAAE,GAAGT,QAAQ,CAACU,EAAT,GAAcV,QAAQ,CAACK,EAAhC;AACA,MAAIM,EAAE,GAAGX,QAAQ,CAACY,EAAT,GAAcZ,QAAQ,CAACQ,EAAhC,CARJ,CAUI;;AACA,MAAIK,CAAC,GAAGC,IAAI,CAACC,MAAL,EAAR;AACA,MAAIC,CAAC,GAAGF,IAAI,CAACC,MAAL,EAAR,CAZJ,CAcI;;AACA,MAAIF,CAAC,GAAGG,CAAJ,IAAS,CAAb,EACA;AACIH,IAAAA,CAAC,GAAG,IAAIA,CAAR;AACAG,IAAAA,CAAC,GAAG,IAAIA,CAAR;AACH;;AAEDf,EAAAA,GAAG,CAACgB,CAAJ,GAAQjB,QAAQ,CAACK,EAAT,IAAgBF,EAAE,GAAGU,CAAN,GAAYJ,EAAE,GAAGO,CAAhC,CAAR;AACAf,EAAAA,GAAG,CAACiB,CAAJ,GAAQlB,QAAQ,CAACQ,EAAT,IAAgBF,EAAE,GAAGO,CAAN,GAAYF,EAAE,GAAGK,CAAhC,CAAR;AAEA,SAAOf,GAAP;AACH,CA1BD;;AA4BAkB,MAAM,CAACC,OAAP,GAAiBrB,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Geom.Triangle.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - [description]\r\n * @param {Phaser.Geom.Point} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\r\nvar Random = function (triangle, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    //  Basis vectors\r\n    var ux = triangle.x2 - triangle.x1;\r\n    var uy = triangle.y2 - triangle.y1;\r\n\r\n    var vx = triangle.x3 - triangle.x1;\r\n    var vy = triangle.y3 - triangle.y1;\r\n\r\n    //  Random point within the unit square\r\n    var r = Math.random();\r\n    var s = Math.random();\r\n\r\n    //  Point outside the triangle? Remap it.\r\n    if (r + s >= 1)\r\n    {\r\n        r = 1 - r;\r\n        s = 1 - s;\r\n    }\r\n\r\n    out.x = triangle.x1 + ((ux * r) + (vx * s));\r\n    out.y = triangle.y1 + ((uy * r) + (vy * s));\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Random;\r\n"]},"metadata":{},"sourceType":"script"}