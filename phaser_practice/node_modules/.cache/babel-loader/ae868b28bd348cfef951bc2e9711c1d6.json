{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Passes each element in the array to the given callback.\r\n *\r\n * @function Phaser.Utils.Array.Each\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to search.\r\n * @param {function} callback - A callback to be invoked for each item in the array.\r\n * @param {object} context - The context in which the callback is invoked.\r\n * @param {...*} [args] - Additional arguments that will be passed to the callback, after the current array item.\r\n *\r\n * @return {array} The input array.\r\n */\nvar Each = function (array, callback, context) {\n  var i;\n  var args = [null];\n\n  for (i = 3; i < arguments.length; i++) {\n    args.push(arguments[i]);\n  }\n\n  for (i = 0; i < array.length; i++) {\n    args[0] = array[i];\n    callback.apply(context, args);\n  }\n\n  return array;\n};\n\nmodule.exports = Each;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/array/Each.js"],"names":["Each","array","callback","context","i","args","arguments","length","push","apply","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;AAaA,IAAIA,IAAI,GAAG,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,OAA3B,EACX;AACI,MAAIC,CAAJ;AACA,MAAIC,IAAI,GAAG,CAAE,IAAF,CAAX;;AAEA,OAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGE,SAAS,CAACC,MAA1B,EAAkCH,CAAC,EAAnC,EACA;AACIC,IAAAA,IAAI,CAACG,IAAL,CAAUF,SAAS,CAACF,CAAD,CAAnB;AACH;;AAED,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,KAAK,CAACM,MAAtB,EAA8BH,CAAC,EAA/B,EACA;AACIC,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUJ,KAAK,CAACG,CAAD,CAAf;AAEAF,IAAAA,QAAQ,CAACO,KAAT,CAAeN,OAAf,EAAwBE,IAAxB;AACH;;AAED,SAAOJ,KAAP;AACH,CAlBD;;AAoBAS,MAAM,CAACC,OAAP,GAAiBX,IAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Passes each element in the array to the given callback.\r\n *\r\n * @function Phaser.Utils.Array.Each\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to search.\r\n * @param {function} callback - A callback to be invoked for each item in the array.\r\n * @param {object} context - The context in which the callback is invoked.\r\n * @param {...*} [args] - Additional arguments that will be passed to the callback, after the current array item.\r\n *\r\n * @return {array} The input array.\r\n */\r\nvar Each = function (array, callback, context)\r\n{\r\n    var i;\r\n    var args = [ null ];\r\n\r\n    for (i = 3; i < arguments.length; i++)\r\n    {\r\n        args.push(arguments[i]);\r\n    }\r\n\r\n    for (i = 0; i < array.length; i++)\r\n    {\r\n        args[0] = array[i];\r\n\r\n        callback.apply(context, args);\r\n    }\r\n\r\n    return array;\r\n};\r\n\r\nmodule.exports = Each;\r\n"]},"metadata":{},"sourceType":"script"}