{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Sets the friction (e.g. the amount of velocity reduced over time) of the physics body when moving horizontally in the X axis. The higher than friction, the faster the body will slow down once force stops being applied to it.\r\n *\r\n * @namespace Phaser.Physics.Arcade.Components.Friction\r\n * @since 3.0.0\r\n */\nvar Friction = {\n  /**\r\n   * Sets the friction (e.g. the amount of velocity reduced over time) of the physics body when moving.\r\n   * The higher than friction, the faster the body will slow down once force stops being applied to it.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Friction#setFriction\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The amount of horizontal friction to apply.\r\n   * @param {number} [y=x] - The amount of vertical friction to apply.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setFriction: function (x, y) {\n    this.body.friction.set(x, y);\n    return this;\n  },\n\n  /**\r\n   * Sets the friction (e.g. the amount of velocity reduced over time) of the physics body when moving horizontally in the X axis.\r\n   * The higher than friction, the faster the body will slow down once force stops being applied to it.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Friction#setFrictionX\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The amount of friction to apply.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setFrictionX: function (x) {\n    this.body.friction.x = x;\n    return this;\n  },\n\n  /**\r\n   * Sets the friction (e.g. the amount of velocity reduced over time) of the physics body when moving vertically in the Y axis.\r\n   * The higher than friction, the faster the body will slow down once force stops being applied to it.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Friction#setFrictionY\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The amount of friction to apply.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setFrictionY: function (y) {\n    this.body.friction.y = y;\n    return this;\n  }\n};\nmodule.exports = Friction;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/arcade/components/Friction.js"],"names":["Friction","setFriction","x","y","body","friction","set","setFrictionX","setFrictionY","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;AAMA,IAAIA,QAAQ,GAAG;AAEX;;;;;;;;;;;;AAYAC,EAAAA,WAAW,EAAE,UAAUC,CAAV,EAAaC,CAAb,EACb;AACI,SAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBJ,CAAvB,EAA0BC,CAA1B;AAEA,WAAO,IAAP;AACH,GAnBU;;AAqBX;;;;;;;;;;;AAWAI,EAAAA,YAAY,EAAE,UAAUL,CAAV,EACd;AACI,SAAKE,IAAL,CAAUC,QAAV,CAAmBH,CAAnB,GAAuBA,CAAvB;AAEA,WAAO,IAAP;AACH,GArCU;;AAuCX;;;;;;;;;;;AAWAM,EAAAA,YAAY,EAAE,UAAUL,CAAV,EACd;AACI,SAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAnB,GAAuBA,CAAvB;AAEA,WAAO,IAAP;AACH;AAvDU,CAAf;AA2DAM,MAAM,CAACC,OAAP,GAAiBV,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Sets the friction (e.g. the amount of velocity reduced over time) of the physics body when moving horizontally in the X axis. The higher than friction, the faster the body will slow down once force stops being applied to it.\r\n *\r\n * @namespace Phaser.Physics.Arcade.Components.Friction\r\n * @since 3.0.0\r\n */\r\nvar Friction = {\r\n\r\n    /**\r\n     * Sets the friction (e.g. the amount of velocity reduced over time) of the physics body when moving.\r\n     * The higher than friction, the faster the body will slow down once force stops being applied to it.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Friction#setFriction\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The amount of horizontal friction to apply.\r\n     * @param {number} [y=x] - The amount of vertical friction to apply.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setFriction: function (x, y)\r\n    {\r\n        this.body.friction.set(x, y);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the friction (e.g. the amount of velocity reduced over time) of the physics body when moving horizontally in the X axis.\r\n     * The higher than friction, the faster the body will slow down once force stops being applied to it.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Friction#setFrictionX\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The amount of friction to apply.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setFrictionX: function (x)\r\n    {\r\n        this.body.friction.x = x;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the friction (e.g. the amount of velocity reduced over time) of the physics body when moving vertically in the Y axis.\r\n     * The higher than friction, the faster the body will slow down once force stops being applied to it.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Friction#setFrictionY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The amount of friction to apply.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setFrictionY: function (y)\r\n    {\r\n        this.body.friction.y = y;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Friction;\r\n"]},"metadata":{},"sourceType":"script"}