{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar RotateAroundDistance = require('../math/RotateAroundDistance');\n\nvar DistanceBetween = require('../math/distance/DistanceBetween');\n/**\r\n * Rotates each item around the given point by the given angle.\r\n *\r\n * @function Phaser.Actions.RotateAround\r\n * @since 3.0.0\r\n * @see Phaser.Math.RotateAroundDistance\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {object} point - Any object with public `x` and `y` properties.\r\n * @param {number} angle - The angle to rotate by, in radians.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\n\n\nvar RotateAround = function (items, point, angle) {\n  var x = point.x;\n  var y = point.y;\n\n  for (var i = 0; i < items.length; i++) {\n    var item = items[i];\n    RotateAroundDistance(item, x, y, angle, Math.max(1, DistanceBetween(item.x, item.y, x, y)));\n  }\n\n  return items;\n};\n\nmodule.exports = RotateAround;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/actions/RotateAround.js"],"names":["RotateAroundDistance","require","DistanceBetween","RotateAround","items","point","angle","x","y","i","length","item","Math","max","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,8BAAD,CAAlC;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,kCAAD,CAA7B;AAEA;;;;;;;;;;;;;;;;;AAeA,IAAIE,YAAY,GAAG,UAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,KAAxB,EACnB;AACI,MAAIC,CAAC,GAAGF,KAAK,CAACE,CAAd;AACA,MAAIC,CAAC,GAAGH,KAAK,CAACG,CAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EACA;AACI,QAAIE,IAAI,GAAGP,KAAK,CAACK,CAAD,CAAhB;AAEAT,IAAAA,oBAAoB,CAACW,IAAD,EAAOJ,CAAP,EAAUC,CAAV,EAAaF,KAAb,EAAoBM,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYX,eAAe,CAACS,IAAI,CAACJ,CAAN,EAASI,IAAI,CAACH,CAAd,EAAiBD,CAAjB,EAAoBC,CAApB,CAA3B,CAApB,CAApB;AACH;;AAED,SAAOJ,KAAP;AACH,CAbD;;AAeAU,MAAM,CAACC,OAAP,GAAiBZ,YAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar RotateAroundDistance = require('../math/RotateAroundDistance');\r\nvar DistanceBetween = require('../math/distance/DistanceBetween');\r\n\r\n/**\r\n * Rotates each item around the given point by the given angle.\r\n *\r\n * @function Phaser.Actions.RotateAround\r\n * @since 3.0.0\r\n * @see Phaser.Math.RotateAroundDistance\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {object} point - Any object with public `x` and `y` properties.\r\n * @param {number} angle - The angle to rotate by, in radians.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\r\nvar RotateAround = function (items, point, angle)\r\n{\r\n    var x = point.x;\r\n    var y = point.y;\r\n\r\n    for (var i = 0; i < items.length; i++)\r\n    {\r\n        var item = items[i];\r\n\r\n        RotateAroundDistance(item, x, y, angle, Math.max(1, DistanceBetween(item.x, item.y, x, y)));\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = RotateAround;\r\n"]},"metadata":{},"sourceType":"script"}