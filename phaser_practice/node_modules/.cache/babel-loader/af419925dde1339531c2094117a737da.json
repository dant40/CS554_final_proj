{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar GetAdvancedValue = require('../utils/object/GetAdvancedValue');\n/**\r\n * Adds an Animation component to a Sprite and populates it based on the given config.\r\n *\r\n * @function Phaser.GameObjects.BuildGameObjectAnimation\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Sprite} sprite - The sprite to add an Animation component to.\r\n * @param {object} config - The animation config.\r\n *\r\n * @return {Phaser.GameObjects.Sprite} The updated Sprite.\r\n */\n\n\nvar BuildGameObjectAnimation = function (sprite, config) {\n  var animConfig = GetAdvancedValue(config, 'anims', null);\n\n  if (animConfig === null) {\n    return sprite;\n  }\n\n  if (typeof animConfig === 'string') {\n    //  { anims: 'key' }\n    sprite.anims.play(animConfig);\n  } else if (typeof animConfig === 'object') {\n    //  { anims: {\n    //              key: string\n    //              startFrame: [string|integer]\n    //              delay: [float]\n    //              repeat: [integer]\n    //              repeatDelay: [float]\n    //              yoyo: [boolean]\n    //              play: [boolean]\n    //              delayedPlay: [boolean]\n    //           }\n    //  }\n    var anims = sprite.anims;\n    var key = GetAdvancedValue(animConfig, 'key', undefined);\n    var startFrame = GetAdvancedValue(animConfig, 'startFrame', undefined);\n    var delay = GetAdvancedValue(animConfig, 'delay', 0);\n    var repeat = GetAdvancedValue(animConfig, 'repeat', 0);\n    var repeatDelay = GetAdvancedValue(animConfig, 'repeatDelay', 0);\n    var yoyo = GetAdvancedValue(animConfig, 'yoyo', false);\n    var play = GetAdvancedValue(animConfig, 'play', false);\n    var delayedPlay = GetAdvancedValue(animConfig, 'delayedPlay', 0);\n    anims.setDelay(delay);\n    anims.setRepeat(repeat);\n    anims.setRepeatDelay(repeatDelay);\n    anims.setYoyo(yoyo);\n\n    if (play) {\n      anims.play(key, startFrame);\n    } else if (delayedPlay > 0) {\n      anims.delayedPlay(delayedPlay, key, startFrame);\n    } else {\n      anims.load(key);\n    }\n  }\n\n  return sprite;\n};\n\nmodule.exports = BuildGameObjectAnimation;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/BuildGameObjectAnimation.js"],"names":["GetAdvancedValue","require","BuildGameObjectAnimation","sprite","config","animConfig","anims","play","key","undefined","startFrame","delay","repeat","repeatDelay","yoyo","delayedPlay","setDelay","setRepeat","setRepeatDelay","setYoyo","load","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,kCAAD,CAA9B;AAEA;;;;;;;;;;;;;AAWA,IAAIC,wBAAwB,GAAG,UAAUC,MAAV,EAAkBC,MAAlB,EAC/B;AACI,MAAIC,UAAU,GAAGL,gBAAgB,CAACI,MAAD,EAAS,OAAT,EAAkB,IAAlB,CAAjC;;AAEA,MAAIC,UAAU,KAAK,IAAnB,EACA;AACI,WAAOF,MAAP;AACH;;AAED,MAAI,OAAOE,UAAP,KAAsB,QAA1B,EACA;AACI;AACAF,IAAAA,MAAM,CAACG,KAAP,CAAaC,IAAb,CAAkBF,UAAlB;AACH,GAJD,MAKK,IAAI,OAAOA,UAAP,KAAsB,QAA1B,EACL;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAIC,KAAK,GAAGH,MAAM,CAACG,KAAnB;AAEA,QAAIE,GAAG,GAAGR,gBAAgB,CAACK,UAAD,EAAa,KAAb,EAAoBI,SAApB,CAA1B;AACA,QAAIC,UAAU,GAAGV,gBAAgB,CAACK,UAAD,EAAa,YAAb,EAA2BI,SAA3B,CAAjC;AAEA,QAAIE,KAAK,GAAGX,gBAAgB,CAACK,UAAD,EAAa,OAAb,EAAsB,CAAtB,CAA5B;AACA,QAAIO,MAAM,GAAGZ,gBAAgB,CAACK,UAAD,EAAa,QAAb,EAAuB,CAAvB,CAA7B;AACA,QAAIQ,WAAW,GAAGb,gBAAgB,CAACK,UAAD,EAAa,aAAb,EAA4B,CAA5B,CAAlC;AACA,QAAIS,IAAI,GAAGd,gBAAgB,CAACK,UAAD,EAAa,MAAb,EAAqB,KAArB,CAA3B;AAEA,QAAIE,IAAI,GAAGP,gBAAgB,CAACK,UAAD,EAAa,MAAb,EAAqB,KAArB,CAA3B;AACA,QAAIU,WAAW,GAAGf,gBAAgB,CAACK,UAAD,EAAa,aAAb,EAA4B,CAA5B,CAAlC;AAEAC,IAAAA,KAAK,CAACU,QAAN,CAAeL,KAAf;AACAL,IAAAA,KAAK,CAACW,SAAN,CAAgBL,MAAhB;AACAN,IAAAA,KAAK,CAACY,cAAN,CAAqBL,WAArB;AACAP,IAAAA,KAAK,CAACa,OAAN,CAAcL,IAAd;;AAEA,QAAIP,IAAJ,EACA;AACID,MAAAA,KAAK,CAACC,IAAN,CAAWC,GAAX,EAAgBE,UAAhB;AACH,KAHD,MAIK,IAAIK,WAAW,GAAG,CAAlB,EACL;AACIT,MAAAA,KAAK,CAACS,WAAN,CAAkBA,WAAlB,EAA+BP,GAA/B,EAAoCE,UAApC;AACH,KAHI,MAKL;AACIJ,MAAAA,KAAK,CAACc,IAAN,CAAWZ,GAAX;AACH;AACJ;;AAED,SAAOL,MAAP;AACH,CA7DD;;AA+DAkB,MAAM,CAACC,OAAP,GAAiBpB,wBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetAdvancedValue = require('../utils/object/GetAdvancedValue');\r\n\r\n/**\r\n * Adds an Animation component to a Sprite and populates it based on the given config.\r\n *\r\n * @function Phaser.GameObjects.BuildGameObjectAnimation\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Sprite} sprite - The sprite to add an Animation component to.\r\n * @param {object} config - The animation config.\r\n *\r\n * @return {Phaser.GameObjects.Sprite} The updated Sprite.\r\n */\r\nvar BuildGameObjectAnimation = function (sprite, config)\r\n{\r\n    var animConfig = GetAdvancedValue(config, 'anims', null);\r\n\r\n    if (animConfig === null)\r\n    {\r\n        return sprite;\r\n    }\r\n\r\n    if (typeof animConfig === 'string')\r\n    {\r\n        //  { anims: 'key' }\r\n        sprite.anims.play(animConfig);\r\n    }\r\n    else if (typeof animConfig === 'object')\r\n    {\r\n        //  { anims: {\r\n        //              key: string\r\n        //              startFrame: [string|integer]\r\n        //              delay: [float]\r\n        //              repeat: [integer]\r\n        //              repeatDelay: [float]\r\n        //              yoyo: [boolean]\r\n        //              play: [boolean]\r\n        //              delayedPlay: [boolean]\r\n        //           }\r\n        //  }\r\n\r\n        var anims = sprite.anims;\r\n\r\n        var key = GetAdvancedValue(animConfig, 'key', undefined);\r\n        var startFrame = GetAdvancedValue(animConfig, 'startFrame', undefined);\r\n\r\n        var delay = GetAdvancedValue(animConfig, 'delay', 0);\r\n        var repeat = GetAdvancedValue(animConfig, 'repeat', 0);\r\n        var repeatDelay = GetAdvancedValue(animConfig, 'repeatDelay', 0);\r\n        var yoyo = GetAdvancedValue(animConfig, 'yoyo', false);\r\n\r\n        var play = GetAdvancedValue(animConfig, 'play', false);\r\n        var delayedPlay = GetAdvancedValue(animConfig, 'delayedPlay', 0);\r\n\r\n        anims.setDelay(delay);\r\n        anims.setRepeat(repeat);\r\n        anims.setRepeatDelay(repeatDelay);\r\n        anims.setYoyo(yoyo);\r\n\r\n        if (play)\r\n        {\r\n            anims.play(key, startFrame);\r\n        }\r\n        else if (delayedPlay > 0)\r\n        {\r\n            anims.delayedPlay(delayedPlay, key, startFrame);\r\n        }\r\n        else\r\n        {\r\n            anims.load(key);\r\n        }\r\n    }\r\n\r\n    return sprite;\r\n};\r\n\r\nmodule.exports = BuildGameObjectAnimation;\r\n"]},"metadata":{},"sourceType":"script"}