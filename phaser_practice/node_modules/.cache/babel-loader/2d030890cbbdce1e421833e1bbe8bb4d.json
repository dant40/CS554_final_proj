{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Class = require('../utils/Class');\n/**\r\n * @classdesc\r\n * A single frame in an Animation sequence.\r\n *\r\n * An AnimationFrame consists of a reference to the Texture it uses for rendering, references to other\r\n * frames in the animation, and index data. It also has the ability to modify the animation timing.\r\n *\r\n * AnimationFrames are generated automatically by the Animation class.\r\n *\r\n * @class AnimationFrame\r\n * @memberof Phaser.Animations\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {string} textureKey - The key of the Texture this AnimationFrame uses.\r\n * @param {(string|integer)} textureFrame - The key of the Frame within the Texture that this AnimationFrame uses.\r\n * @param {integer} index - The index of this AnimationFrame within the Animation sequence.\r\n * @param {Phaser.Textures.Frame} frame - A reference to the Texture Frame this AnimationFrame uses for rendering.\r\n */\n\n\nvar AnimationFrame = new Class({\n  initialize: function AnimationFrame(textureKey, textureFrame, index, frame) {\n    /**\r\n     * The key of the Texture this AnimationFrame uses.\r\n     *\r\n     * @name Phaser.Animations.AnimationFrame#textureKey\r\n     * @type {string}\r\n     * @since 3.0.0\r\n     */\n    this.textureKey = textureKey;\n    /**\r\n     * The key of the Frame within the Texture that this AnimationFrame uses.\r\n     *\r\n     * @name Phaser.Animations.AnimationFrame#textureFrame\r\n     * @type {(string|integer)}\r\n     * @since 3.0.0\r\n     */\n\n    this.textureFrame = textureFrame;\n    /**\r\n     * The index of this AnimationFrame within the Animation sequence.\r\n     *\r\n     * @name Phaser.Animations.AnimationFrame#index\r\n     * @type {integer}\r\n     * @since 3.0.0\r\n     */\n\n    this.index = index;\n    /**\r\n     * A reference to the Texture Frame this AnimationFrame uses for rendering.\r\n     *\r\n     * @name Phaser.Animations.AnimationFrame#frame\r\n     * @type {Phaser.Textures.Frame}\r\n     * @since 3.0.0\r\n     */\n\n    this.frame = frame;\n    /**\r\n     * Is this the first frame in an animation sequence?\r\n     *\r\n     * @name Phaser.Animations.AnimationFrame#isFirst\r\n     * @type {boolean}\r\n     * @default false\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\n\n    this.isFirst = false;\n    /**\r\n     * Is this the last frame in an animation sequence?\r\n     *\r\n     * @name Phaser.Animations.AnimationFrame#isLast\r\n     * @type {boolean}\r\n     * @default false\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\n\n    this.isLast = false;\n    /**\r\n     * A reference to the AnimationFrame that comes before this one in the animation, if any.\r\n     *\r\n     * @name Phaser.Animations.AnimationFrame#prevFrame\r\n     * @type {?Phaser.Animations.AnimationFrame}\r\n     * @default null\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\n\n    this.prevFrame = null;\n    /**\r\n     * A reference to the AnimationFrame that comes after this one in the animation, if any.\r\n     *\r\n     * @name Phaser.Animations.AnimationFrame#nextFrame\r\n     * @type {?Phaser.Animations.AnimationFrame}\r\n     * @default null\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\n\n    this.nextFrame = null;\n    /**\r\n     * Additional time (in ms) that this frame should appear for during playback.\r\n     * The value is added onto the msPerFrame set by the animation.\r\n     *\r\n     * @name Phaser.Animations.AnimationFrame#duration\r\n     * @type {number}\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\n\n    this.duration = 0;\n    /**\r\n     * What % through the animation does this frame come?\r\n     * This value is generated when the animation is created and cached here.\r\n     *\r\n     * @name Phaser.Animations.AnimationFrame#progress\r\n     * @type {number}\r\n     * @default 0\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\n\n    this.progress = 0;\n  },\n\n  /**\r\n   * Generates a JavaScript object suitable for converting to JSON.\r\n   *\r\n   * @method Phaser.Animations.AnimationFrame#toJSON\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.Types.Animations.JSONAnimationFrame} The AnimationFrame data.\r\n   */\n  toJSON: function () {\n    return {\n      key: this.textureKey,\n      frame: this.textureFrame,\n      duration: this.duration\n    };\n  },\n\n  /**\r\n   * Destroys this object by removing references to external resources and callbacks.\r\n   *\r\n   * @method Phaser.Animations.AnimationFrame#destroy\r\n   * @since 3.0.0\r\n   */\n  destroy: function () {\n    this.frame = undefined;\n  }\n});\nmodule.exports = AnimationFrame;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/animations/AnimationFrame.js"],"names":["Class","require","AnimationFrame","initialize","textureKey","textureFrame","index","frame","isFirst","isLast","prevFrame","nextFrame","duration","progress","toJSON","key","destroy","undefined","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAIC,cAAc,GAAG,IAAIF,KAAJ,CAAU;AAE3BG,EAAAA,UAAU,EAEV,SAASD,cAAT,CAAyBE,UAAzB,EAAqCC,YAArC,EAAmDC,KAAnD,EAA0DC,KAA1D,EACA;AACI;;;;;;;AAOA,SAAKH,UAAL,GAAkBA,UAAlB;AAEA;;;;;;;;AAOA,SAAKC,YAAL,GAAoBA,YAApB;AAEA;;;;;;;;AAOA,SAAKC,KAAL,GAAaA,KAAb;AAEA;;;;;;;;AAOA,SAAKC,KAAL,GAAaA,KAAb;AAEA;;;;;;;;;;AASA,SAAKC,OAAL,GAAe,KAAf;AAEA;;;;;;;;;;AASA,SAAKC,MAAL,GAAc,KAAd;AAEA;;;;;;;;;;AASA,SAAKC,SAAL,GAAiB,IAAjB;AAEA;;;;;;;;;;AASA,SAAKC,SAAL,GAAiB,IAAjB;AAEA;;;;;;;;;;AASA,SAAKC,QAAL,GAAgB,CAAhB;AAEA;;;;;;;;;;;AAUA,SAAKC,QAAL,GAAgB,CAAhB;AACH,GA5G0B;;AA8G3B;;;;;;;;AAQAC,EAAAA,MAAM,EAAE,YACR;AACI,WAAO;AACHC,MAAAA,GAAG,EAAE,KAAKX,UADP;AAEHG,MAAAA,KAAK,EAAE,KAAKF,YAFT;AAGHO,MAAAA,QAAQ,EAAE,KAAKA;AAHZ,KAAP;AAKH,GA7H0B;;AA+H3B;;;;;;AAMAI,EAAAA,OAAO,EAAE,YACT;AACI,SAAKT,KAAL,GAAaU,SAAb;AACH;AAxI0B,CAAV,CAArB;AA4IAC,MAAM,CAACC,OAAP,GAAiBjB,cAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\n\r\n/**\r\n * @classdesc\r\n * A single frame in an Animation sequence.\r\n *\r\n * An AnimationFrame consists of a reference to the Texture it uses for rendering, references to other\r\n * frames in the animation, and index data. It also has the ability to modify the animation timing.\r\n *\r\n * AnimationFrames are generated automatically by the Animation class.\r\n *\r\n * @class AnimationFrame\r\n * @memberof Phaser.Animations\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {string} textureKey - The key of the Texture this AnimationFrame uses.\r\n * @param {(string|integer)} textureFrame - The key of the Frame within the Texture that this AnimationFrame uses.\r\n * @param {integer} index - The index of this AnimationFrame within the Animation sequence.\r\n * @param {Phaser.Textures.Frame} frame - A reference to the Texture Frame this AnimationFrame uses for rendering.\r\n */\r\nvar AnimationFrame = new Class({\r\n\r\n    initialize:\r\n\r\n    function AnimationFrame (textureKey, textureFrame, index, frame)\r\n    {\r\n        /**\r\n         * The key of the Texture this AnimationFrame uses.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#textureKey\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.textureKey = textureKey;\r\n\r\n        /**\r\n         * The key of the Frame within the Texture that this AnimationFrame uses.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#textureFrame\r\n         * @type {(string|integer)}\r\n         * @since 3.0.0\r\n         */\r\n        this.textureFrame = textureFrame;\r\n\r\n        /**\r\n         * The index of this AnimationFrame within the Animation sequence.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#index\r\n         * @type {integer}\r\n         * @since 3.0.0\r\n         */\r\n        this.index = index;\r\n\r\n        /**\r\n         * A reference to the Texture Frame this AnimationFrame uses for rendering.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#frame\r\n         * @type {Phaser.Textures.Frame}\r\n         * @since 3.0.0\r\n         */\r\n        this.frame = frame;\r\n\r\n        /**\r\n         * Is this the first frame in an animation sequence?\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#isFirst\r\n         * @type {boolean}\r\n         * @default false\r\n         * @readonly\r\n         * @since 3.0.0\r\n         */\r\n        this.isFirst = false;\r\n\r\n        /**\r\n         * Is this the last frame in an animation sequence?\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#isLast\r\n         * @type {boolean}\r\n         * @default false\r\n         * @readonly\r\n         * @since 3.0.0\r\n         */\r\n        this.isLast = false;\r\n\r\n        /**\r\n         * A reference to the AnimationFrame that comes before this one in the animation, if any.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#prevFrame\r\n         * @type {?Phaser.Animations.AnimationFrame}\r\n         * @default null\r\n         * @readonly\r\n         * @since 3.0.0\r\n         */\r\n        this.prevFrame = null;\r\n\r\n        /**\r\n         * A reference to the AnimationFrame that comes after this one in the animation, if any.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#nextFrame\r\n         * @type {?Phaser.Animations.AnimationFrame}\r\n         * @default null\r\n         * @readonly\r\n         * @since 3.0.0\r\n         */\r\n        this.nextFrame = null;\r\n\r\n        /**\r\n         * Additional time (in ms) that this frame should appear for during playback.\r\n         * The value is added onto the msPerFrame set by the animation.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#duration\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.duration = 0;\r\n\r\n        /**\r\n         * What % through the animation does this frame come?\r\n         * This value is generated when the animation is created and cached here.\r\n         *\r\n         * @name Phaser.Animations.AnimationFrame#progress\r\n         * @type {number}\r\n         * @default 0\r\n         * @readonly\r\n         * @since 3.0.0\r\n         */\r\n        this.progress = 0;\r\n    },\r\n\r\n    /**\r\n     * Generates a JavaScript object suitable for converting to JSON.\r\n     *\r\n     * @method Phaser.Animations.AnimationFrame#toJSON\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Types.Animations.JSONAnimationFrame} The AnimationFrame data.\r\n     */\r\n    toJSON: function ()\r\n    {\r\n        return {\r\n            key: this.textureKey,\r\n            frame: this.textureFrame,\r\n            duration: this.duration\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Destroys this object by removing references to external resources and callbacks.\r\n     *\r\n     * @method Phaser.Animations.AnimationFrame#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.frame = undefined;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = AnimationFrame;\r\n"]},"metadata":{},"sourceType":"script"}