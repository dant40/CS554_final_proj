{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Check to see if the Circle contains the given x / y coordinates.\r\n *\r\n * @function Phaser.Geom.Circle.Contains\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to check.\r\n * @param {number} x - The x coordinate to check within the circle.\r\n * @param {number} y - The y coordinate to check within the circle.\r\n *\r\n * @return {boolean} True if the coordinates are within the circle, otherwise false.\r\n */\nvar Contains = function (circle, x, y) {\n  //  Check if x/y are within the bounds first\n  if (circle.radius > 0 && x >= circle.left && x <= circle.right && y >= circle.top && y <= circle.bottom) {\n    var dx = (circle.x - x) * (circle.x - x);\n    var dy = (circle.y - y) * (circle.y - y);\n    return dx + dy <= circle.radius * circle.radius;\n  } else {\n    return false;\n  }\n};\n\nmodule.exports = Contains;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/circle/Contains.js"],"names":["Contains","circle","x","y","radius","left","right","top","bottom","dx","dy","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;AAYA,IAAIA,QAAQ,GAAG,UAAUC,MAAV,EAAkBC,CAAlB,EAAqBC,CAArB,EACf;AACI;AACA,MAAIF,MAAM,CAACG,MAAP,GAAgB,CAAhB,IAAqBF,CAAC,IAAID,MAAM,CAACI,IAAjC,IAAyCH,CAAC,IAAID,MAAM,CAACK,KAArD,IAA8DH,CAAC,IAAIF,MAAM,CAACM,GAA1E,IAAiFJ,CAAC,IAAIF,MAAM,CAACO,MAAjG,EACA;AACI,QAAIC,EAAE,GAAG,CAACR,MAAM,CAACC,CAAP,GAAWA,CAAZ,KAAkBD,MAAM,CAACC,CAAP,GAAWA,CAA7B,CAAT;AACA,QAAIQ,EAAE,GAAG,CAACT,MAAM,CAACE,CAAP,GAAWA,CAAZ,KAAkBF,MAAM,CAACE,CAAP,GAAWA,CAA7B,CAAT;AAEA,WAAQM,EAAE,GAAGC,EAAN,IAAcT,MAAM,CAACG,MAAP,GAAgBH,MAAM,CAACG,MAA5C;AACH,GAND,MAQA;AACI,WAAO,KAAP;AACH;AACJ,CAdD;;AAgBAO,MAAM,CAACC,OAAP,GAAiBZ,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Check to see if the Circle contains the given x / y coordinates.\r\n *\r\n * @function Phaser.Geom.Circle.Contains\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to check.\r\n * @param {number} x - The x coordinate to check within the circle.\r\n * @param {number} y - The y coordinate to check within the circle.\r\n *\r\n * @return {boolean} True if the coordinates are within the circle, otherwise false.\r\n */\r\nvar Contains = function (circle, x, y)\r\n{\r\n    //  Check if x/y are within the bounds first\r\n    if (circle.radius > 0 && x >= circle.left && x <= circle.right && y >= circle.top && y <= circle.bottom)\r\n    {\r\n        var dx = (circle.x - x) * (circle.x - x);\r\n        var dy = (circle.y - y) * (circle.y - y);\r\n\r\n        return (dx + dy) <= (circle.radius * circle.radius);\r\n    }\r\n    else\r\n    {\r\n        return false;\r\n    }\r\n};\r\n\r\nmodule.exports = Contains;\r\n"]},"metadata":{},"sourceType":"script"}