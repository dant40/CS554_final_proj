{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar BitmapText = require('./BitmapText');\n\nvar BuildGameObject = require('../../BuildGameObject');\n\nvar GameObjectCreator = require('../../GameObjectCreator');\n\nvar GetAdvancedValue = require('../../../utils/object/GetAdvancedValue');\n\nvar GetValue = require('../../../utils/object/GetValue');\n/**\r\n * Creates a new Bitmap Text Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Bitmap Text Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#bitmapText\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Types.GameObjects.BitmapText.BitmapTextConfig} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n * \r\n * @return {Phaser.GameObjects.BitmapText} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('bitmapText', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  }\n\n  var font = GetValue(config, 'font', '');\n  var text = GetAdvancedValue(config, 'text', '');\n  var size = GetAdvancedValue(config, 'size', false);\n  var align = GetValue(config, 'align', 0);\n  var bitmapText = new BitmapText(this.scene, 0, 0, font, text, size, align);\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  BuildGameObject(this.scene, bitmapText, config);\n  return bitmapText;\n}); //  When registering a factory function 'this' refers to the GameObjectCreator context.","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextCreator.js"],"names":["BitmapText","require","BuildGameObject","GameObjectCreator","GetAdvancedValue","GetValue","register","config","addToScene","undefined","font","text","size","align","bitmapText","scene","add"],"mappings":"AAAA;;;;;AAMA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,uBAAD,CAA7B;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,yBAAD,CAA/B;;AACA,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,wCAAD,CAA9B;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,gCAAD,CAAtB;AAEA;;;;;;;;;;;;;;;AAaAE,iBAAiB,CAACG,QAAlB,CAA2B,YAA3B,EAAyC,UAAUC,MAAV,EAAkBC,UAAlB,EACzC;AACI,MAAID,MAAM,KAAKE,SAAf,EAA0B;AAAEF,IAAAA,MAAM,GAAG,EAAT;AAAc;;AAE1C,MAAIG,IAAI,GAAGL,QAAQ,CAACE,MAAD,EAAS,MAAT,EAAiB,EAAjB,CAAnB;AACA,MAAII,IAAI,GAAGP,gBAAgB,CAACG,MAAD,EAAS,MAAT,EAAiB,EAAjB,CAA3B;AACA,MAAIK,IAAI,GAAGR,gBAAgB,CAACG,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAA3B;AACA,MAAIM,KAAK,GAAGR,QAAQ,CAACE,MAAD,EAAS,OAAT,EAAkB,CAAlB,CAApB;AAEA,MAAIO,UAAU,GAAG,IAAId,UAAJ,CAAe,KAAKe,KAApB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCL,IAAjC,EAAuCC,IAAvC,EAA6CC,IAA7C,EAAmDC,KAAnD,CAAjB;;AAEA,MAAIL,UAAU,KAAKC,SAAnB,EACA;AACIF,IAAAA,MAAM,CAACS,GAAP,GAAaR,UAAb;AACH;;AAEDN,EAAAA,eAAe,CAAC,KAAKa,KAAN,EAAaD,UAAb,EAAyBP,MAAzB,CAAf;AAEA,SAAOO,UAAP;AACH,CAnBD,E,CAqBA","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar BitmapText = require('./BitmapText');\r\nvar BuildGameObject = require('../../BuildGameObject');\r\nvar GameObjectCreator = require('../../GameObjectCreator');\r\nvar GetAdvancedValue = require('../../../utils/object/GetAdvancedValue');\r\nvar GetValue = require('../../../utils/object/GetValue');\r\n\r\n/**\r\n * Creates a new Bitmap Text Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Bitmap Text Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#bitmapText\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Types.GameObjects.BitmapText.BitmapTextConfig} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n * \r\n * @return {Phaser.GameObjects.BitmapText} The Game Object that was created.\r\n */\r\nGameObjectCreator.register('bitmapText', function (config, addToScene)\r\n{\r\n    if (config === undefined) { config = {}; }\r\n\r\n    var font = GetValue(config, 'font', '');\r\n    var text = GetAdvancedValue(config, 'text', '');\r\n    var size = GetAdvancedValue(config, 'size', false);\r\n    var align = GetValue(config, 'align', 0);\r\n\r\n    var bitmapText = new BitmapText(this.scene, 0, 0, font, text, size, align);\r\n\r\n    if (addToScene !== undefined)\r\n    {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    BuildGameObject(this.scene, bitmapText, config);\r\n\r\n    return bitmapText;\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectCreator context.\r\n"]},"metadata":{},"sourceType":"script"}