{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Creates an XHRSettings Object with default values.\r\n *\r\n * @function Phaser.Loader.XHRSettings\r\n * @since 3.0.0\r\n *\r\n * @param {XMLHttpRequestResponseType} [responseType=''] - The responseType, such as 'text'.\r\n * @param {boolean} [async=true] - Should the XHR request use async or not?\r\n * @param {string} [user=''] - Optional username for the XHR request.\r\n * @param {string} [password=''] - Optional password for the XHR request.\r\n * @param {integer} [timeout=0] - Optional XHR timeout value.\r\n *\r\n * @return {Phaser.Types.Loader.XHRSettingsObject} The XHRSettings object as used by the Loader.\r\n */\nvar XHRSettings = function (responseType, async, user, password, timeout) {\n  if (responseType === undefined) {\n    responseType = '';\n  }\n\n  if (async === undefined) {\n    async = true;\n  }\n\n  if (user === undefined) {\n    user = '';\n  }\n\n  if (password === undefined) {\n    password = '';\n  }\n\n  if (timeout === undefined) {\n    timeout = 0;\n  } // Before sending a request, set the xhr.responseType to \"text\",\n  // \"arraybuffer\", \"blob\", or \"document\", depending on your data needs.\n  // Note, setting xhr.responseType = '' (or omitting) will default the response to \"text\".\n\n\n  return {\n    //  Ignored by the Loader, only used by File.\n    responseType: responseType,\n    async: async,\n    //  credentials\n    user: user,\n    password: password,\n    //  timeout in ms (0 = no timeout)\n    timeout: timeout,\n    //  setRequestHeader\n    header: undefined,\n    headerValue: undefined,\n    requestedWith: false,\n    //  overrideMimeType\n    overrideMimeType: undefined\n  };\n};\n\nmodule.exports = XHRSettings;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/loader/XHRSettings.js"],"names":["XHRSettings","responseType","async","user","password","timeout","undefined","header","headerValue","requestedWith","overrideMimeType","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;AAcA,IAAIA,WAAW,GAAG,UAAUC,YAAV,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,QAArC,EAA+CC,OAA/C,EAClB;AACI,MAAIJ,YAAY,KAAKK,SAArB,EAAgC;AAAEL,IAAAA,YAAY,GAAG,EAAf;AAAoB;;AACtD,MAAIC,KAAK,KAAKI,SAAd,EAAyB;AAAEJ,IAAAA,KAAK,GAAG,IAAR;AAAe;;AAC1C,MAAIC,IAAI,KAAKG,SAAb,EAAwB;AAAEH,IAAAA,IAAI,GAAG,EAAP;AAAY;;AACtC,MAAIC,QAAQ,KAAKE,SAAjB,EAA4B;AAAEF,IAAAA,QAAQ,GAAG,EAAX;AAAgB;;AAC9C,MAAIC,OAAO,KAAKC,SAAhB,EAA2B;AAAED,IAAAA,OAAO,GAAG,CAAV;AAAc,GAL/C,CAOI;AACA;AACA;;;AAEA,SAAO;AAEH;AACAJ,IAAAA,YAAY,EAAEA,YAHX;AAKHC,IAAAA,KAAK,EAAEA,KALJ;AAOH;AACAC,IAAAA,IAAI,EAAEA,IARH;AASHC,IAAAA,QAAQ,EAAEA,QATP;AAWH;AACAC,IAAAA,OAAO,EAAEA,OAZN;AAcH;AACAE,IAAAA,MAAM,EAAED,SAfL;AAgBHE,IAAAA,WAAW,EAAEF,SAhBV;AAiBHG,IAAAA,aAAa,EAAE,KAjBZ;AAmBH;AACAC,IAAAA,gBAAgB,EAAEJ;AApBf,GAAP;AAuBH,CAnCD;;AAqCAK,MAAM,CAACC,OAAP,GAAiBZ,WAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Creates an XHRSettings Object with default values.\r\n *\r\n * @function Phaser.Loader.XHRSettings\r\n * @since 3.0.0\r\n *\r\n * @param {XMLHttpRequestResponseType} [responseType=''] - The responseType, such as 'text'.\r\n * @param {boolean} [async=true] - Should the XHR request use async or not?\r\n * @param {string} [user=''] - Optional username for the XHR request.\r\n * @param {string} [password=''] - Optional password for the XHR request.\r\n * @param {integer} [timeout=0] - Optional XHR timeout value.\r\n *\r\n * @return {Phaser.Types.Loader.XHRSettingsObject} The XHRSettings object as used by the Loader.\r\n */\r\nvar XHRSettings = function (responseType, async, user, password, timeout)\r\n{\r\n    if (responseType === undefined) { responseType = ''; }\r\n    if (async === undefined) { async = true; }\r\n    if (user === undefined) { user = ''; }\r\n    if (password === undefined) { password = ''; }\r\n    if (timeout === undefined) { timeout = 0; }\r\n\r\n    // Before sending a request, set the xhr.responseType to \"text\",\r\n    // \"arraybuffer\", \"blob\", or \"document\", depending on your data needs.\r\n    // Note, setting xhr.responseType = '' (or omitting) will default the response to \"text\".\r\n\r\n    return {\r\n\r\n        //  Ignored by the Loader, only used by File.\r\n        responseType: responseType,\r\n\r\n        async: async,\r\n\r\n        //  credentials\r\n        user: user,\r\n        password: password,\r\n\r\n        //  timeout in ms (0 = no timeout)\r\n        timeout: timeout,\r\n\r\n        //  setRequestHeader\r\n        header: undefined,\r\n        headerValue: undefined,\r\n        requestedWith: false,\r\n\r\n        //  overrideMimeType\r\n        overrideMimeType: undefined\r\n\r\n    };\r\n};\r\n\r\nmodule.exports = XHRSettings;\r\n"]},"metadata":{},"sourceType":"script"}