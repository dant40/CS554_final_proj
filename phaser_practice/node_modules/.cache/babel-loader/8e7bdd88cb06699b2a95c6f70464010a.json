{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Angle = require('./Angle');\n\nvar NormalAngle = require('./NormalAngle');\n/**\r\n * Calculate the reflected angle between two lines.\r\n *\r\n * This is the outgoing angle based on the angle of Line 1 and the normalAngle of Line 2.\r\n *\r\n * @function Phaser.Geom.Line.ReflectAngle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} lineA - The first line.\r\n * @param {Phaser.Geom.Line} lineB - The second line.\r\n *\r\n * @return {number} The reflected angle between each line.\r\n */\n\n\nvar ReflectAngle = function (lineA, lineB) {\n  return 2 * NormalAngle(lineB) - Math.PI - Angle(lineA);\n};\n\nmodule.exports = ReflectAngle;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/line/ReflectAngle.js"],"names":["Angle","require","NormalAngle","ReflectAngle","lineA","lineB","Math","PI","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;AAEA;;;;;;;;;;;;;;;AAaA,IAAIE,YAAY,GAAG,UAAUC,KAAV,EAAiBC,KAAjB,EACnB;AACI,SAAQ,IAAIH,WAAW,CAACG,KAAD,CAAf,GAAyBC,IAAI,CAACC,EAA9B,GAAmCP,KAAK,CAACI,KAAD,CAAhD;AACH,CAHD;;AAKAI,MAAM,CAACC,OAAP,GAAiBN,YAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Angle = require('./Angle');\r\nvar NormalAngle = require('./NormalAngle');\r\n\r\n/**\r\n * Calculate the reflected angle between two lines.\r\n *\r\n * This is the outgoing angle based on the angle of Line 1 and the normalAngle of Line 2.\r\n *\r\n * @function Phaser.Geom.Line.ReflectAngle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} lineA - The first line.\r\n * @param {Phaser.Geom.Line} lineB - The second line.\r\n *\r\n * @return {number} The reflected angle between each line.\r\n */\r\nvar ReflectAngle = function (lineA, lineB)\r\n{\r\n    return (2 * NormalAngle(lineB) - Math.PI - Angle(lineA));\r\n};\r\n\r\nmodule.exports = ReflectAngle;\r\n"]},"metadata":{},"sourceType":"script"}