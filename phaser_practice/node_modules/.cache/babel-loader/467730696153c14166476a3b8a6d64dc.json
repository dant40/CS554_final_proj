{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar RESERVED = require('../tween/ReservedProps');\n/**\r\n * Internal function used by the Tween Builder to return an array of properties\r\n * that the Tween will be operating on. It takes a tween configuration object\r\n * and then checks that none of the `props` entries start with an underscore, or that\r\n * none of the direct properties are on the Reserved list.\r\n *\r\n * @function Phaser.Tweens.Builders.GetProps\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Types.Tweens.TweenBuilderConfig} config - The configuration object of the Tween to get the properties from.\r\n *\r\n * @return {string[]} An array of all the properties the tween will operate on.\r\n */\n\n\nvar GetProps = function (config) {\n  var key;\n  var keys = []; //  First see if we have a props object\n\n  if (config.hasOwnProperty('props')) {\n    for (key in config.props) {\n      //  Skip any property that starts with an underscore\n      if (key.substr(0, 1) !== '_') {\n        keys.push({\n          key: key,\n          value: config.props[key]\n        });\n      }\n    }\n  } else {\n    for (key in config) {\n      //  Skip any property that is in the ReservedProps list or that starts with an underscore\n      if (RESERVED.indexOf(key) === -1 && key.substr(0, 1) !== '_') {\n        keys.push({\n          key: key,\n          value: config[key]\n        });\n      }\n    }\n  }\n\n  return keys;\n};\n\nmodule.exports = GetProps;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/tweens/builders/GetProps.js"],"names":["RESERVED","require","GetProps","config","key","keys","hasOwnProperty","props","substr","push","value","indexOf","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAtB;AAEA;;;;;;;;;;;;;;;AAaA,IAAIC,QAAQ,GAAG,UAAUC,MAAV,EACf;AACI,MAAIC,GAAJ;AACA,MAAIC,IAAI,GAAG,EAAX,CAFJ,CAII;;AAEA,MAAIF,MAAM,CAACG,cAAP,CAAsB,OAAtB,CAAJ,EACA;AACI,SAAKF,GAAL,IAAYD,MAAM,CAACI,KAAnB,EACA;AACI;AACA,UAAIH,GAAG,CAACI,MAAJ,CAAW,CAAX,EAAc,CAAd,MAAqB,GAAzB,EACA;AACIH,QAAAA,IAAI,CAACI,IAAL,CAAU;AAAEL,UAAAA,GAAG,EAAEA,GAAP;AAAYM,UAAAA,KAAK,EAAEP,MAAM,CAACI,KAAP,CAAaH,GAAb;AAAnB,SAAV;AACH;AACJ;AACJ,GAVD,MAYA;AACI,SAAKA,GAAL,IAAYD,MAAZ,EACA;AACI;AACA,UAAIH,QAAQ,CAACW,OAAT,CAAiBP,GAAjB,MAA0B,CAAC,CAA3B,IAAgCA,GAAG,CAACI,MAAJ,CAAW,CAAX,EAAc,CAAd,MAAqB,GAAzD,EACA;AACIH,QAAAA,IAAI,CAACI,IAAL,CAAU;AAAEL,UAAAA,GAAG,EAAEA,GAAP;AAAYM,UAAAA,KAAK,EAAEP,MAAM,CAACC,GAAD;AAAzB,SAAV;AACH;AACJ;AACJ;;AAED,SAAOC,IAAP;AACH,CA/BD;;AAiCAO,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar RESERVED = require('../tween/ReservedProps');\r\n\r\n/**\r\n * Internal function used by the Tween Builder to return an array of properties\r\n * that the Tween will be operating on. It takes a tween configuration object\r\n * and then checks that none of the `props` entries start with an underscore, or that\r\n * none of the direct properties are on the Reserved list.\r\n *\r\n * @function Phaser.Tweens.Builders.GetProps\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Types.Tweens.TweenBuilderConfig} config - The configuration object of the Tween to get the properties from.\r\n *\r\n * @return {string[]} An array of all the properties the tween will operate on.\r\n */\r\nvar GetProps = function (config)\r\n{\r\n    var key;\r\n    var keys = [];\r\n\r\n    //  First see if we have a props object\r\n\r\n    if (config.hasOwnProperty('props'))\r\n    {\r\n        for (key in config.props)\r\n        {\r\n            //  Skip any property that starts with an underscore\r\n            if (key.substr(0, 1) !== '_')\r\n            {\r\n                keys.push({ key: key, value: config.props[key] });\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        for (key in config)\r\n        {\r\n            //  Skip any property that is in the ReservedProps list or that starts with an underscore\r\n            if (RESERVED.indexOf(key) === -1 && key.substr(0, 1) !== '_')\r\n            {\r\n                keys.push({ key: key, value: config[key] });\r\n            }\r\n        }\r\n    }\r\n\r\n    return keys;\r\n};\r\n\r\nmodule.exports = GetProps;\r\n"]},"metadata":{},"sourceType":"script"}