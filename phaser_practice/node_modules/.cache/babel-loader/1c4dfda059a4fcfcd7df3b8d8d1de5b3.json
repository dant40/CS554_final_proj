{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar SpliceOne = require('./SpliceOne');\n/**\r\n * Removes the item from the given position in the array.\r\n * \r\n * The array is modified in-place.\r\n * \r\n * You can optionally specify a callback to be invoked for the item if it is successfully removed from the array.\r\n *\r\n * @function Phaser.Utils.Array.RemoveAt\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to be modified.\r\n * @param {integer} index - The array index to remove the item from. The index must be in bounds or it will throw an error.\r\n * @param {function} [callback] - A callback to be invoked for the item removed from the array.\r\n * @param {object} [context] - The context in which the callback is invoked.\r\n *\r\n * @return {*} The item that was removed.\r\n */\n\n\nvar RemoveAt = function (array, index, callback, context) {\n  if (context === undefined) {\n    context = array;\n  }\n\n  if (index < 0 || index > array.length - 1) {\n    throw new Error('Index out of bounds');\n  }\n\n  var item = SpliceOne(array, index);\n\n  if (callback) {\n    callback.call(context, item);\n  }\n\n  return item;\n};\n\nmodule.exports = RemoveAt;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/array/RemoveAt.js"],"names":["SpliceOne","require","RemoveAt","array","index","callback","context","undefined","length","Error","item","call","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;AAEA;;;;;;;;;;;;;;;;;;;AAiBA,IAAIC,QAAQ,GAAG,UAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,OAAlC,EACf;AACI,MAAIA,OAAO,KAAKC,SAAhB,EAA2B;AAAED,IAAAA,OAAO,GAAGH,KAAV;AAAkB;;AAE/C,MAAIC,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGD,KAAK,CAACK,MAAN,GAAe,CAAxC,EACA;AACI,UAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACH;;AAED,MAAIC,IAAI,GAAGV,SAAS,CAACG,KAAD,EAAQC,KAAR,CAApB;;AAEA,MAAIC,QAAJ,EACA;AACIA,IAAAA,QAAQ,CAACM,IAAT,CAAcL,OAAd,EAAuBI,IAAvB;AACH;;AAED,SAAOA,IAAP;AACH,CAjBD;;AAmBAE,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar SpliceOne = require('./SpliceOne');\r\n\r\n/**\r\n * Removes the item from the given position in the array.\r\n * \r\n * The array is modified in-place.\r\n * \r\n * You can optionally specify a callback to be invoked for the item if it is successfully removed from the array.\r\n *\r\n * @function Phaser.Utils.Array.RemoveAt\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to be modified.\r\n * @param {integer} index - The array index to remove the item from. The index must be in bounds or it will throw an error.\r\n * @param {function} [callback] - A callback to be invoked for the item removed from the array.\r\n * @param {object} [context] - The context in which the callback is invoked.\r\n *\r\n * @return {*} The item that was removed.\r\n */\r\nvar RemoveAt = function (array, index, callback, context)\r\n{\r\n    if (context === undefined) { context = array; }\r\n\r\n    if (index < 0 || index > array.length - 1)\r\n    {\r\n        throw new Error('Index out of bounds');\r\n    }\r\n\r\n    var item = SpliceOne(array, index);\r\n\r\n    if (callback)\r\n    {\r\n        callback.call(context, item);\r\n    }\r\n\r\n    return item;\r\n};\r\n\r\nmodule.exports = RemoveAt;\r\n"]},"metadata":{},"sourceType":"script"}