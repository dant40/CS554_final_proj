{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @author       samme <samme.npm@gmail.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Wrap = require('../math/Wrap');\n/**\r\n * Wrap each item's coordinates within a rectangle's area.\r\n *\r\n * @function Phaser.Actions.WrapInRectangle\r\n * @since 3.0.0\r\n * @see Phaser.Math.Wrap\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Rectangle} rect - The rectangle.\r\n * @param {number} [padding=0] - An amount added to each side of the rectangle during the operation.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\n\n\nvar WrapInRectangle = function (items, rect, padding) {\n  if (padding === undefined) {\n    padding = 0;\n  }\n\n  for (var i = 0; i < items.length; i++) {\n    var item = items[i];\n    item.x = Wrap(item.x, rect.left - padding, rect.right + padding);\n    item.y = Wrap(item.y, rect.top - padding, rect.bottom + padding);\n  }\n\n  return items;\n};\n\nmodule.exports = WrapInRectangle;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/actions/WrapInRectangle.js"],"names":["Wrap","require","WrapInRectangle","items","rect","padding","undefined","i","length","item","x","left","right","y","top","bottom","module","exports"],"mappings":"AAAA;;;;;;AAOA,IAAIA,IAAI,GAAGC,OAAO,CAAC,cAAD,CAAlB;AAEA;;;;;;;;;;;;;;;;;AAeA,IAAIC,eAAe,GAAG,UAAUC,KAAV,EAAiBC,IAAjB,EAAuBC,OAAvB,EACtB;AACI,MAAIA,OAAO,KAAKC,SAAhB,EACA;AACID,IAAAA,OAAO,GAAG,CAAV;AACH;;AAED,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EACA;AACI,QAAIE,IAAI,GAAGN,KAAK,CAACI,CAAD,CAAhB;AAEAE,IAAAA,IAAI,CAACC,CAAL,GAASV,IAAI,CAACS,IAAI,CAACC,CAAN,EAASN,IAAI,CAACO,IAAL,GAAYN,OAArB,EAA8BD,IAAI,CAACQ,KAAL,GAAaP,OAA3C,CAAb;AACAI,IAAAA,IAAI,CAACI,CAAL,GAASb,IAAI,CAACS,IAAI,CAACI,CAAN,EAAST,IAAI,CAACU,GAAL,GAAWT,OAApB,EAA6BD,IAAI,CAACW,MAAL,GAAcV,OAA3C,CAAb;AACH;;AAED,SAAOF,KAAP;AACH,CAhBD;;AAkBAa,MAAM,CAACC,OAAP,GAAiBf,eAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @author       samme <samme.npm@gmail.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Wrap = require('../math/Wrap');\r\n\r\n/**\r\n * Wrap each item's coordinates within a rectangle's area.\r\n *\r\n * @function Phaser.Actions.WrapInRectangle\r\n * @since 3.0.0\r\n * @see Phaser.Math.Wrap\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Rectangle} rect - The rectangle.\r\n * @param {number} [padding=0] - An amount added to each side of the rectangle during the operation.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\r\nvar WrapInRectangle = function (items, rect, padding)\r\n{\r\n    if (padding === undefined)\r\n    {\r\n        padding = 0;\r\n    }\r\n\r\n    for (var i = 0; i < items.length; i++)\r\n    {\r\n        var item = items[i];\r\n\r\n        item.x = Wrap(item.x, rect.left - padding, rect.right + padding);\r\n        item.y = Wrap(item.y, rect.top - padding, rect.bottom + padding);\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = WrapInRectangle;\r\n"]},"metadata":{},"sourceType":"script"}