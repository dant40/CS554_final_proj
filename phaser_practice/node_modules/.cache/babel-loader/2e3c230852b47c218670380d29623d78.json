{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n\nvar Mesh = require('../mesh/Mesh');\n/**\r\n * @classdesc\r\n * A Quad Game Object.\r\n *\r\n * A Quad is a Mesh Game Object pre-configured with two triangles arranged into a rectangle, with a single\r\n * texture spread across them.\r\n *\r\n * You can manipulate the corner points of the quad via the getters and setters such as `topLeftX`, and also\r\n * change their alpha and color values. The quad itself can be moved by adjusting the `x` and `y` properties.\r\n *\r\n * @class Quad\r\n * @extends Phaser.GameObjects.Mesh\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @webglOnly\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Quad belongs.\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\n\n\nvar Quad = new Class({\n  Extends: Mesh,\n  initialize: function Quad(scene, x, y, texture, frame) {\n    //  0----3\n    //  |\\  B|\n    //  | \\  |\n    //  |  \\ |\n    //  | A \\|\n    //  |    \\\n    //  1----2\n    var vertices = [0, 0, // tl\n    0, 0, // bl\n    0, 0, // br\n    0, 0, // tl\n    0, 0, // br\n    0, 0 // tr\n    ];\n    var uv = [0, 0, // tl\n    0, 1, // bl\n    1, 1, // br\n    0, 0, // tl\n    1, 1, // br\n    1, 0 // tr\n    ];\n    var colors = [0xffffff, // tl\n    0xffffff, // bl\n    0xffffff, // br\n    0xffffff, // tl\n    0xffffff, // br\n    0xffffff // tr\n    ];\n    var alphas = [1, // tl\n    1, // bl\n    1, // br\n    1, // tl\n    1, // br\n    1 // tr\n    ];\n    Mesh.call(this, scene, x, y, vertices, uv, colors, alphas, texture, frame);\n    this.resetPosition();\n  },\n\n  /**\r\n   * Sets the frame this Game Object will use to render with.\r\n   *\r\n   * The Frame has to belong to the current Texture being used.\r\n   *\r\n   * It can be either a string or an index.\r\n   *\r\n   * Calling `setFrame` will modify the `width` and `height` properties of your Game Object.\r\n   * It will also change the `origin` if the Frame has a custom pivot point, as exported from packages like Texture Packer.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#setFrame\r\n   * @since 3.11.0\r\n   *\r\n   * @param {(string|integer)} frame - The name or index of the frame within the Texture.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setFrame: function (frame) {\n    this.frame = this.texture.get(frame);\n\n    if (!this.frame.cutWidth || !this.frame.cutHeight) {\n      this.renderFlags &= ~8;\n    } else {\n      this.renderFlags |= 8;\n    }\n\n    frame = this.frame; //   TL\n\n    this.uv[0] = frame.u0;\n    this.uv[1] = frame.v0; //   BL\n\n    this.uv[2] = frame.u0;\n    this.uv[3] = frame.v1; //   BR\n\n    this.uv[4] = frame.u1;\n    this.uv[5] = frame.v1; //   TL\n\n    this.uv[6] = frame.u0;\n    this.uv[7] = frame.v0; //   BR\n\n    this.uv[8] = frame.u1;\n    this.uv[9] = frame.v1; //   TR\n\n    this.uv[10] = frame.u1;\n    this.uv[11] = frame.v0;\n    return this;\n  },\n\n  /**\r\n   * The top-left x vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topLeftX\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topLeftX: {\n    get: function () {\n      return this.x + this.vertices[0];\n    },\n    set: function (value) {\n      this.vertices[0] = value - this.x;\n      this.vertices[6] = value - this.x;\n    }\n  },\n\n  /**\r\n   * The top-left y vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topLeftY\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topLeftY: {\n    get: function () {\n      return this.y + this.vertices[1];\n    },\n    set: function (value) {\n      this.vertices[1] = value - this.y;\n      this.vertices[7] = value - this.y;\n    }\n  },\n\n  /**\r\n   * The top-right x vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topRightX\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topRightX: {\n    get: function () {\n      return this.x + this.vertices[10];\n    },\n    set: function (value) {\n      this.vertices[10] = value - this.x;\n    }\n  },\n\n  /**\r\n   * The top-right y vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topRightY\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topRightY: {\n    get: function () {\n      return this.y + this.vertices[11];\n    },\n    set: function (value) {\n      this.vertices[11] = value - this.y;\n    }\n  },\n\n  /**\r\n   * The bottom-left x vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomLeftX\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomLeftX: {\n    get: function () {\n      return this.x + this.vertices[2];\n    },\n    set: function (value) {\n      this.vertices[2] = value - this.x;\n    }\n  },\n\n  /**\r\n   * The bottom-left y vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomLeftY\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomLeftY: {\n    get: function () {\n      return this.y + this.vertices[3];\n    },\n    set: function (value) {\n      this.vertices[3] = value - this.y;\n    }\n  },\n\n  /**\r\n   * The bottom-right x vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomRightX\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomRightX: {\n    get: function () {\n      return this.x + this.vertices[4];\n    },\n    set: function (value) {\n      this.vertices[4] = value - this.x;\n      this.vertices[8] = value - this.x;\n    }\n  },\n\n  /**\r\n   * The bottom-right y vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomRightY\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomRightY: {\n    get: function () {\n      return this.y + this.vertices[5];\n    },\n    set: function (value) {\n      this.vertices[5] = value - this.y;\n      this.vertices[9] = value - this.y;\n    }\n  },\n\n  /**\r\n   * The top-left alpha value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topLeftAlpha\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topLeftAlpha: {\n    get: function () {\n      return this.alphas[0];\n    },\n    set: function (value) {\n      this.alphas[0] = value;\n      this.alphas[3] = value;\n    }\n  },\n\n  /**\r\n   * The top-right alpha value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topRightAlpha\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topRightAlpha: {\n    get: function () {\n      return this.alphas[5];\n    },\n    set: function (value) {\n      this.alphas[5] = value;\n    }\n  },\n\n  /**\r\n   * The bottom-left alpha value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomLeftAlpha\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomLeftAlpha: {\n    get: function () {\n      return this.alphas[1];\n    },\n    set: function (value) {\n      this.alphas[1] = value;\n    }\n  },\n\n  /**\r\n   * The bottom-right alpha value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomRightAlpha\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomRightAlpha: {\n    get: function () {\n      return this.alphas[2];\n    },\n    set: function (value) {\n      this.alphas[2] = value;\n      this.alphas[4] = value;\n    }\n  },\n\n  /**\r\n   * The top-left color value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topLeftColor\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topLeftColor: {\n    get: function () {\n      return this.colors[0];\n    },\n    set: function (value) {\n      this.colors[0] = value;\n      this.colors[3] = value;\n    }\n  },\n\n  /**\r\n   * The top-right color value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topRightColor\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topRightColor: {\n    get: function () {\n      return this.colors[5];\n    },\n    set: function (value) {\n      this.colors[5] = value;\n    }\n  },\n\n  /**\r\n   * The bottom-left color value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomLeftColor\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomLeftColor: {\n    get: function () {\n      return this.colors[1];\n    },\n    set: function (value) {\n      this.colors[1] = value;\n    }\n  },\n\n  /**\r\n   * The bottom-right color value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomRightColor\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomRightColor: {\n    get: function () {\n      return this.colors[2];\n    },\n    set: function (value) {\n      this.colors[2] = value;\n      this.colors[4] = value;\n    }\n  },\n\n  /**\r\n   * Sets the top-left vertex position of this Quad.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#setTopLeft\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The horizontal coordinate of the vertex.\r\n   * @param {number} y - The vertical coordinate of the vertex.\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  setTopLeft: function (x, y) {\n    this.topLeftX = x;\n    this.topLeftY = y;\n    return this;\n  },\n\n  /**\r\n   * Sets the top-right vertex position of this Quad.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#setTopRight\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The horizontal coordinate of the vertex.\r\n   * @param {number} y - The vertical coordinate of the vertex.\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  setTopRight: function (x, y) {\n    this.topRightX = x;\n    this.topRightY = y;\n    return this;\n  },\n\n  /**\r\n   * Sets the bottom-left vertex position of this Quad.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#setBottomLeft\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The horizontal coordinate of the vertex.\r\n   * @param {number} y - The vertical coordinate of the vertex.\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  setBottomLeft: function (x, y) {\n    this.bottomLeftX = x;\n    this.bottomLeftY = y;\n    return this;\n  },\n\n  /**\r\n   * Sets the bottom-right vertex position of this Quad.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#setBottomRight\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The horizontal coordinate of the vertex.\r\n   * @param {number} y - The vertical coordinate of the vertex.\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  setBottomRight: function (x, y) {\n    this.bottomRightX = x;\n    this.bottomRightY = y;\n    return this;\n  },\n\n  /**\r\n   * Resets the positions of the four corner vertices of this Quad.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#resetPosition\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  resetPosition: function () {\n    var x = this.x;\n    var y = this.y;\n    var halfWidth = Math.floor(this.width / 2);\n    var halfHeight = Math.floor(this.height / 2);\n    this.setTopLeft(x - halfWidth, y - halfHeight);\n    this.setTopRight(x + halfWidth, y - halfHeight);\n    this.setBottomLeft(x - halfWidth, y + halfHeight);\n    this.setBottomRight(x + halfWidth, y + halfHeight);\n    return this;\n  },\n\n  /**\r\n   * Resets the alpha values used by this Quad back to 1.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#resetAlpha\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  resetAlpha: function () {\n    var alphas = this.alphas;\n    alphas[0] = 1;\n    alphas[1] = 1;\n    alphas[2] = 1;\n    alphas[3] = 1;\n    alphas[4] = 1;\n    alphas[5] = 1;\n    return this;\n  },\n\n  /**\r\n   * Resets the color values used by this Quad back to 0xffffff.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#resetColors\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  resetColors: function () {\n    var colors = this.colors;\n    colors[0] = 0xffffff;\n    colors[1] = 0xffffff;\n    colors[2] = 0xffffff;\n    colors[3] = 0xffffff;\n    colors[4] = 0xffffff;\n    colors[5] = 0xffffff;\n    return this;\n  },\n\n  /**\r\n   * Resets the position, alpha and color values used by this Quad.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#reset\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  reset: function () {\n    this.resetPosition();\n    this.resetAlpha();\n    return this.resetColors();\n  }\n});\nmodule.exports = Quad;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/quad/Quad.js"],"names":["Class","require","Mesh","Quad","Extends","initialize","scene","x","y","texture","frame","vertices","uv","colors","alphas","call","resetPosition","setFrame","get","cutWidth","cutHeight","renderFlags","u0","v0","v1","u1","topLeftX","set","value","topLeftY","topRightX","topRightY","bottomLeftX","bottomLeftY","bottomRightX","bottomRightY","topLeftAlpha","topRightAlpha","bottomLeftAlpha","bottomRightAlpha","topLeftColor","topRightColor","bottomLeftColor","bottomRightColor","setTopLeft","setTopRight","setBottomLeft","setBottomRight","halfWidth","Math","floor","width","halfHeight","height","resetAlpha","resetColors","reset","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Mesh = require('../mesh/Mesh');\r\n\r\n/**\r\n * @classdesc\r\n * A Quad Game Object.\r\n *\r\n * A Quad is a Mesh Game Object pre-configured with two triangles arranged into a rectangle, with a single\r\n * texture spread across them.\r\n *\r\n * You can manipulate the corner points of the quad via the getters and setters such as `topLeftX`, and also\r\n * change their alpha and color values. The quad itself can be moved by adjusting the `x` and `y` properties.\r\n *\r\n * @class Quad\r\n * @extends Phaser.GameObjects.Mesh\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @webglOnly\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Quad belongs.\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\r\nvar Quad = new Class({\r\n\r\n    Extends: Mesh,\r\n\r\n    initialize:\r\n\r\n    function Quad (scene, x, y, texture, frame)\r\n    {\r\n        //  0----3\r\n        //  |\\  B|\r\n        //  | \\  |\r\n        //  |  \\ |\r\n        //  | A \\|\r\n        //  |    \\\r\n        //  1----2\r\n\r\n        var vertices = [\r\n            0, 0, // tl\r\n            0, 0, // bl\r\n            0, 0, // br\r\n            0, 0, // tl\r\n            0, 0, // br\r\n            0, 0 // tr\r\n        ];\r\n\r\n        var uv = [\r\n            0, 0, // tl\r\n            0, 1, // bl\r\n            1, 1, // br\r\n            0, 0, // tl\r\n            1, 1, // br\r\n            1, 0 // tr\r\n        ];\r\n\r\n        var colors = [\r\n            0xffffff, // tl\r\n            0xffffff, // bl\r\n            0xffffff, // br\r\n            0xffffff, // tl\r\n            0xffffff, // br\r\n            0xffffff // tr\r\n        ];\r\n\r\n        var alphas = [\r\n            1, // tl\r\n            1, // bl\r\n            1, // br\r\n            1, // tl\r\n            1, // br\r\n            1 // tr\r\n        ];\r\n\r\n        Mesh.call(this, scene, x, y, vertices, uv, colors, alphas, texture, frame);\r\n\r\n        this.resetPosition();\r\n    },\r\n\r\n    /**\r\n     * Sets the frame this Game Object will use to render with.\r\n     *\r\n     * The Frame has to belong to the current Texture being used.\r\n     *\r\n     * It can be either a string or an index.\r\n     *\r\n     * Calling `setFrame` will modify the `width` and `height` properties of your Game Object.\r\n     * It will also change the `origin` if the Frame has a custom pivot point, as exported from packages like Texture Packer.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#setFrame\r\n     * @since 3.11.0\r\n     *\r\n     * @param {(string|integer)} frame - The name or index of the frame within the Texture.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFrame: function (frame)\r\n    {\r\n        this.frame = this.texture.get(frame);\r\n\r\n        if (!this.frame.cutWidth || !this.frame.cutHeight)\r\n        {\r\n            this.renderFlags &= ~8;\r\n        }\r\n        else\r\n        {\r\n            this.renderFlags |= 8;\r\n        }\r\n\r\n        frame = this.frame;\r\n\r\n        //   TL\r\n        this.uv[0] = frame.u0;\r\n        this.uv[1] = frame.v0;\r\n\r\n        //   BL\r\n        this.uv[2] = frame.u0;\r\n        this.uv[3] = frame.v1;\r\n\r\n        //   BR\r\n        this.uv[4] = frame.u1;\r\n        this.uv[5] = frame.v1;\r\n\r\n        //   TL\r\n        this.uv[6] = frame.u0;\r\n        this.uv[7] = frame.v0;\r\n\r\n        //   BR\r\n        this.uv[8] = frame.u1;\r\n        this.uv[9] = frame.v1;\r\n\r\n        //   TR\r\n        this.uv[10] = frame.u1;\r\n        this.uv[11] = frame.v0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * The top-left x vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topLeftX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topLeftX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x + this.vertices[0];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[0] = value - this.x;\r\n            this.vertices[6] = value - this.x;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-left y vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topLeftY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topLeftY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y + this.vertices[1];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[1] = value - this.y;\r\n            this.vertices[7] = value - this.y;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-right x vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topRightX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topRightX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x + this.vertices[10];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[10] = value - this.x;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-right y vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topRightY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topRightY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y + this.vertices[11];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[11] = value - this.y;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-left x vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomLeftX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomLeftX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x + this.vertices[2];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[2] = value - this.x;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-left y vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomLeftY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomLeftY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y + this.vertices[3];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[3] = value - this.y;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-right x vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomRightX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomRightX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x + this.vertices[4];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[4] = value - this.x;\r\n            this.vertices[8] = value - this.x;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-right y vertex of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomRightY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomRightY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y + this.vertices[5];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.vertices[5] = value - this.y;\r\n            this.vertices[9] = value - this.y;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-left alpha value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topLeftAlpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topLeftAlpha: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.alphas[0];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.alphas[0] = value;\r\n            this.alphas[3] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-right alpha value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topRightAlpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topRightAlpha: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.alphas[5];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.alphas[5] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-left alpha value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomLeftAlpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomLeftAlpha: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.alphas[1];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.alphas[1] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-right alpha value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomRightAlpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomRightAlpha: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.alphas[2];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.alphas[2] = value;\r\n            this.alphas[4] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-left color value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topLeftColor\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topLeftColor: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.colors[0];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.colors[0] = value;\r\n            this.colors[3] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top-right color value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#topRightColor\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    topRightColor: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.colors[5];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.colors[5] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-left color value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomLeftColor\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomLeftColor: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.colors[1];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.colors[1] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom-right color value of this Quad.\r\n     *\r\n     * @name Phaser.GameObjects.Quad#bottomRightColor\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottomRightColor: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.colors[2];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.colors[2] = value;\r\n            this.colors[4] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the top-left vertex position of this Quad.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#setTopLeft\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal coordinate of the vertex.\r\n     * @param {number} y - The vertical coordinate of the vertex.\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    setTopLeft: function (x, y)\r\n    {\r\n        this.topLeftX = x;\r\n        this.topLeftY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the top-right vertex position of this Quad.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#setTopRight\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal coordinate of the vertex.\r\n     * @param {number} y - The vertical coordinate of the vertex.\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    setTopRight: function (x, y)\r\n    {\r\n        this.topRightX = x;\r\n        this.topRightY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the bottom-left vertex position of this Quad.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#setBottomLeft\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal coordinate of the vertex.\r\n     * @param {number} y - The vertical coordinate of the vertex.\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    setBottomLeft: function (x, y)\r\n    {\r\n        this.bottomLeftX = x;\r\n        this.bottomLeftY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the bottom-right vertex position of this Quad.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#setBottomRight\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal coordinate of the vertex.\r\n     * @param {number} y - The vertical coordinate of the vertex.\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    setBottomRight: function (x, y)\r\n    {\r\n        this.bottomRightX = x;\r\n        this.bottomRightY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the positions of the four corner vertices of this Quad.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#resetPosition\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    resetPosition: function ()\r\n    {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var halfWidth = Math.floor(this.width / 2);\r\n        var halfHeight = Math.floor(this.height / 2);\r\n\r\n        this.setTopLeft(x - halfWidth, y - halfHeight);\r\n        this.setTopRight(x + halfWidth, y - halfHeight);\r\n        this.setBottomLeft(x - halfWidth, y + halfHeight);\r\n        this.setBottomRight(x + halfWidth, y + halfHeight);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the alpha values used by this Quad back to 1.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#resetAlpha\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    resetAlpha: function ()\r\n    {\r\n        var alphas = this.alphas;\r\n\r\n        alphas[0] = 1;\r\n        alphas[1] = 1;\r\n        alphas[2] = 1;\r\n        alphas[3] = 1;\r\n        alphas[4] = 1;\r\n        alphas[5] = 1;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the color values used by this Quad back to 0xffffff.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#resetColors\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    resetColors: function ()\r\n    {\r\n        var colors = this.colors;\r\n\r\n        colors[0] = 0xffffff;\r\n        colors[1] = 0xffffff;\r\n        colors[2] = 0xffffff;\r\n        colors[3] = 0xffffff;\r\n        colors[4] = 0xffffff;\r\n        colors[5] = 0xffffff;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the position, alpha and color values used by this Quad.\r\n     *\r\n     * @method Phaser.GameObjects.Quad#reset\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.GameObjects.Quad} This Game Object.\r\n     */\r\n    reset: function ()\r\n    {\r\n        this.resetPosition();\r\n\r\n        this.resetAlpha();\r\n\r\n        return this.resetColors();\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Quad;\r\n"]},"metadata":{},"sourceType":"script"}