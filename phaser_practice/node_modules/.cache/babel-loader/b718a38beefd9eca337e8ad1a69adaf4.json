{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Sinusoidal ease-in.\r\n *\r\n * @function Phaser.Math.Easing.Sine.In\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n *\r\n * @return {number} The tweened value.\r\n */\nvar In = function (v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return 1 - Math.cos(v * Math.PI / 2);\n  }\n};\n\nmodule.exports = In;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/math/easing/sine/In.js"],"names":["In","v","Math","cos","PI","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;AAUA,IAAIA,EAAE,GAAG,UAAUC,CAAV,EACT;AACI,MAAIA,CAAC,KAAK,CAAV,EACA;AACI,WAAO,CAAP;AACH,GAHD,MAIK,IAAIA,CAAC,KAAK,CAAV,EACL;AACI,WAAO,CAAP;AACH,GAHI,MAKL;AACI,WAAO,IAAIC,IAAI,CAACC,GAAL,CAASF,CAAC,GAAGC,IAAI,CAACE,EAAT,GAAc,CAAvB,CAAX;AACH;AACJ,CAdD;;AAgBAC,MAAM,CAACC,OAAP,GAAiBN,EAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Sinusoidal ease-in.\r\n *\r\n * @function Phaser.Math.Easing.Sine.In\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n *\r\n * @return {number} The tweened value.\r\n */\r\nvar In = function (v)\r\n{\r\n    if (v === 0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if (v === 1)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        return 1 - Math.cos(v * Math.PI / 2);\r\n    }\r\n};\r\n\r\nmodule.exports = In;\r\n"]},"metadata":{},"sourceType":"script"}