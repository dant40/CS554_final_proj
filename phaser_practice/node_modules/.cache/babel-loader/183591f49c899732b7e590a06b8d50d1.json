{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Returns true if two triangles have the same coordinates.\r\n *\r\n * @function Phaser.Geom.Triangle.Equals\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The first triangle to check.\r\n * @param {Phaser.Geom.Triangle} toCompare - The second triangle to check.\r\n *\r\n * @return {boolean} `true` if the two given triangles have the exact same coordinates, otherwise `false`.\r\n */\nvar Equals = function (triangle, toCompare) {\n  return triangle.x1 === toCompare.x1 && triangle.y1 === toCompare.y1 && triangle.x2 === toCompare.x2 && triangle.y2 === toCompare.y2 && triangle.x3 === toCompare.x3 && triangle.y3 === toCompare.y3;\n};\n\nmodule.exports = Equals;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/triangle/Equals.js"],"names":["Equals","triangle","toCompare","x1","y1","x2","y2","x3","y3","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;AAWA,IAAIA,MAAM,GAAG,UAAUC,QAAV,EAAoBC,SAApB,EACb;AACI,SACID,QAAQ,CAACE,EAAT,KAAgBD,SAAS,CAACC,EAA1B,IACAF,QAAQ,CAACG,EAAT,KAAgBF,SAAS,CAACE,EAD1B,IAEAH,QAAQ,CAACI,EAAT,KAAgBH,SAAS,CAACG,EAF1B,IAGAJ,QAAQ,CAACK,EAAT,KAAgBJ,SAAS,CAACI,EAH1B,IAIAL,QAAQ,CAACM,EAAT,KAAgBL,SAAS,CAACK,EAJ1B,IAKAN,QAAQ,CAACO,EAAT,KAAgBN,SAAS,CAACM,EAN9B;AAQH,CAVD;;AAYAC,MAAM,CAACC,OAAP,GAAiBV,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Returns true if two triangles have the same coordinates.\r\n *\r\n * @function Phaser.Geom.Triangle.Equals\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The first triangle to check.\r\n * @param {Phaser.Geom.Triangle} toCompare - The second triangle to check.\r\n *\r\n * @return {boolean} `true` if the two given triangles have the exact same coordinates, otherwise `false`.\r\n */\r\nvar Equals = function (triangle, toCompare)\r\n{\r\n    return (\r\n        triangle.x1 === toCompare.x1 &&\r\n        triangle.y1 === toCompare.y1 &&\r\n        triangle.x2 === toCompare.x2 &&\r\n        triangle.y2 === toCompare.y2 &&\r\n        triangle.x3 === toCompare.x3 &&\r\n        triangle.y3 === toCompare.y3\r\n    );\r\n};\r\n\r\nmodule.exports = Equals;\r\n"]},"metadata":{},"sourceType":"script"}