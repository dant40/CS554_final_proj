{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Set a line to a given position, angle and length.\r\n *\r\n * @function Phaser.Geom.Line.SetToAngle\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Line} O - [line,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to set.\r\n * @param {number} x - The horizontal start position of the line.\r\n * @param {number} y - The vertical start position of the line.\r\n * @param {number} angle - The angle of the line in radians.\r\n * @param {number} length - The length of the line.\r\n *\r\n * @return {Phaser.Geom.Line} The updated line.\r\n */\nvar SetToAngle = function (line, x, y, angle, length) {\n  line.x1 = x;\n  line.y1 = y;\n  line.x2 = x + Math.cos(angle) * length;\n  line.y2 = y + Math.sin(angle) * length;\n  return line;\n};\n\nmodule.exports = SetToAngle;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/line/SetToAngle.js"],"names":["SetToAngle","line","x","y","angle","length","x1","y1","x2","Math","cos","y2","sin","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;;;AAgBA,IAAIA,UAAU,GAAG,UAAUC,IAAV,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,KAAtB,EAA6BC,MAA7B,EACjB;AACIJ,EAAAA,IAAI,CAACK,EAAL,GAAUJ,CAAV;AACAD,EAAAA,IAAI,CAACM,EAAL,GAAUJ,CAAV;AAEAF,EAAAA,IAAI,CAACO,EAAL,GAAUN,CAAC,GAAIO,IAAI,CAACC,GAAL,CAASN,KAAT,IAAkBC,MAAjC;AACAJ,EAAAA,IAAI,CAACU,EAAL,GAAUR,CAAC,GAAIM,IAAI,CAACG,GAAL,CAASR,KAAT,IAAkBC,MAAjC;AAEA,SAAOJ,IAAP;AACH,CATD;;AAWAY,MAAM,CAACC,OAAP,GAAiBd,UAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Set a line to a given position, angle and length.\r\n *\r\n * @function Phaser.Geom.Line.SetToAngle\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Line} O - [line,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to set.\r\n * @param {number} x - The horizontal start position of the line.\r\n * @param {number} y - The vertical start position of the line.\r\n * @param {number} angle - The angle of the line in radians.\r\n * @param {number} length - The length of the line.\r\n *\r\n * @return {Phaser.Geom.Line} The updated line.\r\n */\r\nvar SetToAngle = function (line, x, y, angle, length)\r\n{\r\n    line.x1 = x;\r\n    line.y1 = y;\r\n\r\n    line.x2 = x + (Math.cos(angle) * length);\r\n    line.y2 = y + (Math.sin(angle) * length);\r\n\r\n    return line;\r\n};\r\n\r\nmodule.exports = SetToAngle;\r\n"]},"metadata":{},"sourceType":"script"}