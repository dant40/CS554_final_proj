{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Removes a single item from an array and returns it without creating gc, like the native splice does.\r\n * Based on code by Mike Reinstein.\r\n *\r\n * @function Phaser.Utils.Array.SpliceOne\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to splice from.\r\n * @param {integer} index - The index of the item which should be spliced.\r\n *\r\n * @return {*} The item which was spliced (removed).\r\n */\nvar SpliceOne = function (array, index) {\n  if (index >= array.length) {\n    return;\n  }\n\n  var len = array.length - 1;\n  var item = array[index];\n\n  for (var i = index; i < len; i++) {\n    array[i] = array[i + 1];\n  }\n\n  array.length = len;\n  return item;\n};\n\nmodule.exports = SpliceOne;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/array/SpliceOne.js"],"names":["SpliceOne","array","index","length","len","item","i","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;AAYA,IAAIA,SAAS,GAAG,UAAUC,KAAV,EAAiBC,KAAjB,EAChB;AACI,MAAIA,KAAK,IAAID,KAAK,CAACE,MAAnB,EACA;AACI;AACH;;AAED,MAAIC,GAAG,GAAGH,KAAK,CAACE,MAAN,GAAe,CAAzB;AAEA,MAAIE,IAAI,GAAGJ,KAAK,CAACC,KAAD,CAAhB;;AAEA,OAAK,IAAII,CAAC,GAAGJ,KAAb,EAAoBI,CAAC,GAAGF,GAAxB,EAA6BE,CAAC,EAA9B,EACA;AACIL,IAAAA,KAAK,CAACK,CAAD,CAAL,GAAWL,KAAK,CAACK,CAAC,GAAG,CAAL,CAAhB;AACH;;AAEDL,EAAAA,KAAK,CAACE,MAAN,GAAeC,GAAf;AAEA,SAAOC,IAAP;AACH,CAnBD;;AAqBAE,MAAM,CAACC,OAAP,GAAiBR,SAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Removes a single item from an array and returns it without creating gc, like the native splice does.\r\n * Based on code by Mike Reinstein.\r\n *\r\n * @function Phaser.Utils.Array.SpliceOne\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to splice from.\r\n * @param {integer} index - The index of the item which should be spliced.\r\n *\r\n * @return {*} The item which was spliced (removed).\r\n */\r\nvar SpliceOne = function (array, index)\r\n{\r\n    if (index >= array.length)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var len = array.length - 1;\r\n\r\n    var item = array[index];\r\n\r\n    for (var i = index; i < len; i++)\r\n    {\r\n        array[i] = array[i + 1];\r\n    }\r\n\r\n    array.length = len;\r\n\r\n    return item;\r\n};\r\n\r\nmodule.exports = SpliceOne;\r\n"]},"metadata":{},"sourceType":"script"}