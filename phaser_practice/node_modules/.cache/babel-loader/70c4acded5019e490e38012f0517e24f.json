{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Stepped easing.\r\n *\r\n * @function Phaser.Math.Easing.Stepped.Stepped\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n * @param {number} [steps=1] - The number of steps in the ease.\r\n *\r\n * @return {number} The tweened value.\r\n */\nvar Stepped = function (v, steps) {\n  if (steps === undefined) {\n    steps = 1;\n  }\n\n  if (v <= 0) {\n    return 0;\n  } else if (v >= 1) {\n    return 1;\n  } else {\n    return ((steps * v | 0) + 1) * (1 / steps);\n  }\n};\n\nmodule.exports = Stepped;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/math/easing/stepped/Stepped.js"],"names":["Stepped","v","steps","undefined","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;AAWA,IAAIA,OAAO,GAAG,UAAUC,CAAV,EAAaC,KAAb,EACd;AACI,MAAIA,KAAK,KAAKC,SAAd,EAAyB;AAAED,IAAAA,KAAK,GAAG,CAAR;AAAY;;AAEvC,MAAID,CAAC,IAAI,CAAT,EACA;AACI,WAAO,CAAP;AACH,GAHD,MAIK,IAAIA,CAAC,IAAI,CAAT,EACL;AACI,WAAO,CAAP;AACH,GAHI,MAKL;AACI,WAAO,CAAC,CAAEC,KAAK,GAAGD,CAAT,GAAc,CAAf,IAAoB,CAArB,KAA2B,IAAIC,KAA/B,CAAP;AACH;AACJ,CAhBD;;AAkBAE,MAAM,CAACC,OAAP,GAAiBL,OAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Stepped easing.\r\n *\r\n * @function Phaser.Math.Easing.Stepped.Stepped\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n * @param {number} [steps=1] - The number of steps in the ease.\r\n *\r\n * @return {number} The tweened value.\r\n */\r\nvar Stepped = function (v, steps)\r\n{\r\n    if (steps === undefined) { steps = 1; }\r\n\r\n    if (v <= 0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if (v >= 1)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        return (((steps * v) | 0) + 1) * (1 / steps);\r\n    }\r\n};\r\n\r\nmodule.exports = Stepped;\r\n"]},"metadata":{},"sourceType":"script"}