{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar SpliceOne = require('./SpliceOne');\n/**\r\n * Removes a random object from the given array and returns it.\r\n * Will return null if there are no array items that fall within the specified range or if there is no item for the randomly chosen index.\r\n *\r\n * @function Phaser.Utils.Array.RemoveRandomElement\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to removed a random element from.\r\n * @param {integer} [start=0] - The array index to start the search from.\r\n * @param {integer} [length=array.length] - Optional restriction on the number of elements to randomly select from.\r\n *\r\n * @return {object} The random element that was removed, or `null` if there were no array elements that fell within the given range.\r\n */\n\n\nvar RemoveRandomElement = function (array, start, length) {\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (length === undefined) {\n    length = array.length;\n  }\n\n  var randomIndex = start + Math.floor(Math.random() * length);\n  return SpliceOne(array, randomIndex);\n};\n\nmodule.exports = RemoveRandomElement;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/array/RemoveRandomElement.js"],"names":["SpliceOne","require","RemoveRandomElement","array","start","length","undefined","randomIndex","Math","floor","random","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;AAEA;;;;;;;;;;;;;;;AAaA,IAAIC,mBAAmB,GAAG,UAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,MAAxB,EAC1B;AACI,MAAID,KAAK,KAAKE,SAAd,EAAyB;AAAEF,IAAAA,KAAK,GAAG,CAAR;AAAY;;AACvC,MAAIC,MAAM,KAAKC,SAAf,EAA0B;AAAED,IAAAA,MAAM,GAAGF,KAAK,CAACE,MAAf;AAAwB;;AAEpD,MAAIE,WAAW,GAAGH,KAAK,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,MAA3B,CAA1B;AAEA,SAAOL,SAAS,CAACG,KAAD,EAAQI,WAAR,CAAhB;AACH,CARD;;AAUAI,MAAM,CAACC,OAAP,GAAiBV,mBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar SpliceOne = require('./SpliceOne');\r\n\r\n/**\r\n * Removes a random object from the given array and returns it.\r\n * Will return null if there are no array items that fall within the specified range or if there is no item for the randomly chosen index.\r\n *\r\n * @function Phaser.Utils.Array.RemoveRandomElement\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to removed a random element from.\r\n * @param {integer} [start=0] - The array index to start the search from.\r\n * @param {integer} [length=array.length] - Optional restriction on the number of elements to randomly select from.\r\n *\r\n * @return {object} The random element that was removed, or `null` if there were no array elements that fell within the given range.\r\n */\r\nvar RemoveRandomElement = function (array, start, length)\r\n{\r\n    if (start === undefined) { start = 0; }\r\n    if (length === undefined) { length = array.length; }\r\n\r\n    var randomIndex = start + Math.floor(Math.random() * length);\r\n\r\n    return SpliceOne(array, randomIndex);\r\n};\r\n\r\nmodule.exports = RemoveRandomElement;\r\n"]},"metadata":{},"sourceType":"script"}