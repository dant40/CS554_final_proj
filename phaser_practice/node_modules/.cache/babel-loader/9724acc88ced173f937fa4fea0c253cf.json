{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * An Impact.js compatible physics world, body and solver, for those who are used\r\n * to the Impact way of defining and controlling physics bodies. Also works with\r\n * the new Loader support for Weltmeister map data.\r\n *\r\n * World updated to run off the Phaser main loop.\r\n * Body extended to support additional setter functions.\r\n *\r\n * To create the map data you'll need Weltmeister, which comes with Impact\r\n * and can be purchased from http://impactjs.com\r\n *\r\n * My thanks to Dominic Szablewski for his permission to support Impact in Phaser.\r\n *\r\n * @namespace Phaser.Physics.Impact\r\n */\nmodule.exports = {\n  Body: require('./Body'),\n  Events: require('./events'),\n  COLLIDES: require('./COLLIDES'),\n  CollisionMap: require('./CollisionMap'),\n  Factory: require('./Factory'),\n  Image: require('./ImpactImage'),\n  ImpactBody: require('./ImpactBody'),\n  ImpactPhysics: require('./ImpactPhysics'),\n  Sprite: require('./ImpactSprite'),\n  TYPE: require('./TYPE'),\n  World: require('./World')\n};","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/impact/index.js"],"names":["module","exports","Body","require","Events","COLLIDES","CollisionMap","Factory","Image","ImpactBody","ImpactPhysics","Sprite","TYPE","World"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;;AAeAA,MAAM,CAACC,OAAP,GAAiB;AAEbC,EAAAA,IAAI,EAAEC,OAAO,CAAC,QAAD,CAFA;AAGbC,EAAAA,MAAM,EAAED,OAAO,CAAC,UAAD,CAHF;AAIbE,EAAAA,QAAQ,EAAEF,OAAO,CAAC,YAAD,CAJJ;AAKbG,EAAAA,YAAY,EAAEH,OAAO,CAAC,gBAAD,CALR;AAMbI,EAAAA,OAAO,EAAEJ,OAAO,CAAC,WAAD,CANH;AAObK,EAAAA,KAAK,EAAEL,OAAO,CAAC,eAAD,CAPD;AAQbM,EAAAA,UAAU,EAAEN,OAAO,CAAC,cAAD,CARN;AASbO,EAAAA,aAAa,EAAEP,OAAO,CAAC,iBAAD,CATT;AAUbQ,EAAAA,MAAM,EAAER,OAAO,CAAC,gBAAD,CAVF;AAWbS,EAAAA,IAAI,EAAET,OAAO,CAAC,QAAD,CAXA;AAYbU,EAAAA,KAAK,EAAEV,OAAO,CAAC,SAAD;AAZD,CAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * An Impact.js compatible physics world, body and solver, for those who are used\r\n * to the Impact way of defining and controlling physics bodies. Also works with\r\n * the new Loader support for Weltmeister map data.\r\n *\r\n * World updated to run off the Phaser main loop.\r\n * Body extended to support additional setter functions.\r\n *\r\n * To create the map data you'll need Weltmeister, which comes with Impact\r\n * and can be purchased from http://impactjs.com\r\n *\r\n * My thanks to Dominic Szablewski for his permission to support Impact in Phaser.\r\n *\r\n * @namespace Phaser.Physics.Impact\r\n */\r\nmodule.exports = {\r\n\r\n    Body: require('./Body'),\r\n    Events: require('./events'),\r\n    COLLIDES: require('./COLLIDES'),\r\n    CollisionMap: require('./CollisionMap'),\r\n    Factory: require('./Factory'),\r\n    Image: require('./ImpactImage'),\r\n    ImpactBody: require('./ImpactBody'),\r\n    ImpactPhysics: require('./ImpactPhysics'),\r\n    Sprite: require('./ImpactSprite'),\r\n    TYPE: require('./TYPE'),\r\n    World: require('./World')\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"script"}