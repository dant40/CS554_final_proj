{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Tests if one rectangle fully contains another.\r\n *\r\n * @function Phaser.Geom.Rectangle.ContainsRect\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectA - The first rectangle.\r\n * @param {Phaser.Geom.Rectangle} rectB - The second rectangle.\r\n *\r\n * @return {boolean} True only if rectA fully contains rectB.\r\n */\nvar ContainsRect = function (rectA, rectB) {\n  //  Volume check (if rectB volume > rectA then rectA cannot contain it)\n  if (rectB.width * rectB.height > rectA.width * rectA.height) {\n    return false;\n  }\n\n  return rectB.x > rectA.x && rectB.x < rectA.right && rectB.right > rectA.x && rectB.right < rectA.right && rectB.y > rectA.y && rectB.y < rectA.bottom && rectB.bottom > rectA.y && rectB.bottom < rectA.bottom;\n};\n\nmodule.exports = ContainsRect;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/rectangle/ContainsRect.js"],"names":["ContainsRect","rectA","rectB","width","height","x","right","y","bottom","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;AAWA,IAAIA,YAAY,GAAG,UAAUC,KAAV,EAAiBC,KAAjB,EACnB;AACI;AACA,MAAKA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACE,MAArB,GAAgCH,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACG,MAAxD,EACA;AACI,WAAO,KAAP;AACH;;AAED,SACKF,KAAK,CAACG,CAAN,GAAUJ,KAAK,CAACI,CAAhB,IAAqBH,KAAK,CAACG,CAAN,GAAUJ,KAAK,CAACK,KAAtC,IACCJ,KAAK,CAACI,KAAN,GAAcL,KAAK,CAACI,CAApB,IAAyBH,KAAK,CAACI,KAAN,GAAcL,KAAK,CAACK,KAD9C,IAECJ,KAAK,CAACK,CAAN,GAAUN,KAAK,CAACM,CAAhB,IAAqBL,KAAK,CAACK,CAAN,GAAUN,KAAK,CAACO,MAFtC,IAGCN,KAAK,CAACM,MAAN,GAAeP,KAAK,CAACM,CAArB,IAA0BL,KAAK,CAACM,MAAN,GAAeP,KAAK,CAACO,MAJpD;AAMH,CAdD;;AAgBAC,MAAM,CAACC,OAAP,GAAiBV,YAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Tests if one rectangle fully contains another.\r\n *\r\n * @function Phaser.Geom.Rectangle.ContainsRect\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectA - The first rectangle.\r\n * @param {Phaser.Geom.Rectangle} rectB - The second rectangle.\r\n *\r\n * @return {boolean} True only if rectA fully contains rectB.\r\n */\r\nvar ContainsRect = function (rectA, rectB)\r\n{\r\n    //  Volume check (if rectB volume > rectA then rectA cannot contain it)\r\n    if ((rectB.width * rectB.height) > (rectA.width * rectA.height))\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        (rectB.x > rectA.x && rectB.x < rectA.right) &&\r\n        (rectB.right > rectA.x && rectB.right < rectA.right) &&\r\n        (rectB.y > rectA.y && rectB.y < rectA.bottom) &&\r\n        (rectB.bottom > rectA.y && rectB.bottom < rectA.bottom)\r\n    );\r\n};\r\n\r\nmodule.exports = ContainsRect;\r\n"]},"metadata":{},"sourceType":"script"}