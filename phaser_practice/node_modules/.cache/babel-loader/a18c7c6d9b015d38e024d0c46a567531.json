{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Tests if the start and end indexes are a safe range for the given array.\r\n * \r\n * @function Phaser.Utils.Array.SafeRange\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to check.\r\n * @param {integer} startIndex - The start index.\r\n * @param {integer} endIndex - The end index.\r\n * @param {boolean} [throwError=true] - Throw an error if the range is out of bounds.\r\n *\r\n * @return {boolean} True if the range is safe, otherwise false.\r\n */\nvar SafeRange = function (array, startIndex, endIndex, throwError) {\n  var len = array.length;\n\n  if (startIndex < 0 || startIndex > len || startIndex >= endIndex || endIndex > len || startIndex + endIndex > len) {\n    if (throwError) {\n      throw new Error('Range Error: Values outside acceptable range');\n    }\n\n    return false;\n  } else {\n    return true;\n  }\n};\n\nmodule.exports = SafeRange;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/array/SafeRange.js"],"names":["SafeRange","array","startIndex","endIndex","throwError","len","length","Error","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;AAaA,IAAIA,SAAS,GAAG,UAAUC,KAAV,EAAiBC,UAAjB,EAA6BC,QAA7B,EAAuCC,UAAvC,EAChB;AACI,MAAIC,GAAG,GAAGJ,KAAK,CAACK,MAAhB;;AAEA,MAAIJ,UAAU,GAAG,CAAb,IACAA,UAAU,GAAGG,GADb,IAEAH,UAAU,IAAIC,QAFd,IAGAA,QAAQ,GAAGE,GAHX,IAIAH,UAAU,GAAGC,QAAb,GAAwBE,GAJ5B,EAKA;AACI,QAAID,UAAJ,EACA;AACI,YAAM,IAAIG,KAAJ,CAAU,8CAAV,CAAN;AACH;;AAED,WAAO,KAAP;AACH,GAZD,MAcA;AACI,WAAO,IAAP;AACH;AACJ,CArBD;;AAuBAC,MAAM,CAACC,OAAP,GAAiBT,SAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Tests if the start and end indexes are a safe range for the given array.\r\n * \r\n * @function Phaser.Utils.Array.SafeRange\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to check.\r\n * @param {integer} startIndex - The start index.\r\n * @param {integer} endIndex - The end index.\r\n * @param {boolean} [throwError=true] - Throw an error if the range is out of bounds.\r\n *\r\n * @return {boolean} True if the range is safe, otherwise false.\r\n */\r\nvar SafeRange = function (array, startIndex, endIndex, throwError)\r\n{\r\n    var len = array.length;\r\n\r\n    if (startIndex < 0 ||\r\n        startIndex > len ||\r\n        startIndex >= endIndex ||\r\n        endIndex > len ||\r\n        startIndex + endIndex > len)\r\n    {\r\n        if (throwError)\r\n        {\r\n            throw new Error('Range Error: Values outside acceptable range');\r\n        }\r\n\r\n        return false;\r\n    }\r\n    else\r\n    {\r\n        return true;\r\n    }\r\n};\r\n\r\nmodule.exports = SafeRange;\r\n"]},"metadata":{},"sourceType":"script"}