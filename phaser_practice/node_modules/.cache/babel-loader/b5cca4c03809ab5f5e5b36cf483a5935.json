{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar ALIGN_CONST = require('../const');\n\nvar AlignInMap = [];\nAlignInMap[ALIGN_CONST.BOTTOM_CENTER] = require('./BottomCenter');\nAlignInMap[ALIGN_CONST.BOTTOM_LEFT] = require('./BottomLeft');\nAlignInMap[ALIGN_CONST.BOTTOM_RIGHT] = require('./BottomRight');\nAlignInMap[ALIGN_CONST.CENTER] = require('./Center');\nAlignInMap[ALIGN_CONST.LEFT_CENTER] = require('./LeftCenter');\nAlignInMap[ALIGN_CONST.RIGHT_CENTER] = require('./RightCenter');\nAlignInMap[ALIGN_CONST.TOP_CENTER] = require('./TopCenter');\nAlignInMap[ALIGN_CONST.TOP_LEFT] = require('./TopLeft');\nAlignInMap[ALIGN_CONST.TOP_RIGHT] = require('./TopRight');\nAlignInMap[ALIGN_CONST.LEFT_BOTTOM] = AlignInMap[ALIGN_CONST.BOTTOM_LEFT];\nAlignInMap[ALIGN_CONST.LEFT_TOP] = AlignInMap[ALIGN_CONST.TOP_LEFT];\nAlignInMap[ALIGN_CONST.RIGHT_BOTTOM] = AlignInMap[ALIGN_CONST.BOTTOM_RIGHT];\nAlignInMap[ALIGN_CONST.RIGHT_TOP] = AlignInMap[ALIGN_CONST.TOP_RIGHT];\n/**\r\n * Takes given Game Object and aligns it so that it is positioned relative to the other.\r\n * The alignment used is based on the `position` argument, which is an `ALIGN_CONST` value, such as `LEFT_CENTER` or `TOP_RIGHT`.\r\n *\r\n * @function Phaser.Display.Align.In.QuickSet\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject} G - [child,$return]\r\n *\r\n * @param {Phaser.GameObjects.GameObject} child - The Game Object that will be positioned.\r\n * @param {Phaser.GameObjects.GameObject} alignIn - The Game Object to base the alignment position on.\r\n * @param {integer} position - The position to align the Game Object with. This is an align constant, such as `ALIGN_CONST.LEFT_CENTER`.\r\n * @param {number} [offsetX=0] - Optional horizontal offset from the position.\r\n * @param {number} [offsetY=0] - Optional vertical offset from the position.\r\n *\r\n * @return {Phaser.GameObjects.GameObject} The Game Object that was aligned.\r\n */\n\nvar QuickSet = function (child, alignIn, position, offsetX, offsetY) {\n  return AlignInMap[position](child, alignIn, offsetX, offsetY);\n};\n\nmodule.exports = QuickSet;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/display/align/in/QuickSet.js"],"names":["ALIGN_CONST","require","AlignInMap","BOTTOM_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","CENTER","LEFT_CENTER","RIGHT_CENTER","TOP_CENTER","TOP_LEFT","TOP_RIGHT","LEFT_BOTTOM","LEFT_TOP","RIGHT_BOTTOM","RIGHT_TOP","QuickSet","child","alignIn","position","offsetX","offsetY","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,WAAW,GAAGC,OAAO,CAAC,UAAD,CAAzB;;AAEA,IAAIC,UAAU,GAAG,EAAjB;AAEAA,UAAU,CAACF,WAAW,CAACG,aAAb,CAAV,GAAwCF,OAAO,CAAC,gBAAD,CAA/C;AACAC,UAAU,CAACF,WAAW,CAACI,WAAb,CAAV,GAAsCH,OAAO,CAAC,cAAD,CAA7C;AACAC,UAAU,CAACF,WAAW,CAACK,YAAb,CAAV,GAAuCJ,OAAO,CAAC,eAAD,CAA9C;AACAC,UAAU,CAACF,WAAW,CAACM,MAAb,CAAV,GAAiCL,OAAO,CAAC,UAAD,CAAxC;AACAC,UAAU,CAACF,WAAW,CAACO,WAAb,CAAV,GAAsCN,OAAO,CAAC,cAAD,CAA7C;AACAC,UAAU,CAACF,WAAW,CAACQ,YAAb,CAAV,GAAuCP,OAAO,CAAC,eAAD,CAA9C;AACAC,UAAU,CAACF,WAAW,CAACS,UAAb,CAAV,GAAqCR,OAAO,CAAC,aAAD,CAA5C;AACAC,UAAU,CAACF,WAAW,CAACU,QAAb,CAAV,GAAmCT,OAAO,CAAC,WAAD,CAA1C;AACAC,UAAU,CAACF,WAAW,CAACW,SAAb,CAAV,GAAoCV,OAAO,CAAC,YAAD,CAA3C;AACAC,UAAU,CAACF,WAAW,CAACY,WAAb,CAAV,GAAsCV,UAAU,CAACF,WAAW,CAACI,WAAb,CAAhD;AACAF,UAAU,CAACF,WAAW,CAACa,QAAb,CAAV,GAAmCX,UAAU,CAACF,WAAW,CAACU,QAAb,CAA7C;AACAR,UAAU,CAACF,WAAW,CAACc,YAAb,CAAV,GAAuCZ,UAAU,CAACF,WAAW,CAACK,YAAb,CAAjD;AACAH,UAAU,CAACF,WAAW,CAACe,SAAb,CAAV,GAAoCb,UAAU,CAACF,WAAW,CAACW,SAAb,CAA9C;AAEA;;;;;;;;;;;;;;;;;;AAiBA,IAAIK,QAAQ,GAAG,UAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,QAA1B,EAAoCC,OAApC,EAA6CC,OAA7C,EACf;AACI,SAAOnB,UAAU,CAACiB,QAAD,CAAV,CAAqBF,KAArB,EAA4BC,OAA5B,EAAqCE,OAArC,EAA8CC,OAA9C,CAAP;AACH,CAHD;;AAKAC,MAAM,CAACC,OAAP,GAAiBP,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar ALIGN_CONST = require('../const');\r\n\r\nvar AlignInMap = [];\r\n\r\nAlignInMap[ALIGN_CONST.BOTTOM_CENTER] = require('./BottomCenter');\r\nAlignInMap[ALIGN_CONST.BOTTOM_LEFT] = require('./BottomLeft');\r\nAlignInMap[ALIGN_CONST.BOTTOM_RIGHT] = require('./BottomRight');\r\nAlignInMap[ALIGN_CONST.CENTER] = require('./Center');\r\nAlignInMap[ALIGN_CONST.LEFT_CENTER] = require('./LeftCenter');\r\nAlignInMap[ALIGN_CONST.RIGHT_CENTER] = require('./RightCenter');\r\nAlignInMap[ALIGN_CONST.TOP_CENTER] = require('./TopCenter');\r\nAlignInMap[ALIGN_CONST.TOP_LEFT] = require('./TopLeft');\r\nAlignInMap[ALIGN_CONST.TOP_RIGHT] = require('./TopRight');\r\nAlignInMap[ALIGN_CONST.LEFT_BOTTOM] = AlignInMap[ALIGN_CONST.BOTTOM_LEFT];\r\nAlignInMap[ALIGN_CONST.LEFT_TOP] = AlignInMap[ALIGN_CONST.TOP_LEFT];\r\nAlignInMap[ALIGN_CONST.RIGHT_BOTTOM] = AlignInMap[ALIGN_CONST.BOTTOM_RIGHT];\r\nAlignInMap[ALIGN_CONST.RIGHT_TOP] = AlignInMap[ALIGN_CONST.TOP_RIGHT];\r\n\r\n/**\r\n * Takes given Game Object and aligns it so that it is positioned relative to the other.\r\n * The alignment used is based on the `position` argument, which is an `ALIGN_CONST` value, such as `LEFT_CENTER` or `TOP_RIGHT`.\r\n *\r\n * @function Phaser.Display.Align.In.QuickSet\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject} G - [child,$return]\r\n *\r\n * @param {Phaser.GameObjects.GameObject} child - The Game Object that will be positioned.\r\n * @param {Phaser.GameObjects.GameObject} alignIn - The Game Object to base the alignment position on.\r\n * @param {integer} position - The position to align the Game Object with. This is an align constant, such as `ALIGN_CONST.LEFT_CENTER`.\r\n * @param {number} [offsetX=0] - Optional horizontal offset from the position.\r\n * @param {number} [offsetY=0] - Optional vertical offset from the position.\r\n *\r\n * @return {Phaser.GameObjects.GameObject} The Game Object that was aligned.\r\n */\r\nvar QuickSet = function (child, alignIn, position, offsetX, offsetY)\r\n{\r\n    return AlignInMap[position](child, alignIn, offsetX, offsetY);\r\n};\r\n\r\nmodule.exports = QuickSet;\r\n"]},"metadata":{},"sourceType":"script"}