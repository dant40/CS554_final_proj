{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar PropertyValueSet = require('./PropertyValueSet');\n/**\r\n * Takes an array of Game Objects, or any objects that have the public properties `originX` and `originY`\r\n * and then sets them to the given values.\r\n *\r\n * The optional `stepX` and `stepY` properties are applied incrementally, multiplied by each item in the array.\r\n *\r\n * To use this with a Group: `SetOrigin(group.getChildren(), originX, originY, stepX, stepY)`\r\n *\r\n * @function Phaser.Actions.SetOrigin\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be updated by this action.\r\n * @param {number} originX - The amount to set the `originX` property to.\r\n * @param {number} [originY] - The amount to set the `originY` property to. If `undefined` or `null` it uses the `originX` value.\r\n * @param {number} [stepX=0] - This is added to the `originX` amount, multiplied by the iteration counter.\r\n * @param {number} [stepY=0] - This is added to the `originY` amount, multiplied by the iteration counter.\r\n * @param {integer} [index=0] - An optional offset to start searching from within the items array.\r\n * @param {integer} [direction=1] - The direction to iterate through the array. 1 is from beginning to end, -1 from end to beginning.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of objects that were passed to this Action.\r\n */\n\n\nvar SetOrigin = function (items, originX, originY, stepX, stepY, index, direction) {\n  if (originY === undefined || originY === null) {\n    originY = originX;\n  }\n\n  PropertyValueSet(items, 'originX', originX, stepX, index, direction);\n  return PropertyValueSet(items, 'originY', originY, stepY, index, direction);\n};\n\nmodule.exports = SetOrigin;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/actions/SetOrigin.js"],"names":["PropertyValueSet","require","SetOrigin","items","originX","originY","stepX","stepY","index","direction","undefined","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA9B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAIC,SAAS,GAAG,UAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,KAAjD,EAAwDC,SAAxD,EAChB;AACI,MAAIJ,OAAO,KAAKK,SAAZ,IAAyBL,OAAO,KAAK,IAAzC,EAA+C;AAAEA,IAAAA,OAAO,GAAGD,OAAV;AAAoB;;AAErEJ,EAAAA,gBAAgB,CAACG,KAAD,EAAQ,SAAR,EAAmBC,OAAnB,EAA4BE,KAA5B,EAAmCE,KAAnC,EAA0CC,SAA1C,CAAhB;AAEA,SAAOT,gBAAgB,CAACG,KAAD,EAAQ,SAAR,EAAmBE,OAAnB,EAA4BE,KAA5B,EAAmCC,KAAnC,EAA0CC,SAA1C,CAAvB;AACH,CAPD;;AASAE,MAAM,CAACC,OAAP,GAAiBV,SAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar PropertyValueSet = require('./PropertyValueSet');\r\n\r\n/**\r\n * Takes an array of Game Objects, or any objects that have the public properties `originX` and `originY`\r\n * and then sets them to the given values.\r\n *\r\n * The optional `stepX` and `stepY` properties are applied incrementally, multiplied by each item in the array.\r\n *\r\n * To use this with a Group: `SetOrigin(group.getChildren(), originX, originY, stepX, stepY)`\r\n *\r\n * @function Phaser.Actions.SetOrigin\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be updated by this action.\r\n * @param {number} originX - The amount to set the `originX` property to.\r\n * @param {number} [originY] - The amount to set the `originY` property to. If `undefined` or `null` it uses the `originX` value.\r\n * @param {number} [stepX=0] - This is added to the `originX` amount, multiplied by the iteration counter.\r\n * @param {number} [stepY=0] - This is added to the `originY` amount, multiplied by the iteration counter.\r\n * @param {integer} [index=0] - An optional offset to start searching from within the items array.\r\n * @param {integer} [direction=1] - The direction to iterate through the array. 1 is from beginning to end, -1 from end to beginning.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of objects that were passed to this Action.\r\n */\r\nvar SetOrigin = function (items, originX, originY, stepX, stepY, index, direction)\r\n{\r\n    if (originY === undefined || originY === null) { originY = originX; }\r\n\r\n    PropertyValueSet(items, 'originX', originX, stepX, index, direction);\r\n\r\n    return PropertyValueSet(items, 'originY', originY, stepY, index, direction);\r\n};\r\n\r\nmodule.exports = SetOrigin;\r\n"]},"metadata":{},"sourceType":"script"}