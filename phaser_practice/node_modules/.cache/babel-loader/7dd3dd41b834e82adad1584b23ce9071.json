{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar MathRotateAroundDistance = require('../math/RotateAroundDistance');\n/**\r\n * Rotates an array of Game Objects around a point by the given angle and distance.\r\n *\r\n * @function Phaser.Actions.RotateAroundDistance\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {object} point - Any object with public `x` and `y` properties.\r\n * @param {number} angle - The angle to rotate by, in radians.\r\n * @param {number} distance - The distance from the point of rotation in pixels.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\n\n\nvar RotateAroundDistance = function (items, point, angle, distance) {\n  var x = point.x;\n  var y = point.y; //  There's nothing to do\n\n  if (distance === 0) {\n    return items;\n  }\n\n  for (var i = 0; i < items.length; i++) {\n    MathRotateAroundDistance(items[i], x, y, angle, distance);\n  }\n\n  return items;\n};\n\nmodule.exports = RotateAroundDistance;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/actions/RotateAroundDistance.js"],"names":["MathRotateAroundDistance","require","RotateAroundDistance","items","point","angle","distance","x","y","i","length","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,wBAAwB,GAAGC,OAAO,CAAC,8BAAD,CAAtC;AAEA;;;;;;;;;;;;;;;;;AAeA,IAAIC,oBAAoB,GAAG,UAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,QAA/B,EAC3B;AACI,MAAIC,CAAC,GAAGH,KAAK,CAACG,CAAd;AACA,MAAIC,CAAC,GAAGJ,KAAK,CAACI,CAAd,CAFJ,CAII;;AACA,MAAIF,QAAQ,KAAK,CAAjB,EACA;AACI,WAAOH,KAAP;AACH;;AAED,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EACA;AACIT,IAAAA,wBAAwB,CAACG,KAAK,CAACM,CAAD,CAAN,EAAWF,CAAX,EAAcC,CAAd,EAAiBH,KAAjB,EAAwBC,QAAxB,CAAxB;AACH;;AAED,SAAOH,KAAP;AACH,CAjBD;;AAmBAQ,MAAM,CAACC,OAAP,GAAiBV,oBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MathRotateAroundDistance = require('../math/RotateAroundDistance');\r\n\r\n/**\r\n * Rotates an array of Game Objects around a point by the given angle and distance.\r\n *\r\n * @function Phaser.Actions.RotateAroundDistance\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {object} point - Any object with public `x` and `y` properties.\r\n * @param {number} angle - The angle to rotate by, in radians.\r\n * @param {number} distance - The distance from the point of rotation in pixels.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\r\nvar RotateAroundDistance = function (items, point, angle, distance)\r\n{\r\n    var x = point.x;\r\n    var y = point.y;\r\n\r\n    //  There's nothing to do\r\n    if (distance === 0)\r\n    {\r\n        return items;\r\n    }\r\n\r\n    for (var i = 0; i < items.length; i++)\r\n    {\r\n        MathRotateAroundDistance(items[i], x, y, angle, distance);\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = RotateAroundDistance;\r\n"]},"metadata":{},"sourceType":"script"}