{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Internal function to process the separation of a physics body from a tile.\r\n *\r\n * @function Phaser.Physics.Arcade.Tilemap.ProcessTileSeparationX\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Arcade.Body} body - The Body object to separate.\r\n * @param {number} x - The x separation amount.\r\n */\nvar ProcessTileSeparationX = function (body, x) {\n  if (x < 0) {\n    body.blocked.none = false;\n    body.blocked.left = true;\n  } else if (x > 0) {\n    body.blocked.none = false;\n    body.blocked.right = true;\n  }\n\n  body.position.x -= x;\n\n  if (body.bounce.x === 0) {\n    body.velocity.x = 0;\n  } else {\n    body.velocity.x = -body.velocity.x * body.bounce.x;\n  }\n};\n\nmodule.exports = ProcessTileSeparationX;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/arcade/tilemap/ProcessTileSeparationX.js"],"names":["ProcessTileSeparationX","body","x","blocked","none","left","right","position","bounce","velocity","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;AASA,IAAIA,sBAAsB,GAAG,UAAUC,IAAV,EAAgBC,CAAhB,EAC7B;AACI,MAAIA,CAAC,GAAG,CAAR,EACA;AACID,IAAAA,IAAI,CAACE,OAAL,CAAaC,IAAb,GAAoB,KAApB;AACAH,IAAAA,IAAI,CAACE,OAAL,CAAaE,IAAb,GAAoB,IAApB;AACH,GAJD,MAKK,IAAIH,CAAC,GAAG,CAAR,EACL;AACID,IAAAA,IAAI,CAACE,OAAL,CAAaC,IAAb,GAAoB,KAApB;AACAH,IAAAA,IAAI,CAACE,OAAL,CAAaG,KAAb,GAAqB,IAArB;AACH;;AAEDL,EAAAA,IAAI,CAACM,QAAL,CAAcL,CAAd,IAAmBA,CAAnB;;AAEA,MAAID,IAAI,CAACO,MAAL,CAAYN,CAAZ,KAAkB,CAAtB,EACA;AACID,IAAAA,IAAI,CAACQ,QAAL,CAAcP,CAAd,GAAkB,CAAlB;AACH,GAHD,MAKA;AACID,IAAAA,IAAI,CAACQ,QAAL,CAAcP,CAAd,GAAkB,CAACD,IAAI,CAACQ,QAAL,CAAcP,CAAf,GAAmBD,IAAI,CAACO,MAAL,CAAYN,CAAjD;AACH;AACJ,CAvBD;;AAyBAQ,MAAM,CAACC,OAAP,GAAiBX,sBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Internal function to process the separation of a physics body from a tile.\r\n *\r\n * @function Phaser.Physics.Arcade.Tilemap.ProcessTileSeparationX\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Arcade.Body} body - The Body object to separate.\r\n * @param {number} x - The x separation amount.\r\n */\r\nvar ProcessTileSeparationX = function (body, x)\r\n{\r\n    if (x < 0)\r\n    {\r\n        body.blocked.none = false;\r\n        body.blocked.left = true;\r\n    }\r\n    else if (x > 0)\r\n    {\r\n        body.blocked.none = false;\r\n        body.blocked.right = true;\r\n    }\r\n\r\n    body.position.x -= x;\r\n\r\n    if (body.bounce.x === 0)\r\n    {\r\n        body.velocity.x = 0;\r\n    }\r\n    else\r\n    {\r\n        body.velocity.x = -body.velocity.x * body.bounce.x;\r\n    }\r\n};\r\n\r\nmodule.exports = ProcessTileSeparationX;\r\n"]},"metadata":{},"sourceType":"script"}