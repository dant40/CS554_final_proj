{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar MATH = require('../../math');\n\nvar GetValue = require('./GetValue');\n/**\r\n * Retrieves a value from an object. Allows for more advanced selection options, including:\r\n *\r\n * Allowed types:\r\n * \r\n * Implicit\r\n * {\r\n *     x: 4\r\n * }\r\n *\r\n * From function\r\n * {\r\n *     x: function ()\r\n * }\r\n *\r\n * Randomly pick one element from the array\r\n * {\r\n *     x: [a, b, c, d, e, f]\r\n * }\r\n *\r\n * Random integer between min and max:\r\n * {\r\n *     x: { randInt: [min, max] }\r\n * }\r\n *\r\n * Random float between min and max:\r\n * {\r\n *     x: { randFloat: [min, max] }\r\n * }\r\n * \r\n *\r\n * @function Phaser.Utils.Objects.GetAdvancedValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`) - `banner.hideBanner` would return the value of the `hideBanner` property from the object stored in the `banner` property of the `source` object.\r\n * @param {*} defaultValue - The value to return if the `key` isn't found in the `source` object.\r\n *\r\n * @return {*} The value of the requested key.\r\n */\n\n\nvar GetAdvancedValue = function (source, key, defaultValue) {\n  var value = GetValue(source, key, null);\n\n  if (value === null) {\n    return defaultValue;\n  } else if (Array.isArray(value)) {\n    return MATH.RND.pick(value);\n  } else if (typeof value === 'object') {\n    if (value.hasOwnProperty('randInt')) {\n      return MATH.RND.integerInRange(value.randInt[0], value.randInt[1]);\n    } else if (value.hasOwnProperty('randFloat')) {\n      return MATH.RND.realInRange(value.randFloat[0], value.randFloat[1]);\n    }\n  } else if (typeof value === 'function') {\n    return value(key);\n  }\n\n  return value;\n};\n\nmodule.exports = GetAdvancedValue;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/object/GetAdvancedValue.js"],"names":["MATH","require","GetValue","GetAdvancedValue","source","key","defaultValue","value","Array","isArray","RND","pick","hasOwnProperty","integerInRange","randInt","realInRange","randFloat","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAlB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAtB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,IAAIE,gBAAgB,GAAG,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,YAAvB,EACvB;AACI,MAAIC,KAAK,GAAGL,QAAQ,CAACE,MAAD,EAASC,GAAT,EAAc,IAAd,CAApB;;AAEA,MAAIE,KAAK,KAAK,IAAd,EACA;AACI,WAAOD,YAAP;AACH,GAHD,MAIK,IAAIE,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EACL;AACI,WAAOP,IAAI,CAACU,GAAL,CAASC,IAAT,CAAcJ,KAAd,CAAP;AACH,GAHI,MAIA,IAAI,OAAOA,KAAP,KAAiB,QAArB,EACL;AACI,QAAIA,KAAK,CAACK,cAAN,CAAqB,SAArB,CAAJ,EACA;AACI,aAAOZ,IAAI,CAACU,GAAL,CAASG,cAAT,CAAwBN,KAAK,CAACO,OAAN,CAAc,CAAd,CAAxB,EAA0CP,KAAK,CAACO,OAAN,CAAc,CAAd,CAA1C,CAAP;AACH,KAHD,MAIK,IAAIP,KAAK,CAACK,cAAN,CAAqB,WAArB,CAAJ,EACL;AACI,aAAOZ,IAAI,CAACU,GAAL,CAASK,WAAT,CAAqBR,KAAK,CAACS,SAAN,CAAgB,CAAhB,CAArB,EAAyCT,KAAK,CAACS,SAAN,CAAgB,CAAhB,CAAzC,CAAP;AACH;AACJ,GAVI,MAWA,IAAI,OAAOT,KAAP,KAAiB,UAArB,EACL;AACI,WAAOA,KAAK,CAACF,GAAD,CAAZ;AACH;;AAED,SAAOE,KAAP;AACH,CA7BD;;AA+BAU,MAAM,CAACC,OAAP,GAAiBf,gBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MATH = require('../../math');\r\nvar GetValue = require('./GetValue');\r\n\r\n/**\r\n * Retrieves a value from an object. Allows for more advanced selection options, including:\r\n *\r\n * Allowed types:\r\n * \r\n * Implicit\r\n * {\r\n *     x: 4\r\n * }\r\n *\r\n * From function\r\n * {\r\n *     x: function ()\r\n * }\r\n *\r\n * Randomly pick one element from the array\r\n * {\r\n *     x: [a, b, c, d, e, f]\r\n * }\r\n *\r\n * Random integer between min and max:\r\n * {\r\n *     x: { randInt: [min, max] }\r\n * }\r\n *\r\n * Random float between min and max:\r\n * {\r\n *     x: { randFloat: [min, max] }\r\n * }\r\n * \r\n *\r\n * @function Phaser.Utils.Objects.GetAdvancedValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`) - `banner.hideBanner` would return the value of the `hideBanner` property from the object stored in the `banner` property of the `source` object.\r\n * @param {*} defaultValue - The value to return if the `key` isn't found in the `source` object.\r\n *\r\n * @return {*} The value of the requested key.\r\n */\r\nvar GetAdvancedValue = function (source, key, defaultValue)\r\n{\r\n    var value = GetValue(source, key, null);\r\n\r\n    if (value === null)\r\n    {\r\n        return defaultValue;\r\n    }\r\n    else if (Array.isArray(value))\r\n    {\r\n        return MATH.RND.pick(value);\r\n    }\r\n    else if (typeof value === 'object')\r\n    {\r\n        if (value.hasOwnProperty('randInt'))\r\n        {\r\n            return MATH.RND.integerInRange(value.randInt[0], value.randInt[1]);\r\n        }\r\n        else if (value.hasOwnProperty('randFloat'))\r\n        {\r\n            return MATH.RND.realInRange(value.randFloat[0], value.randFloat[1]);\r\n        }\r\n    }\r\n    else if (typeof value === 'function')\r\n    {\r\n        return value(key);\r\n    }\r\n\r\n    return value;\r\n};\r\n\r\nmodule.exports = GetAdvancedValue;\r\n"]},"metadata":{},"sourceType":"script"}