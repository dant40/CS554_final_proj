{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Point = require('./Point');\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Geom.Point.ProjectUnit\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Point} pointA - [description]\r\n * @param {Phaser.Geom.Point} pointB - [description]\r\n * @param {Phaser.Geom.Point} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\n\n\nvar ProjectUnit = function (pointA, pointB, out) {\n  if (out === undefined) {\n    out = new Point();\n  }\n\n  var amt = pointA.x * pointB.x + pointA.y * pointB.y;\n\n  if (amt !== 0) {\n    out.x = amt * pointB.x;\n    out.y = amt * pointB.y;\n  }\n\n  return out;\n};\n\nmodule.exports = ProjectUnit;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/point/ProjectUnit.js"],"names":["Point","require","ProjectUnit","pointA","pointB","out","undefined","amt","x","y","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;AAcA,IAAIC,WAAW,GAAG,UAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,GAA1B,EAClB;AACI,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AAAED,IAAAA,GAAG,GAAG,IAAIL,KAAJ,EAAN;AAAoB;;AAE7C,MAAIO,GAAG,GAAKJ,MAAM,CAACK,CAAP,GAAWJ,MAAM,CAACI,CAAnB,GAAyBL,MAAM,CAACM,CAAP,GAAWL,MAAM,CAACK,CAAtD;;AAEA,MAAIF,GAAG,KAAK,CAAZ,EACA;AACIF,IAAAA,GAAG,CAACG,CAAJ,GAAQD,GAAG,GAAGH,MAAM,CAACI,CAArB;AACAH,IAAAA,GAAG,CAACI,CAAJ,GAAQF,GAAG,GAAGH,MAAM,CAACK,CAArB;AACH;;AAED,SAAOJ,GAAP;AACH,CAbD;;AAeAK,MAAM,CAACC,OAAP,GAAiBT,WAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Point = require('./Point');\r\n\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Geom.Point.ProjectUnit\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Point} pointA - [description]\r\n * @param {Phaser.Geom.Point} pointB - [description]\r\n * @param {Phaser.Geom.Point} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\r\nvar ProjectUnit = function (pointA, pointB, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    var amt = ((pointA.x * pointB.x) + (pointA.y * pointB.y));\r\n\r\n    if (amt !== 0)\r\n    {\r\n        out.x = amt * pointB.x;\r\n        out.y = amt * pointB.y;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = ProjectUnit;\r\n"]},"metadata":{},"sourceType":"script"}