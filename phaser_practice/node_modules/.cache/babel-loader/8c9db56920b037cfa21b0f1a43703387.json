{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Rotate a line around the given coordinates by the given angle in radians.\r\n *\r\n * @function Phaser.Geom.Line.RotateAroundXY\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Line} O - [line,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to rotate.\r\n * @param {number} x - The horizontal coordinate to rotate the line around.\r\n * @param {number} y - The vertical coordinate to rotate the line around.\r\n * @param {number} angle - The angle of rotation in radians.\r\n *\r\n * @return {Phaser.Geom.Line} The rotated line.\r\n */\nvar RotateAroundXY = function (line, x, y, angle) {\n  var c = Math.cos(angle);\n  var s = Math.sin(angle);\n  var tx = line.x1 - x;\n  var ty = line.y1 - y;\n  line.x1 = tx * c - ty * s + x;\n  line.y1 = tx * s + ty * c + y;\n  tx = line.x2 - x;\n  ty = line.y2 - y;\n  line.x2 = tx * c - ty * s + x;\n  line.y2 = tx * s + ty * c + y;\n  return line;\n};\n\nmodule.exports = RotateAroundXY;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/line/RotateAroundXY.js"],"names":["RotateAroundXY","line","x","y","angle","c","Math","cos","s","sin","tx","x1","ty","y1","x2","y2","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;;AAeA,IAAIA,cAAc,GAAG,UAAUC,IAAV,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,KAAtB,EACrB;AACI,MAAIC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAT,CAAR;AACA,MAAII,CAAC,GAAGF,IAAI,CAACG,GAAL,CAASL,KAAT,CAAR;AAEA,MAAIM,EAAE,GAAGT,IAAI,CAACU,EAAL,GAAUT,CAAnB;AACA,MAAIU,EAAE,GAAGX,IAAI,CAACY,EAAL,GAAUV,CAAnB;AAEAF,EAAAA,IAAI,CAACU,EAAL,GAAUD,EAAE,GAAGL,CAAL,GAASO,EAAE,GAAGJ,CAAd,GAAkBN,CAA5B;AACAD,EAAAA,IAAI,CAACY,EAAL,GAAUH,EAAE,GAAGF,CAAL,GAASI,EAAE,GAAGP,CAAd,GAAkBF,CAA5B;AAEAO,EAAAA,EAAE,GAAGT,IAAI,CAACa,EAAL,GAAUZ,CAAf;AACAU,EAAAA,EAAE,GAAGX,IAAI,CAACc,EAAL,GAAUZ,CAAf;AAEAF,EAAAA,IAAI,CAACa,EAAL,GAAUJ,EAAE,GAAGL,CAAL,GAASO,EAAE,GAAGJ,CAAd,GAAkBN,CAA5B;AACAD,EAAAA,IAAI,CAACc,EAAL,GAAUL,EAAE,GAAGF,CAAL,GAASI,EAAE,GAAGP,CAAd,GAAkBF,CAA5B;AAEA,SAAOF,IAAP;AACH,CAlBD;;AAoBAe,MAAM,CAACC,OAAP,GAAiBjB,cAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Rotate a line around the given coordinates by the given angle in radians.\r\n *\r\n * @function Phaser.Geom.Line.RotateAroundXY\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Line} O - [line,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to rotate.\r\n * @param {number} x - The horizontal coordinate to rotate the line around.\r\n * @param {number} y - The vertical coordinate to rotate the line around.\r\n * @param {number} angle - The angle of rotation in radians.\r\n *\r\n * @return {Phaser.Geom.Line} The rotated line.\r\n */\r\nvar RotateAroundXY = function (line, x, y, angle)\r\n{\r\n    var c = Math.cos(angle);\r\n    var s = Math.sin(angle);\r\n\r\n    var tx = line.x1 - x;\r\n    var ty = line.y1 - y;\r\n\r\n    line.x1 = tx * c - ty * s + x;\r\n    line.y1 = tx * s + ty * c + y;\r\n\r\n    tx = line.x2 - x;\r\n    ty = line.y2 - y;\r\n\r\n    line.x2 = tx * c - ty * s + x;\r\n    line.y2 = tx * s + ty * c + y;\r\n\r\n    return line;\r\n};\r\n\r\nmodule.exports = RotateAroundXY;\r\n"]},"metadata":{},"sourceType":"script"}