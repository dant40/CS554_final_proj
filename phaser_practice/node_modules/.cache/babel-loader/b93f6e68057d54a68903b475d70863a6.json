{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Utils = require('../../../renderer/webgl/Utils');\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.IsoTriangle#renderWebGL\r\n * @since 3.13.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.IsoTriangle} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\n\n\nvar IsoTriangleWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\n  var pipeline = this.pipeline;\n  var camMatrix = pipeline._tempMatrix1;\n  var shapeMatrix = pipeline._tempMatrix2;\n  var calcMatrix = pipeline._tempMatrix3;\n  renderer.setPipeline(pipeline);\n  shapeMatrix.applyITRS(src.x, src.y, src.rotation, src.scaleX, src.scaleY);\n  camMatrix.copyFrom(camera.matrix);\n\n  if (parentMatrix) {\n    //  Multiply the camera by the parent matrix\n    camMatrix.multiplyWithOffset(parentMatrix, -camera.scrollX * src.scrollFactorX, -camera.scrollY * src.scrollFactorY); //  Undo the camera scroll\n\n    shapeMatrix.e = src.x;\n    shapeMatrix.f = src.y;\n  } else {\n    shapeMatrix.e -= camera.scrollX * src.scrollFactorX;\n    shapeMatrix.f -= camera.scrollY * src.scrollFactorY;\n  }\n\n  camMatrix.multiply(shapeMatrix, calcMatrix);\n  var size = src.width;\n  var height = src.height;\n  var sizeA = size / 2;\n  var sizeB = size / src.projection;\n  var reversed = src.isReversed;\n  var alpha = camera.alpha * src.alpha;\n\n  if (!src.isFilled) {\n    return;\n  }\n\n  var tint;\n  var x0;\n  var y0;\n  var x1;\n  var y1;\n  var x2;\n  var y2; //  Top Face\n\n  if (src.showTop && reversed) {\n    tint = Utils.getTintAppendFloatAlphaAndSwap(src.fillTop, alpha);\n    x0 = calcMatrix.getX(-sizeA, -height);\n    y0 = calcMatrix.getY(-sizeA, -height);\n    x1 = calcMatrix.getX(0, -sizeB - height);\n    y1 = calcMatrix.getY(0, -sizeB - height);\n    x2 = calcMatrix.getX(sizeA, -height);\n    y2 = calcMatrix.getY(sizeA, -height);\n    var x3 = calcMatrix.getX(0, sizeB - height);\n    var y3 = calcMatrix.getY(0, sizeB - height);\n    pipeline.setTexture2D();\n    pipeline.batchQuad(x0, y0, x1, y1, x2, y2, x3, y3, 0, 0, 1, 1, tint, tint, tint, tint, 2);\n  } //  Left Face\n\n\n  if (src.showLeft) {\n    tint = Utils.getTintAppendFloatAlphaAndSwap(src.fillLeft, alpha);\n\n    if (reversed) {\n      x0 = calcMatrix.getX(-sizeA, -height);\n      y0 = calcMatrix.getY(-sizeA, -height);\n      x1 = calcMatrix.getX(0, sizeB);\n      y1 = calcMatrix.getY(0, sizeB);\n      x2 = calcMatrix.getX(0, sizeB - height);\n      y2 = calcMatrix.getY(0, sizeB - height);\n    } else {\n      x0 = calcMatrix.getX(-sizeA, 0);\n      y0 = calcMatrix.getY(-sizeA, 0);\n      x1 = calcMatrix.getX(0, sizeB);\n      y1 = calcMatrix.getY(0, sizeB);\n      x2 = calcMatrix.getX(0, sizeB - height);\n      y2 = calcMatrix.getY(0, sizeB - height);\n    }\n\n    pipeline.batchTri(x0, y0, x1, y1, x2, y2, 0, 0, 1, 1, tint, tint, tint, 2);\n  } //  Right Face\n\n\n  if (src.showRight) {\n    tint = Utils.getTintAppendFloatAlphaAndSwap(src.fillRight, alpha);\n\n    if (reversed) {\n      x0 = calcMatrix.getX(sizeA, -height);\n      y0 = calcMatrix.getY(sizeA, -height);\n      x1 = calcMatrix.getX(0, sizeB);\n      y1 = calcMatrix.getY(0, sizeB);\n      x2 = calcMatrix.getX(0, sizeB - height);\n      y2 = calcMatrix.getY(0, sizeB - height);\n    } else {\n      x0 = calcMatrix.getX(sizeA, 0);\n      y0 = calcMatrix.getY(sizeA, 0);\n      x1 = calcMatrix.getX(0, sizeB);\n      y1 = calcMatrix.getY(0, sizeB);\n      x2 = calcMatrix.getX(0, sizeB - height);\n      y2 = calcMatrix.getY(0, sizeB - height);\n    }\n\n    pipeline.setTexture2D();\n    pipeline.batchTri(x0, y0, x1, y1, x2, y2, 0, 0, 1, 1, tint, tint, tint, 2);\n  }\n};\n\nmodule.exports = IsoTriangleWebGLRenderer;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/shape/isotriangle/IsoTriangleWebGLRenderer.js"],"names":["Utils","require","IsoTriangleWebGLRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","pipeline","camMatrix","_tempMatrix1","shapeMatrix","_tempMatrix2","calcMatrix","_tempMatrix3","setPipeline","applyITRS","x","y","rotation","scaleX","scaleY","copyFrom","matrix","multiplyWithOffset","scrollX","scrollFactorX","scrollY","scrollFactorY","e","f","multiply","size","width","height","sizeA","sizeB","projection","reversed","isReversed","alpha","isFilled","tint","x0","y0","x1","y1","x2","y2","showTop","getTintAppendFloatAlphaAndSwap","fillTop","getX","getY","x3","y3","setTexture2D","batchQuad","showLeft","fillLeft","batchTri","showRight","fillRight","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Utils = require('../../../renderer/webgl/Utils');\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.IsoTriangle#renderWebGL\r\n * @since 3.13.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.IsoTriangle} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar IsoTriangleWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    var pipeline = this.pipeline;\r\n\r\n    var camMatrix = pipeline._tempMatrix1;\r\n    var shapeMatrix = pipeline._tempMatrix2;\r\n    var calcMatrix = pipeline._tempMatrix3;\r\n\r\n    renderer.setPipeline(pipeline);\r\n\r\n    shapeMatrix.applyITRS(src.x, src.y, src.rotation, src.scaleX, src.scaleY);\r\n\r\n    camMatrix.copyFrom(camera.matrix);\r\n\r\n    if (parentMatrix)\r\n    {\r\n        //  Multiply the camera by the parent matrix\r\n        camMatrix.multiplyWithOffset(parentMatrix, -camera.scrollX * src.scrollFactorX, -camera.scrollY * src.scrollFactorY);\r\n\r\n        //  Undo the camera scroll\r\n        shapeMatrix.e = src.x;\r\n        shapeMatrix.f = src.y;\r\n    }\r\n    else\r\n    {\r\n        shapeMatrix.e -= camera.scrollX * src.scrollFactorX;\r\n        shapeMatrix.f -= camera.scrollY * src.scrollFactorY;\r\n    }\r\n\r\n    camMatrix.multiply(shapeMatrix, calcMatrix);\r\n\r\n    var size = src.width;\r\n    var height = src.height;\r\n\r\n    var sizeA = size / 2;\r\n    var sizeB = size / src.projection;\r\n\r\n    var reversed = src.isReversed;\r\n\r\n    var alpha = camera.alpha * src.alpha;\r\n\r\n    if (!src.isFilled)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var tint;\r\n\r\n    var x0;\r\n    var y0;\r\n\r\n    var x1;\r\n    var y1;\r\n\r\n    var x2;\r\n    var y2;\r\n\r\n    //  Top Face\r\n\r\n    if (src.showTop && reversed)\r\n    {\r\n        tint = Utils.getTintAppendFloatAlphaAndSwap(src.fillTop, alpha);\r\n\r\n        x0 = calcMatrix.getX(-sizeA, -height);\r\n        y0 = calcMatrix.getY(-sizeA, -height);\r\n    \r\n        x1 = calcMatrix.getX(0, -sizeB - height);\r\n        y1 = calcMatrix.getY(0, -sizeB - height);\r\n    \r\n        x2 = calcMatrix.getX(sizeA, -height);\r\n        y2 = calcMatrix.getY(sizeA, -height);\r\n    \r\n        var x3 = calcMatrix.getX(0, sizeB - height);\r\n        var y3 = calcMatrix.getY(0, sizeB - height);\r\n\r\n        pipeline.setTexture2D();\r\n    \r\n        pipeline.batchQuad(x0, y0, x1, y1, x2, y2, x3, y3, 0, 0, 1, 1, tint, tint, tint, tint, 2);\r\n    }\r\n\r\n    //  Left Face\r\n\r\n    if (src.showLeft)\r\n    {\r\n        tint = Utils.getTintAppendFloatAlphaAndSwap(src.fillLeft, alpha);\r\n\r\n        if (reversed)\r\n        {\r\n            x0 = calcMatrix.getX(-sizeA, -height);\r\n            y0 = calcMatrix.getY(-sizeA, -height);\r\n        \r\n            x1 = calcMatrix.getX(0, sizeB);\r\n            y1 = calcMatrix.getY(0, sizeB);\r\n        \r\n            x2 = calcMatrix.getX(0, sizeB - height);\r\n            y2 = calcMatrix.getY(0, sizeB - height);\r\n        }\r\n        else\r\n        {\r\n            x0 = calcMatrix.getX(-sizeA, 0);\r\n            y0 = calcMatrix.getY(-sizeA, 0);\r\n        \r\n            x1 = calcMatrix.getX(0, sizeB);\r\n            y1 = calcMatrix.getY(0, sizeB);\r\n        \r\n            x2 = calcMatrix.getX(0, sizeB - height);\r\n            y2 = calcMatrix.getY(0, sizeB - height);\r\n        }\r\n    \r\n        pipeline.batchTri(x0, y0, x1, y1, x2, y2, 0, 0, 1, 1, tint, tint, tint, 2);\r\n    }\r\n\r\n    //  Right Face\r\n\r\n    if (src.showRight)\r\n    {\r\n        tint = Utils.getTintAppendFloatAlphaAndSwap(src.fillRight, alpha);\r\n\r\n        if (reversed)\r\n        {\r\n            x0 = calcMatrix.getX(sizeA, -height);\r\n            y0 = calcMatrix.getY(sizeA, -height);\r\n        \r\n            x1 = calcMatrix.getX(0, sizeB);\r\n            y1 = calcMatrix.getY(0, sizeB);\r\n        \r\n            x2 = calcMatrix.getX(0, sizeB - height);\r\n            y2 = calcMatrix.getY(0, sizeB - height);\r\n        }\r\n        else\r\n        {\r\n            x0 = calcMatrix.getX(sizeA, 0);\r\n            y0 = calcMatrix.getY(sizeA, 0);\r\n        \r\n            x1 = calcMatrix.getX(0, sizeB);\r\n            y1 = calcMatrix.getY(0, sizeB);\r\n        \r\n            x2 = calcMatrix.getX(0, sizeB - height);\r\n            y2 = calcMatrix.getY(0, sizeB - height);\r\n        }\r\n\r\n        pipeline.setTexture2D();\r\n    \r\n        pipeline.batchTri(x0, y0, x1, y1, x2, y2, 0, 0, 1, 1, tint, tint, tint, 2);\r\n    }\r\n};\r\n\r\nmodule.exports = IsoTriangleWebGLRenderer;\r\n"]},"metadata":{},"sourceType":"script"}