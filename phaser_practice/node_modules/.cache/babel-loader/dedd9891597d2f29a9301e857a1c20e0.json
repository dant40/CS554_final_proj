{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Provides methods used for getting and setting the size of a Game Object.\r\n * \r\n * @namespace Phaser.GameObjects.Components.Size\r\n * @since 3.0.0\r\n */\nvar Size = {\n  /**\r\n   * A property indicating that a Game Object has this component.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Size#_sizeComponent\r\n   * @type {boolean}\r\n   * @private\r\n   * @default true\r\n   * @since 3.2.0\r\n   */\n  _sizeComponent: true,\n\n  /**\r\n   * The native (un-scaled) width of this Game Object.\r\n   * \r\n   * Changing this value will not change the size that the Game Object is rendered in-game.\r\n   * For that you need to either set the scale of the Game Object (`setScale`) or use\r\n   * the `displayWidth` property.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Size#width\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  width: 0,\n\n  /**\r\n   * The native (un-scaled) height of this Game Object.\r\n   * \r\n   * Changing this value will not change the size that the Game Object is rendered in-game.\r\n   * For that you need to either set the scale of the Game Object (`setScale`) or use\r\n   * the `displayHeight` property.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Size#height\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  height: 0,\n\n  /**\r\n   * The displayed width of this Game Object.\r\n   * \r\n   * This value takes into account the scale factor.\r\n   * \r\n   * Setting this value will adjust the Game Object's scale property.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Size#displayWidth\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  displayWidth: {\n    get: function () {\n      return Math.abs(this.scaleX * this.frame.realWidth);\n    },\n    set: function (value) {\n      this.scaleX = value / this.frame.realWidth;\n    }\n  },\n\n  /**\r\n   * The displayed height of this Game Object.\r\n   * \r\n   * This value takes into account the scale factor.\r\n   * \r\n   * Setting this value will adjust the Game Object's scale property.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Size#displayHeight\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  displayHeight: {\n    get: function () {\n      return Math.abs(this.scaleY * this.frame.realHeight);\n    },\n    set: function (value) {\n      this.scaleY = value / this.frame.realHeight;\n    }\n  },\n\n  /**\r\n   * Sets the size of this Game Object to be that of the given Frame.\r\n   * \r\n   * This will not change the size that the Game Object is rendered in-game.\r\n   * For that you need to either set the scale of the Game Object (`setScale`) or call the\r\n   * `setDisplaySize` method, which is the same thing as changing the scale but allows you\r\n   * to do so by giving pixel values.\r\n   * \r\n   * If you have enabled this Game Object for input, changing the size will _not_ change the\r\n   * size of the hit area. To do this you should adjust the `input.hitArea` object directly.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Size#setSizeToFrame\r\n   * @since 3.0.0\r\n   *\r\n   * @param {Phaser.Textures.Frame} frame - The frame to base the size of this Game Object on.\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  setSizeToFrame: function (frame) {\n    if (frame === undefined) {\n      frame = this.frame;\n    }\n\n    this.width = frame.realWidth;\n    this.height = frame.realHeight;\n    return this;\n  },\n\n  /**\r\n   * Sets the internal size of this Game Object, as used for frame or physics body creation.\r\n   * \r\n   * This will not change the size that the Game Object is rendered in-game.\r\n   * For that you need to either set the scale of the Game Object (`setScale`) or call the\r\n   * `setDisplaySize` method, which is the same thing as changing the scale but allows you\r\n   * to do so by giving pixel values.\r\n   * \r\n   * If you have enabled this Game Object for input, changing the size will _not_ change the\r\n   * size of the hit area. To do this you should adjust the `input.hitArea` object directly.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Size#setSize\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} width - The width of this Game Object.\r\n   * @param {number} height - The height of this Game Object.\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  setSize: function (width, height) {\n    this.width = width;\n    this.height = height;\n    return this;\n  },\n\n  /**\r\n   * Sets the display size of this Game Object.\r\n   * \r\n   * Calling this will adjust the scale.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Size#setDisplaySize\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} width - The width of this Game Object.\r\n   * @param {number} height - The height of this Game Object.\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  setDisplaySize: function (width, height) {\n    this.displayWidth = width;\n    this.displayHeight = height;\n    return this;\n  }\n};\nmodule.exports = Size;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/components/Size.js"],"names":["Size","_sizeComponent","width","height","displayWidth","get","Math","abs","scaleX","frame","realWidth","set","value","displayHeight","scaleY","realHeight","setSizeToFrame","undefined","setSize","setDisplaySize","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;AAOA,IAAIA,IAAI,GAAG;AAEP;;;;;;;;;AASAC,EAAAA,cAAc,EAAE,IAXT;;AAaP;;;;;;;;;;;AAWAC,EAAAA,KAAK,EAAE,CAxBA;;AA0BP;;;;;;;;;;;AAWAC,EAAAA,MAAM,EAAE,CArCD;;AAuCP;;;;;;;;;;;AAWAC,EAAAA,YAAY,EAAE;AAEVC,IAAAA,GAAG,EAAE,YACL;AACI,aAAOC,IAAI,CAACC,GAAL,CAAS,KAAKC,MAAL,GAAc,KAAKC,KAAL,CAAWC,SAAlC,CAAP;AACH,KALS;AAOVC,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKJ,MAAL,GAAcI,KAAK,GAAG,KAAKH,KAAL,CAAWC,SAAjC;AACH;AAVS,GAlDP;;AAgEP;;;;;;;;;;;AAWAG,EAAAA,aAAa,EAAE;AAEXR,IAAAA,GAAG,EAAE,YACL;AACI,aAAOC,IAAI,CAACC,GAAL,CAAS,KAAKO,MAAL,GAAc,KAAKL,KAAL,CAAWM,UAAlC,CAAP;AACH,KALU;AAOXJ,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKE,MAAL,GAAcF,KAAK,GAAG,KAAKH,KAAL,CAAWM,UAAjC;AACH;AAVU,GA3ER;;AAyFP;;;;;;;;;;;;;;;;;;AAkBAC,EAAAA,cAAc,EAAE,UAAUP,KAAV,EAChB;AACI,QAAIA,KAAK,KAAKQ,SAAd,EAAyB;AAAER,MAAAA,KAAK,GAAG,KAAKA,KAAb;AAAqB;;AAEhD,SAAKP,KAAL,GAAaO,KAAK,CAACC,SAAnB;AACA,SAAKP,MAAL,GAAcM,KAAK,CAACM,UAApB;AAEA,WAAO,IAAP;AACH,GAnHM;;AAqHP;;;;;;;;;;;;;;;;;;;AAmBAG,EAAAA,OAAO,EAAE,UAAUhB,KAAV,EAAiBC,MAAjB,EACT;AACI,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AAEA,WAAO,IAAP;AACH,GA9IM;;AAgJP;;;;;;;;;;;;;AAaAgB,EAAAA,cAAc,EAAE,UAAUjB,KAAV,EAAiBC,MAAjB,EAChB;AACI,SAAKC,YAAL,GAAoBF,KAApB;AACA,SAAKW,aAAL,GAAqBV,MAArB;AAEA,WAAO,IAAP;AACH;AAnKM,CAAX;AAuKAiB,MAAM,CAACC,OAAP,GAAiBrB,IAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for getting and setting the size of a Game Object.\r\n * \r\n * @namespace Phaser.GameObjects.Components.Size\r\n * @since 3.0.0\r\n */\r\n\r\nvar Size = {\r\n\r\n    /**\r\n     * A property indicating that a Game Object has this component.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Size#_sizeComponent\r\n     * @type {boolean}\r\n     * @private\r\n     * @default true\r\n     * @since 3.2.0\r\n     */\r\n    _sizeComponent: true,\r\n\r\n    /**\r\n     * The native (un-scaled) width of this Game Object.\r\n     * \r\n     * Changing this value will not change the size that the Game Object is rendered in-game.\r\n     * For that you need to either set the scale of the Game Object (`setScale`) or use\r\n     * the `displayWidth` property.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Size#width\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    width: 0,\r\n\r\n    /**\r\n     * The native (un-scaled) height of this Game Object.\r\n     * \r\n     * Changing this value will not change the size that the Game Object is rendered in-game.\r\n     * For that you need to either set the scale of the Game Object (`setScale`) or use\r\n     * the `displayHeight` property.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Size#height\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    height: 0,\r\n\r\n    /**\r\n     * The displayed width of this Game Object.\r\n     * \r\n     * This value takes into account the scale factor.\r\n     * \r\n     * Setting this value will adjust the Game Object's scale property.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Size#displayWidth\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    displayWidth: {\r\n\r\n        get: function ()\r\n        {\r\n            return Math.abs(this.scaleX * this.frame.realWidth);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.scaleX = value / this.frame.realWidth;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The displayed height of this Game Object.\r\n     * \r\n     * This value takes into account the scale factor.\r\n     * \r\n     * Setting this value will adjust the Game Object's scale property.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Size#displayHeight\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    displayHeight: {\r\n\r\n        get: function ()\r\n        {\r\n            return Math.abs(this.scaleY * this.frame.realHeight);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.scaleY = value / this.frame.realHeight;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the size of this Game Object to be that of the given Frame.\r\n     * \r\n     * This will not change the size that the Game Object is rendered in-game.\r\n     * For that you need to either set the scale of the Game Object (`setScale`) or call the\r\n     * `setDisplaySize` method, which is the same thing as changing the scale but allows you\r\n     * to do so by giving pixel values.\r\n     * \r\n     * If you have enabled this Game Object for input, changing the size will _not_ change the\r\n     * size of the hit area. To do this you should adjust the `input.hitArea` object directly.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Size#setSizeToFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Textures.Frame} frame - The frame to base the size of this Game Object on.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setSizeToFrame: function (frame)\r\n    {\r\n        if (frame === undefined) { frame = this.frame; }\r\n\r\n        this.width = frame.realWidth;\r\n        this.height = frame.realHeight;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal size of this Game Object, as used for frame or physics body creation.\r\n     * \r\n     * This will not change the size that the Game Object is rendered in-game.\r\n     * For that you need to either set the scale of the Game Object (`setScale`) or call the\r\n     * `setDisplaySize` method, which is the same thing as changing the scale but allows you\r\n     * to do so by giving pixel values.\r\n     * \r\n     * If you have enabled this Game Object for input, changing the size will _not_ change the\r\n     * size of the hit area. To do this you should adjust the `input.hitArea` object directly.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Size#setSize\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} width - The width of this Game Object.\r\n     * @param {number} height - The height of this Game Object.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setSize: function (width, height)\r\n    {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the display size of this Game Object.\r\n     * \r\n     * Calling this will adjust the scale.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Size#setDisplaySize\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} width - The width of this Game Object.\r\n     * @param {number} height - The height of this Game Object.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setDisplaySize: function (width, height)\r\n    {\r\n        this.displayWidth = width;\r\n        this.displayHeight = height;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Size;\r\n"]},"metadata":{},"sourceType":"script"}