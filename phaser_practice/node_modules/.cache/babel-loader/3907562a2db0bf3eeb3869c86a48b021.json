{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * A component to set restitution on objects.\r\n *\r\n * @namespace Phaser.Physics.Matter.Components.Bounce\r\n * @since 3.0.0\r\n */\nvar Bounce = {\n  /**\r\n   * Sets the restitution on the physics object.\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Bounce#setBounce\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - A Number that defines the restitution (elasticity) of the body. The value is always positive and is in the range (0, 1). A value of 0 means collisions may be perfectly inelastic and no bouncing may occur. A value of 0.8 means the body may bounce back with approximately 80% of its kinetic energy. Note that collision response is based on pairs of bodies, and that restitution values are combined with the following formula: `Math.max(bodyA.restitution, bodyB.restitution)`\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setBounce: function (value) {\n    this.body.restitution = value;\n    return this;\n  }\n};\nmodule.exports = Bounce;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/matter-js/components/Bounce.js"],"names":["Bounce","setBounce","value","body","restitution","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;AAMA,IAAIA,MAAM,GAAG;AAET;;;;;;;;;;AAUAC,EAAAA,SAAS,EAAE,UAAUC,KAAV,EACX;AACI,SAAKC,IAAL,CAAUC,WAAV,GAAwBF,KAAxB;AAEA,WAAO,IAAP;AACH;AAjBQ,CAAb;AAqBAG,MAAM,CAACC,OAAP,GAAiBN,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A component to set restitution on objects.\r\n *\r\n * @namespace Phaser.Physics.Matter.Components.Bounce\r\n * @since 3.0.0\r\n */\r\nvar Bounce = {\r\n\r\n    /**\r\n     * Sets the restitution on the physics object.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Bounce#setBounce\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - A Number that defines the restitution (elasticity) of the body. The value is always positive and is in the range (0, 1). A value of 0 means collisions may be perfectly inelastic and no bouncing may occur. A value of 0.8 means the body may bounce back with approximately 80% of its kinetic energy. Note that collision response is based on pairs of bodies, and that restitution values are combined with the following formula: `Math.max(bodyA.restitution, bodyB.restitution)`\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setBounce: function (value)\r\n    {\r\n        this.body.restitution = value;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Bounce;\r\n"]},"metadata":{},"sourceType":"script"}