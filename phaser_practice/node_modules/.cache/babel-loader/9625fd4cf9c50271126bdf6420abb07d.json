{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar StrokePathWebGL = require('../StrokePathWebGL');\n\nvar Utils = require('../../../renderer/webgl/Utils');\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Triangle#renderWebGL\r\n * @since 3.13.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Triangle} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\n\n\nvar TriangleWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\n  var pipeline = this.pipeline;\n  var camMatrix = pipeline._tempMatrix1;\n  var shapeMatrix = pipeline._tempMatrix2;\n  var calcMatrix = pipeline._tempMatrix3;\n  renderer.setPipeline(pipeline);\n  shapeMatrix.applyITRS(src.x, src.y, src.rotation, src.scaleX, src.scaleY);\n  camMatrix.copyFrom(camera.matrix);\n\n  if (parentMatrix) {\n    //  Multiply the camera by the parent matrix\n    camMatrix.multiplyWithOffset(parentMatrix, -camera.scrollX * src.scrollFactorX, -camera.scrollY * src.scrollFactorY); //  Undo the camera scroll\n\n    shapeMatrix.e = src.x;\n    shapeMatrix.f = src.y;\n  } else {\n    shapeMatrix.e -= camera.scrollX * src.scrollFactorX;\n    shapeMatrix.f -= camera.scrollY * src.scrollFactorY;\n  }\n\n  camMatrix.multiply(shapeMatrix, calcMatrix);\n  var dx = src._displayOriginX;\n  var dy = src._displayOriginY;\n  var alpha = camera.alpha * src.alpha;\n\n  if (src.isFilled) {\n    var fillTint = pipeline.fillTint;\n    var fillTintColor = Utils.getTintAppendFloatAlphaAndSwap(src.fillColor, src.fillAlpha * alpha);\n    fillTint.TL = fillTintColor;\n    fillTint.TR = fillTintColor;\n    fillTint.BL = fillTintColor;\n    fillTint.BR = fillTintColor;\n    var x1 = src.geom.x1 - dx;\n    var y1 = src.geom.y1 - dy;\n    var x2 = src.geom.x2 - dx;\n    var y2 = src.geom.y2 - dy;\n    var x3 = src.geom.x3 - dx;\n    var y3 = src.geom.y3 - dy;\n    pipeline.setTexture2D();\n    pipeline.batchFillTriangle(x1, y1, x2, y2, x3, y3, shapeMatrix, camMatrix);\n  }\n\n  if (src.isStroked) {\n    StrokePathWebGL(pipeline, src, alpha, dx, dy);\n  }\n};\n\nmodule.exports = TriangleWebGLRenderer;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/shape/triangle/TriangleWebGLRenderer.js"],"names":["StrokePathWebGL","require","Utils","TriangleWebGLRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","pipeline","camMatrix","_tempMatrix1","shapeMatrix","_tempMatrix2","calcMatrix","_tempMatrix3","setPipeline","applyITRS","x","y","rotation","scaleX","scaleY","copyFrom","matrix","multiplyWithOffset","scrollX","scrollFactorX","scrollY","scrollFactorY","e","f","multiply","dx","_displayOriginX","dy","_displayOriginY","alpha","isFilled","fillTint","fillTintColor","getTintAppendFloatAlphaAndSwap","fillColor","fillAlpha","TL","TR","BL","BR","x1","geom","y1","x2","y2","x3","y3","setTexture2D","batchFillTriangle","isStroked","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar StrokePathWebGL = require('../StrokePathWebGL');\r\nvar Utils = require('../../../renderer/webgl/Utils');\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Triangle#renderWebGL\r\n * @since 3.13.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Triangle} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TriangleWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    var pipeline = this.pipeline;\r\n\r\n    var camMatrix = pipeline._tempMatrix1;\r\n    var shapeMatrix = pipeline._tempMatrix2;\r\n    var calcMatrix = pipeline._tempMatrix3;\r\n\r\n    renderer.setPipeline(pipeline);\r\n\r\n    shapeMatrix.applyITRS(src.x, src.y, src.rotation, src.scaleX, src.scaleY);\r\n\r\n    camMatrix.copyFrom(camera.matrix);\r\n\r\n    if (parentMatrix)\r\n    {\r\n        //  Multiply the camera by the parent matrix\r\n        camMatrix.multiplyWithOffset(parentMatrix, -camera.scrollX * src.scrollFactorX, -camera.scrollY * src.scrollFactorY);\r\n\r\n        //  Undo the camera scroll\r\n        shapeMatrix.e = src.x;\r\n        shapeMatrix.f = src.y;\r\n    }\r\n    else\r\n    {\r\n        shapeMatrix.e -= camera.scrollX * src.scrollFactorX;\r\n        shapeMatrix.f -= camera.scrollY * src.scrollFactorY;\r\n    }\r\n\r\n    camMatrix.multiply(shapeMatrix, calcMatrix);\r\n\r\n    var dx = src._displayOriginX;\r\n    var dy = src._displayOriginY;\r\n    var alpha = camera.alpha * src.alpha;\r\n\r\n    if (src.isFilled)\r\n    {\r\n        var fillTint = pipeline.fillTint;\r\n        var fillTintColor = Utils.getTintAppendFloatAlphaAndSwap(src.fillColor, src.fillAlpha * alpha);\r\n\r\n        fillTint.TL = fillTintColor;\r\n        fillTint.TR = fillTintColor;\r\n        fillTint.BL = fillTintColor;\r\n        fillTint.BR = fillTintColor;\r\n\r\n        var x1 = src.geom.x1 - dx;\r\n        var y1 = src.geom.y1 - dy;\r\n        var x2 = src.geom.x2 - dx;\r\n        var y2 = src.geom.y2 - dy;\r\n        var x3 = src.geom.x3 - dx;\r\n        var y3 = src.geom.y3 - dy;\r\n\r\n        pipeline.setTexture2D();\r\n\r\n        pipeline.batchFillTriangle(\r\n            x1,\r\n            y1,\r\n            x2,\r\n            y2,\r\n            x3,\r\n            y3,\r\n            shapeMatrix,\r\n            camMatrix\r\n        );\r\n    }\r\n\r\n    if (src.isStroked)\r\n    {\r\n        StrokePathWebGL(pipeline, src, alpha, dx, dy);\r\n    }\r\n};\r\n\r\nmodule.exports = TriangleWebGLRenderer;\r\n"]},"metadata":{},"sourceType":"script"}