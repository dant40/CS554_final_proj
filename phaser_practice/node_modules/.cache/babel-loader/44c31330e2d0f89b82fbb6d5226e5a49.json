{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Returns the circumference of the given Ellipse.\r\n *\r\n * @function Phaser.Geom.Ellipse.Circumference\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to get the circumference of.\r\n *\r\n * @return {number} The circumference of th Ellipse.\r\n */\nvar Circumference = function (ellipse) {\n  var rx = ellipse.width / 2;\n  var ry = ellipse.height / 2;\n  var h = Math.pow(rx - ry, 2) / Math.pow(rx + ry, 2);\n  return Math.PI * (rx + ry) * (1 + 3 * h / (10 + Math.sqrt(4 - 3 * h)));\n};\n\nmodule.exports = Circumference;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/ellipse/Circumference.js"],"names":["Circumference","ellipse","rx","width","ry","height","h","Math","pow","PI","sqrt","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;AAUA,IAAIA,aAAa,GAAG,UAAUC,OAAV,EACpB;AACI,MAAIC,EAAE,GAAGD,OAAO,CAACE,KAAR,GAAgB,CAAzB;AACA,MAAIC,EAAE,GAAGH,OAAO,CAACI,MAAR,GAAiB,CAA1B;AACA,MAAIC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAUN,EAAE,GAAGE,EAAf,EAAoB,CAApB,IAAyBG,IAAI,CAACC,GAAL,CAAUN,EAAE,GAAGE,EAAf,EAAoB,CAApB,CAAjC;AAEA,SAAQG,IAAI,CAACE,EAAL,IAAWP,EAAE,GAAGE,EAAhB,CAAD,IAAyB,IAAM,IAAIE,CAAL,IAAW,KAAKC,IAAI,CAACG,IAAL,CAAU,IAAK,IAAIJ,CAAnB,CAAhB,CAA9B,CAAP;AACH,CAPD;;AASAK,MAAM,CAACC,OAAP,GAAiBZ,aAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Returns the circumference of the given Ellipse.\r\n *\r\n * @function Phaser.Geom.Ellipse.Circumference\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to get the circumference of.\r\n *\r\n * @return {number} The circumference of th Ellipse.\r\n */\r\nvar Circumference = function (ellipse)\r\n{\r\n    var rx = ellipse.width / 2;\r\n    var ry = ellipse.height / 2;\r\n    var h = Math.pow((rx - ry), 2) / Math.pow((rx + ry), 2);\r\n\r\n    return (Math.PI * (rx + ry)) * (1 + ((3 * h) / (10 + Math.sqrt(4 - (3 * h)))));\r\n};\r\n\r\nmodule.exports = Circumference;\r\n"]},"metadata":{},"sourceType":"script"}