{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar OS = require('./OS');\n\nvar Browser = require('./Browser');\n\nvar CanvasPool = require('../display/canvas/CanvasPool');\n/**\r\n * Determines the features of the browser running this Phaser Game instance.\r\n * These values are read-only and populated during the boot sequence of the game.\r\n * They are then referenced by internal game systems and are available for you to access\r\n * via `this.sys.game.device.features` from within any Scene.\r\n * \r\n * @typedef {object} Phaser.Device.Features\r\n * @since 3.0.0\r\n * \r\n * @property {?boolean} canvasBitBltShift - True if canvas supports a 'copy' bitblt onto itself when the source and destination regions overlap.\r\n * @property {boolean} canvas - Is canvas available?\r\n * @property {boolean} file - Is file available?\r\n * @property {boolean} fileSystem - Is fileSystem available?\r\n * @property {boolean} getUserMedia - Does the device support the getUserMedia API?\r\n * @property {boolean} littleEndian - Is the device big or little endian? (only detected if the browser supports TypedArrays)\r\n * @property {boolean} localStorage - Is localStorage available?\r\n * @property {boolean} pointerLock - Is Pointer Lock available?\r\n * @property {boolean} support32bit - Does the device context support 32bit pixel manipulation using array buffer views?\r\n * @property {boolean} vibration - Does the device support the Vibration API?\r\n * @property {boolean} webGL - Is webGL available?\r\n * @property {boolean} worker - Is worker available?\r\n */\n\n\nvar Features = {\n  canvas: false,\n  canvasBitBltShift: null,\n  file: false,\n  fileSystem: false,\n  getUserMedia: true,\n  littleEndian: false,\n  localStorage: false,\n  pointerLock: false,\n  support32bit: false,\n  vibration: false,\n  webGL: false,\n  worker: false\n}; // Check Little or Big Endian system.\n// @author Matt DesLauriers (@mattdesl)\n\nfunction checkIsLittleEndian() {\n  var a = new ArrayBuffer(4);\n  var b = new Uint8Array(a);\n  var c = new Uint32Array(a);\n  b[0] = 0xa1;\n  b[1] = 0xb2;\n  b[2] = 0xc3;\n  b[3] = 0xd4;\n\n  if (c[0] === 0xd4c3b2a1) {\n    return true;\n  }\n\n  if (c[0] === 0xa1b2c3d4) {\n    return false;\n  } else {\n    //  Could not determine endianness\n    return null;\n  }\n}\n\nfunction init() {\n  Features.canvas = !!window['CanvasRenderingContext2D'];\n\n  try {\n    Features.localStorage = !!localStorage.getItem;\n  } catch (error) {\n    Features.localStorage = false;\n  }\n\n  Features.file = !!window['File'] && !!window['FileReader'] && !!window['FileList'] && !!window['Blob'];\n  Features.fileSystem = !!window['requestFileSystem'];\n  var isUint8 = false;\n\n  var testWebGL = function () {\n    if (window['WebGLRenderingContext']) {\n      try {\n        var canvas = CanvasPool.createWebGL(this);\n        var ctx = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n        var canvas2D = CanvasPool.create2D(this);\n        var ctx2D = canvas2D.getContext('2d'); //  Can't be done on a webgl context\n\n        var image = ctx2D.createImageData(1, 1); //  Test to see if ImageData uses CanvasPixelArray or Uint8ClampedArray.\n        //  @author Matt DesLauriers (@mattdesl)\n\n        isUint8 = image.data instanceof Uint8ClampedArray;\n        CanvasPool.remove(canvas);\n        CanvasPool.remove(canvas2D);\n        return !!ctx;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return false;\n  };\n\n  Features.webGL = testWebGL();\n  Features.worker = !!window['Worker'];\n  Features.pointerLock = 'pointerLockElement' in document || 'mozPointerLockElement' in document || 'webkitPointerLockElement' in document;\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\n  window.URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n  Features.getUserMedia = Features.getUserMedia && !!navigator.getUserMedia && !!window.URL; // Older versions of firefox (< 21) apparently claim support but user media does not actually work\n\n  if (Browser.firefox && Browser.firefoxVersion < 21) {\n    Features.getUserMedia = false;\n  } // Excludes iOS versions as they generally wrap UIWebView (eg. Safari WebKit) and it\n  // is safer to not try and use the fast copy-over method.\n\n\n  if (!OS.iOS && (Browser.ie || Browser.firefox || Browser.chrome)) {\n    Features.canvasBitBltShift = true;\n  } // Known not to work\n\n\n  if (Browser.safari || Browser.mobileSafari) {\n    Features.canvasBitBltShift = false;\n  }\n\n  navigator.vibrate = navigator.vibrate || navigator.webkitVibrate || navigator.mozVibrate || navigator.msVibrate;\n\n  if (navigator.vibrate) {\n    Features.vibration = true;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && typeof Uint32Array !== 'undefined') {\n    Features.littleEndian = checkIsLittleEndian();\n  }\n\n  Features.support32bit = typeof ArrayBuffer !== 'undefined' && typeof Uint8ClampedArray !== 'undefined' && typeof Int32Array !== 'undefined' && Features.littleEndian !== null && isUint8;\n  return Features;\n}\n\nmodule.exports = init();","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/device/Features.js"],"names":["OS","require","Browser","CanvasPool","Features","canvas","canvasBitBltShift","file","fileSystem","getUserMedia","littleEndian","localStorage","pointerLock","support32bit","vibration","webGL","worker","checkIsLittleEndian","a","ArrayBuffer","b","Uint8Array","c","Uint32Array","init","window","getItem","error","isUint8","testWebGL","createWebGL","ctx","getContext","canvas2D","create2D","ctx2D","image","createImageData","data","Uint8ClampedArray","remove","e","document","navigator","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","oGetUserMedia","URL","webkitURL","mozURL","msURL","firefox","firefoxVersion","iOS","ie","chrome","safari","mobileSafari","vibrate","webkitVibrate","mozVibrate","msVibrate","Int32Array","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar OS = require('./OS');\r\nvar Browser = require('./Browser');\r\nvar CanvasPool = require('../display/canvas/CanvasPool');\r\n\r\n/**\r\n * Determines the features of the browser running this Phaser Game instance.\r\n * These values are read-only and populated during the boot sequence of the game.\r\n * They are then referenced by internal game systems and are available for you to access\r\n * via `this.sys.game.device.features` from within any Scene.\r\n * \r\n * @typedef {object} Phaser.Device.Features\r\n * @since 3.0.0\r\n * \r\n * @property {?boolean} canvasBitBltShift - True if canvas supports a 'copy' bitblt onto itself when the source and destination regions overlap.\r\n * @property {boolean} canvas - Is canvas available?\r\n * @property {boolean} file - Is file available?\r\n * @property {boolean} fileSystem - Is fileSystem available?\r\n * @property {boolean} getUserMedia - Does the device support the getUserMedia API?\r\n * @property {boolean} littleEndian - Is the device big or little endian? (only detected if the browser supports TypedArrays)\r\n * @property {boolean} localStorage - Is localStorage available?\r\n * @property {boolean} pointerLock - Is Pointer Lock available?\r\n * @property {boolean} support32bit - Does the device context support 32bit pixel manipulation using array buffer views?\r\n * @property {boolean} vibration - Does the device support the Vibration API?\r\n * @property {boolean} webGL - Is webGL available?\r\n * @property {boolean} worker - Is worker available?\r\n */\r\nvar Features = {\r\n\r\n    canvas: false,\r\n    canvasBitBltShift: null,\r\n    file: false,\r\n    fileSystem: false,\r\n    getUserMedia: true,\r\n    littleEndian: false,\r\n    localStorage: false,\r\n    pointerLock: false,\r\n    support32bit: false,\r\n    vibration: false,\r\n    webGL: false,\r\n    worker: false\r\n\r\n};\r\n\r\n// Check Little or Big Endian system.\r\n// @author Matt DesLauriers (@mattdesl)\r\nfunction checkIsLittleEndian ()\r\n{\r\n    var a = new ArrayBuffer(4);\r\n    var b = new Uint8Array(a);\r\n    var c = new Uint32Array(a);\r\n\r\n    b[0] = 0xa1;\r\n    b[1] = 0xb2;\r\n    b[2] = 0xc3;\r\n    b[3] = 0xd4;\r\n\r\n    if (c[0] === 0xd4c3b2a1)\r\n    {\r\n        return true;\r\n    }\r\n\r\n    if (c[0] === 0xa1b2c3d4)\r\n    {\r\n        return false;\r\n    }\r\n    else\r\n    {\r\n        //  Could not determine endianness\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction init ()\r\n{\r\n    Features.canvas = !!window['CanvasRenderingContext2D'];\r\n\r\n    try\r\n    {\r\n        Features.localStorage = !!localStorage.getItem;\r\n    }\r\n    catch (error)\r\n    {\r\n        Features.localStorage = false;\r\n    }\r\n\r\n    Features.file = !!window['File'] && !!window['FileReader'] && !!window['FileList'] && !!window['Blob'];\r\n    Features.fileSystem = !!window['requestFileSystem'];\r\n\r\n    var isUint8 = false;\r\n\r\n    var testWebGL = function ()\r\n    {\r\n        if (window['WebGLRenderingContext'])\r\n        {\r\n            try\r\n            {\r\n                var canvas = CanvasPool.createWebGL(this);\r\n\r\n                var ctx = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n\r\n                var canvas2D = CanvasPool.create2D(this);\r\n\r\n                var ctx2D = canvas2D.getContext('2d');\r\n\r\n                //  Can't be done on a webgl context\r\n                var image = ctx2D.createImageData(1, 1);\r\n\r\n                //  Test to see if ImageData uses CanvasPixelArray or Uint8ClampedArray.\r\n                //  @author Matt DesLauriers (@mattdesl)\r\n                isUint8 = image.data instanceof Uint8ClampedArray;\r\n\r\n                CanvasPool.remove(canvas);\r\n                CanvasPool.remove(canvas2D);\r\n\r\n                return !!ctx;\r\n            }\r\n            catch (e)\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    Features.webGL = testWebGL();\r\n\r\n    Features.worker = !!window['Worker'];\r\n\r\n    Features.pointerLock = 'pointerLockElement' in document || 'mozPointerLockElement' in document || 'webkitPointerLockElement' in document;\r\n\r\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\r\n\r\n    window.URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\r\n\r\n    Features.getUserMedia = Features.getUserMedia && !!navigator.getUserMedia && !!window.URL;\r\n\r\n    // Older versions of firefox (< 21) apparently claim support but user media does not actually work\r\n    if (Browser.firefox && Browser.firefoxVersion < 21)\r\n    {\r\n        Features.getUserMedia = false;\r\n    }\r\n\r\n    // Excludes iOS versions as they generally wrap UIWebView (eg. Safari WebKit) and it\r\n    // is safer to not try and use the fast copy-over method.\r\n    if (!OS.iOS && (Browser.ie || Browser.firefox || Browser.chrome))\r\n    {\r\n        Features.canvasBitBltShift = true;\r\n    }\r\n\r\n    // Known not to work\r\n    if (Browser.safari || Browser.mobileSafari)\r\n    {\r\n        Features.canvasBitBltShift = false;\r\n    }\r\n\r\n    navigator.vibrate = navigator.vibrate || navigator.webkitVibrate || navigator.mozVibrate || navigator.msVibrate;\r\n\r\n    if (navigator.vibrate)\r\n    {\r\n        Features.vibration = true;\r\n    }\r\n\r\n    if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && typeof Uint32Array !== 'undefined')\r\n    {\r\n        Features.littleEndian = checkIsLittleEndian();\r\n    }\r\n\r\n    Features.support32bit = (\r\n        typeof ArrayBuffer !== 'undefined' &&\r\n        typeof Uint8ClampedArray !== 'undefined' &&\r\n        typeof Int32Array !== 'undefined' &&\r\n        Features.littleEndian !== null &&\r\n        isUint8\r\n    );\r\n\r\n    return Features;\r\n}\r\n\r\nmodule.exports = init();\r\n"]},"metadata":{},"sourceType":"script"}