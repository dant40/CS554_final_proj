{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar GameObjectCreator = require('../GameObjectCreator');\n\nvar Graphics = require('./Graphics');\n/**\r\n * Creates a new Graphics Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Graphics Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#graphics\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Graphics} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('graphics', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  }\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  var graphics = new Graphics(this.scene, config);\n\n  if (config.add) {\n    this.scene.sys.displayList.add(graphics);\n  }\n\n  return graphics;\n}); //  When registering a factory function 'this' refers to the GameObjectCreator context.","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/graphics/GraphicsCreator.js"],"names":["GameObjectCreator","require","Graphics","register","config","addToScene","undefined","add","graphics","scene","sys","displayList"],"mappings":"AAAA;;;;;AAMA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,sBAAD,CAA/B;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAtB;AAEA;;;;;;;;;;;;;;;AAaAD,iBAAiB,CAACG,QAAlB,CAA2B,UAA3B,EAAuC,UAAUC,MAAV,EAAkBC,UAAlB,EACvC;AACI,MAAID,MAAM,KAAKE,SAAf,EAA0B;AAAEF,IAAAA,MAAM,GAAG,EAAT;AAAc;;AAE1C,MAAIC,UAAU,KAAKC,SAAnB,EACA;AACIF,IAAAA,MAAM,CAACG,GAAP,GAAaF,UAAb;AACH;;AAED,MAAIG,QAAQ,GAAG,IAAIN,QAAJ,CAAa,KAAKO,KAAlB,EAAyBL,MAAzB,CAAf;;AAEA,MAAIA,MAAM,CAACG,GAAX,EACA;AACI,SAAKE,KAAL,CAAWC,GAAX,CAAeC,WAAf,CAA2BJ,GAA3B,CAA+BC,QAA/B;AACH;;AAED,SAAOA,QAAP;AACH,CAjBD,E,CAmBA","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GameObjectCreator = require('../GameObjectCreator');\r\nvar Graphics = require('./Graphics');\r\n\r\n/**\r\n * Creates a new Graphics Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Graphics Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#graphics\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Graphics} The Game Object that was created.\r\n */\r\nGameObjectCreator.register('graphics', function (config, addToScene)\r\n{\r\n    if (config === undefined) { config = {}; }\r\n\r\n    if (addToScene !== undefined)\r\n    {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    var graphics = new Graphics(this.scene, config);\r\n\r\n    if (config.add)\r\n    {\r\n        this.scene.sys.displayList.add(graphics);\r\n    }\r\n    \r\n    return graphics;\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectCreator context.\r\n"]},"metadata":{},"sourceType":"script"}