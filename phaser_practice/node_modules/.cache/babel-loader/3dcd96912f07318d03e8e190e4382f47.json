{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Point = require('../point/Point');\n/**\r\n * Get the midpoint of the given line.\r\n *\r\n * @function Phaser.Geom.Line.GetMidPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to get the midpoint of.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An optional point object to store the midpoint in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} The midpoint of the Line.\r\n */\n\n\nvar GetMidPoint = function (line, out) {\n  if (out === undefined) {\n    out = new Point();\n  }\n\n  out.x = (line.x1 + line.x2) / 2;\n  out.y = (line.y1 + line.y2) / 2;\n  return out;\n};\n\nmodule.exports = GetMidPoint;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/line/GetMidPoint.js"],"names":["Point","require","GetMidPoint","line","out","undefined","x","x1","x2","y","y1","y2","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB;AAEA;;;;;;;;;;;;;;;AAaA,IAAIC,WAAW,GAAG,UAAUC,IAAV,EAAgBC,GAAhB,EAClB;AACI,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AAAED,IAAAA,GAAG,GAAG,IAAIJ,KAAJ,EAAN;AAAoB;;AAE7CI,EAAAA,GAAG,CAACE,CAAJ,GAAQ,CAACH,IAAI,CAACI,EAAL,GAAUJ,IAAI,CAACK,EAAhB,IAAsB,CAA9B;AACAJ,EAAAA,GAAG,CAACK,CAAJ,GAAQ,CAACN,IAAI,CAACO,EAAL,GAAUP,IAAI,CAACQ,EAAhB,IAAsB,CAA9B;AAEA,SAAOP,GAAP;AACH,CARD;;AAUAQ,MAAM,CAACC,OAAP,GAAiBX,WAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Get the midpoint of the given line.\r\n *\r\n * @function Phaser.Geom.Line.GetMidPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to get the midpoint of.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An optional point object to store the midpoint in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} The midpoint of the Line.\r\n */\r\nvar GetMidPoint = function (line, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    out.x = (line.x1 + line.x2) / 2;\r\n    out.y = (line.y1 + line.y2) / 2;\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetMidPoint;\r\n"]},"metadata":{},"sourceType":"script"}