{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Decode base-64 encoded data, for example as exported by Tiled.\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Tiled.Base64Decode\r\n * @since 3.0.0\r\n *\r\n * @param {object} data - Base-64 encoded data to decode.\r\n *\r\n * @return {array} Array containing the decoded bytes.\r\n */\nvar Base64Decode = function (data) {\n  var binaryString = window.atob(data);\n  var len = binaryString.length;\n  var bytes = new Array(len / 4); // Interpret binaryString as an array of bytes representing little-endian encoded uint32 values.\n\n  for (var i = 0; i < len; i += 4) {\n    bytes[i / 4] = (binaryString.charCodeAt(i) | binaryString.charCodeAt(i + 1) << 8 | binaryString.charCodeAt(i + 2) << 16 | binaryString.charCodeAt(i + 3) << 24) >>> 0;\n  }\n\n  return bytes;\n};\n\nmodule.exports = Base64Decode;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/tilemaps/parsers/tiled/Base64Decode.js"],"names":["Base64Decode","data","binaryString","window","atob","len","length","bytes","Array","i","charCodeAt","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;AAUA,IAAIA,YAAY,GAAG,UAAUC,IAAV,EACnB;AACI,MAAIC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAAnB;AACA,MAAII,GAAG,GAAGH,YAAY,CAACI,MAAvB;AACA,MAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUH,GAAG,GAAG,CAAhB,CAAZ,CAHJ,CAKI;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAApB,EAAyBI,CAAC,IAAI,CAA9B,EACA;AACIF,IAAAA,KAAK,CAACE,CAAC,GAAG,CAAL,CAAL,GAAe,CACXP,YAAY,CAACQ,UAAb,CAAwBD,CAAxB,IACAP,YAAY,CAACQ,UAAb,CAAwBD,CAAC,GAAG,CAA5B,KAAkC,CADlC,GAEAP,YAAY,CAACQ,UAAb,CAAwBD,CAAC,GAAG,CAA5B,KAAkC,EAFlC,GAGAP,YAAY,CAACQ,UAAb,CAAwBD,CAAC,GAAG,CAA5B,KAAkC,EAJvB,MAKT,CALN;AAMH;;AAED,SAAOF,KAAP;AACH,CAlBD;;AAoBAI,MAAM,CAACC,OAAP,GAAiBZ,YAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Decode base-64 encoded data, for example as exported by Tiled.\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Tiled.Base64Decode\r\n * @since 3.0.0\r\n *\r\n * @param {object} data - Base-64 encoded data to decode.\r\n *\r\n * @return {array} Array containing the decoded bytes.\r\n */\r\nvar Base64Decode = function (data)\r\n{\r\n    var binaryString = window.atob(data);\r\n    var len = binaryString.length;\r\n    var bytes = new Array(len / 4);\r\n\r\n    // Interpret binaryString as an array of bytes representing little-endian encoded uint32 values.\r\n    for (var i = 0; i < len; i += 4)\r\n    {\r\n        bytes[i / 4] = (\r\n            binaryString.charCodeAt(i) |\r\n            binaryString.charCodeAt(i + 1) << 8 |\r\n            binaryString.charCodeAt(i + 2) << 16 |\r\n            binaryString.charCodeAt(i + 3) << 24\r\n        ) >>> 0;\r\n    }\r\n\r\n    return bytes;\r\n};\r\n\r\nmodule.exports = Base64Decode;\r\n"]},"metadata":{},"sourceType":"script"}