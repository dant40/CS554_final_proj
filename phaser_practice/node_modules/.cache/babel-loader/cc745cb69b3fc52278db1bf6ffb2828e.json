{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * The Impact Friction component.\r\n * Should be applied as a mixin.\r\n *\r\n * @namespace Phaser.Physics.Impact.Components.Friction\r\n * @since 3.0.0\r\n */\nvar Friction = {\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.Friction#setFrictionX\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - [description]\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setFrictionX: function (x) {\n    this.friction.x = x;\n    return this;\n  },\n\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.Friction#setFrictionY\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} y - [description]\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setFrictionY: function (y) {\n    this.friction.y = y;\n    return this;\n  },\n\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.Friction#setFriction\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - [description]\r\n   * @param {number} y - [description]\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setFriction: function (x, y) {\n    this.friction.x = x;\n    this.friction.y = y;\n    return this;\n  }\n};\nmodule.exports = Friction;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/impact/components/Friction.js"],"names":["Friction","setFrictionX","x","friction","setFrictionY","y","setFriction","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;AAOA,IAAIA,QAAQ,GAAG;AAEX;;;;;;;;;;AAUAC,EAAAA,YAAY,EAAE,UAAUC,CAAV,EACd;AACI,SAAKC,QAAL,CAAcD,CAAd,GAAkBA,CAAlB;AAEA,WAAO,IAAP;AACH,GAjBU;;AAmBX;;;;;;;;;;AAUAE,EAAAA,YAAY,EAAE,UAAUC,CAAV,EACd;AACI,SAAKF,QAAL,CAAcE,CAAd,GAAkBA,CAAlB;AAEA,WAAO,IAAP;AACH,GAlCU;;AAoCX;;;;;;;;;;;AAWAC,EAAAA,WAAW,EAAE,UAAUJ,CAAV,EAAaG,CAAb,EACb;AACI,SAAKF,QAAL,CAAcD,CAAd,GAAkBA,CAAlB;AACA,SAAKC,QAAL,CAAcE,CAAd,GAAkBA,CAAlB;AAEA,WAAO,IAAP;AACH;AArDU,CAAf;AAyDAE,MAAM,CAACC,OAAP,GAAiBR,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Impact Friction component.\r\n * Should be applied as a mixin.\r\n *\r\n * @namespace Phaser.Physics.Impact.Components.Friction\r\n * @since 3.0.0\r\n */\r\nvar Friction = {\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Physics.Impact.Components.Friction#setFrictionX\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - [description]\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setFrictionX: function (x)\r\n    {\r\n        this.friction.x = x;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Physics.Impact.Components.Friction#setFrictionY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} y - [description]\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setFrictionY: function (y)\r\n    {\r\n        this.friction.y = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Physics.Impact.Components.Friction#setFriction\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - [description]\r\n     * @param {number} y - [description]\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setFriction: function (x, y)\r\n    {\r\n        this.friction.x = x;\r\n        this.friction.y = y;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Friction;\r\n"]},"metadata":{},"sourceType":"script"}