{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar RotateAroundXY = require('./RotateAroundXY');\n/**\r\n * Rotate a line around its midpoint by the given angle in radians.\r\n *\r\n * @function Phaser.Geom.Line.Rotate\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Line} O - [line,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to rotate.\r\n * @param {number} angle - The angle of rotation in radians.\r\n *\r\n * @return {Phaser.Geom.Line} The rotated line.\r\n */\n\n\nvar Rotate = function (line, angle) {\n  var x = (line.x1 + line.x2) / 2;\n  var y = (line.y1 + line.y2) / 2;\n  return RotateAroundXY(line, x, y, angle);\n};\n\nmodule.exports = Rotate;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/line/Rotate.js"],"names":["RotateAroundXY","require","Rotate","line","angle","x","x1","x2","y","y1","y2","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;AAEA;;;;;;;;;;;;;;;AAaA,IAAIC,MAAM,GAAG,UAAUC,IAAV,EAAgBC,KAAhB,EACb;AACI,MAAIC,CAAC,GAAG,CAACF,IAAI,CAACG,EAAL,GAAUH,IAAI,CAACI,EAAhB,IAAsB,CAA9B;AACA,MAAIC,CAAC,GAAG,CAACL,IAAI,CAACM,EAAL,GAAUN,IAAI,CAACO,EAAhB,IAAsB,CAA9B;AAEA,SAAOV,cAAc,CAACG,IAAD,EAAOE,CAAP,EAAUG,CAAV,EAAaJ,KAAb,CAArB;AACH,CAND;;AAQAO,MAAM,CAACC,OAAP,GAAiBV,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar RotateAroundXY = require('./RotateAroundXY');\r\n\r\n/**\r\n * Rotate a line around its midpoint by the given angle in radians.\r\n *\r\n * @function Phaser.Geom.Line.Rotate\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Line} O - [line,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to rotate.\r\n * @param {number} angle - The angle of rotation in radians.\r\n *\r\n * @return {Phaser.Geom.Line} The rotated line.\r\n */\r\nvar Rotate = function (line, angle)\r\n{\r\n    var x = (line.x1 + line.x2) / 2;\r\n    var y = (line.y1 + line.y2) / 2;\r\n\r\n    return RotateAroundXY(line, x, y, angle);\r\n};\r\n\r\nmodule.exports = Rotate;\r\n"]},"metadata":{},"sourceType":"script"}