{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Contains methods for changing the friction of a Game Object's Matter Body. Should be used a mixin, not called directly.\r\n *\r\n * @namespace Phaser.Physics.Matter.Components.Friction\r\n * @since 3.0.0\r\n */\nvar Friction = {\n  /**\r\n   * Sets new friction values for this Game Object's Matter Body.\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Friction#setFriction\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The new friction of the body, between 0 and 1, where 0 allows the Body to slide indefinitely, while 1 allows it to stop almost immediately after a force is applied.\r\n   * @param {number} [air] - If provided, the new air resistance of the Body. The higher the value, the faster the Body will slow as it moves through space. 0 means the body has no air resistance.\r\n   * @param {number} [fstatic] - If provided, the new static friction of the Body. The higher the value (e.g. 10), the more force it will take to initially get the Body moving when it is nearly stationary. 0 means the body will never \"stick\" when it is nearly stationary.\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setFriction: function (value, air, fstatic) {\n    this.body.friction = value;\n\n    if (air !== undefined) {\n      this.body.frictionAir = air;\n    }\n\n    if (fstatic !== undefined) {\n      this.body.frictionStatic = fstatic;\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Sets a new air resistance for this Game Object's Matter Body.\r\n   * A value of 0 means the Body will never slow as it moves through space.\r\n   * The higher the value, the faster a Body slows when moving through space.\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Friction#setFrictionAir\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The new air resistance for the Body.\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setFrictionAir: function (value) {\n    this.body.frictionAir = value;\n    return this;\n  },\n\n  /**\r\n   * Sets a new static friction for this Game Object's Matter Body.\r\n   * A value of 0 means the Body will never \"stick\" when it is nearly stationary.\r\n   * The higher the value (e.g. 10), the more force it will take to initially get the Body moving when it is nearly stationary.\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Friction#setFrictionStatic\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The new static friction for the Body.\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setFrictionStatic: function (value) {\n    this.body.frictionStatic = value;\n    return this;\n  }\n};\nmodule.exports = Friction;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/matter-js/components/Friction.js"],"names":["Friction","setFriction","value","air","fstatic","body","friction","undefined","frictionAir","frictionStatic","setFrictionAir","setFrictionStatic","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;AAMA,IAAIA,QAAQ,GAAG;AAEX;;;;;;;;;;;;AAYAC,EAAAA,WAAW,EAAE,UAAUC,KAAV,EAAiBC,GAAjB,EAAsBC,OAAtB,EACb;AACI,SAAKC,IAAL,CAAUC,QAAV,GAAqBJ,KAArB;;AAEA,QAAIC,GAAG,KAAKI,SAAZ,EACA;AACI,WAAKF,IAAL,CAAUG,WAAV,GAAwBL,GAAxB;AACH;;AAED,QAAIC,OAAO,KAAKG,SAAhB,EACA;AACI,WAAKF,IAAL,CAAUI,cAAV,GAA2BL,OAA3B;AACH;;AAED,WAAO,IAAP;AACH,GA7BU;;AA+BX;;;;;;;;;;;;AAYAM,EAAAA,cAAc,EAAE,UAAUR,KAAV,EAChB;AACI,SAAKG,IAAL,CAAUG,WAAV,GAAwBN,KAAxB;AAEA,WAAO,IAAP;AACH,GAhDU;;AAkDX;;;;;;;;;;;;AAYAS,EAAAA,iBAAiB,EAAE,UAAUT,KAAV,EACnB;AACI,SAAKG,IAAL,CAAUI,cAAV,GAA2BP,KAA3B;AAEA,WAAO,IAAP;AACH;AAnEU,CAAf;AAuEAU,MAAM,CAACC,OAAP,GAAiBb,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Contains methods for changing the friction of a Game Object's Matter Body. Should be used a mixin, not called directly.\r\n *\r\n * @namespace Phaser.Physics.Matter.Components.Friction\r\n * @since 3.0.0\r\n */\r\nvar Friction = {\r\n\r\n    /**\r\n     * Sets new friction values for this Game Object's Matter Body.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Friction#setFriction\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The new friction of the body, between 0 and 1, where 0 allows the Body to slide indefinitely, while 1 allows it to stop almost immediately after a force is applied.\r\n     * @param {number} [air] - If provided, the new air resistance of the Body. The higher the value, the faster the Body will slow as it moves through space. 0 means the body has no air resistance.\r\n     * @param {number} [fstatic] - If provided, the new static friction of the Body. The higher the value (e.g. 10), the more force it will take to initially get the Body moving when it is nearly stationary. 0 means the body will never \"stick\" when it is nearly stationary.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setFriction: function (value, air, fstatic)\r\n    {\r\n        this.body.friction = value;\r\n\r\n        if (air !== undefined)\r\n        {\r\n            this.body.frictionAir = air;\r\n        }\r\n\r\n        if (fstatic !== undefined)\r\n        {\r\n            this.body.frictionStatic = fstatic;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets a new air resistance for this Game Object's Matter Body.\r\n     * A value of 0 means the Body will never slow as it moves through space.\r\n     * The higher the value, the faster a Body slows when moving through space.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Friction#setFrictionAir\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The new air resistance for the Body.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setFrictionAir: function (value)\r\n    {\r\n        this.body.frictionAir = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets a new static friction for this Game Object's Matter Body.\r\n     * A value of 0 means the Body will never \"stick\" when it is nearly stationary.\r\n     * The higher the value (e.g. 10), the more force it will take to initially get the Body moving when it is nearly stationary.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Friction#setFrictionStatic\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The new static friction for the Body.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setFrictionStatic: function (value)\r\n    {\r\n        this.body.frictionStatic = value;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Friction;\r\n"]},"metadata":{},"sourceType":"script"}