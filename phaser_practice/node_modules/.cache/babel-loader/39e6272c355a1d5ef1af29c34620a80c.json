{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n//  Merges source rectangle into target rectangle and returns target\n//  Neither rect should have negative widths or heights\n\n/**\r\n * Merges the source rectangle into the target rectangle and returns the target.\r\n * Neither rectangle should have a negative width or height.\r\n *\r\n * @function Phaser.Geom.Rectangle.MergeRect\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [target,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} target - Target rectangle. Will be modified to include source rectangle.\r\n * @param {Phaser.Geom.Rectangle} source - Rectangle that will be merged into target rectangle.\r\n *\r\n * @return {Phaser.Geom.Rectangle} Modified target rectangle that contains source rectangle.\r\n */\nvar MergeRect = function (target, source) {\n  var minX = Math.min(target.x, source.x);\n  var maxX = Math.max(target.right, source.right);\n  target.x = minX;\n  target.width = maxX - minX;\n  var minY = Math.min(target.y, source.y);\n  var maxY = Math.max(target.bottom, source.bottom);\n  target.y = minY;\n  target.height = maxY - minY;\n  return target;\n};\n\nmodule.exports = MergeRect;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/rectangle/MergeRect.js"],"names":["MergeRect","target","source","minX","Math","min","x","maxX","max","right","width","minY","y","maxY","bottom","height","module","exports"],"mappings":"AAAA;;;;;AAMA;AACA;;AAEA;;;;;;;;;;;;;;AAcA,IAAIA,SAAS,GAAG,UAAUC,MAAV,EAAkBC,MAAlB,EAChB;AACI,MAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASJ,MAAM,CAACK,CAAhB,EAAmBJ,MAAM,CAACI,CAA1B,CAAX;AACA,MAAIC,IAAI,GAAGH,IAAI,CAACI,GAAL,CAASP,MAAM,CAACQ,KAAhB,EAAuBP,MAAM,CAACO,KAA9B,CAAX;AAEAR,EAAAA,MAAM,CAACK,CAAP,GAAWH,IAAX;AACAF,EAAAA,MAAM,CAACS,KAAP,GAAeH,IAAI,GAAGJ,IAAtB;AAEA,MAAIQ,IAAI,GAAGP,IAAI,CAACC,GAAL,CAASJ,MAAM,CAACW,CAAhB,EAAmBV,MAAM,CAACU,CAA1B,CAAX;AACA,MAAIC,IAAI,GAAGT,IAAI,CAACI,GAAL,CAASP,MAAM,CAACa,MAAhB,EAAwBZ,MAAM,CAACY,MAA/B,CAAX;AAEAb,EAAAA,MAAM,CAACW,CAAP,GAAWD,IAAX;AACAV,EAAAA,MAAM,CAACc,MAAP,GAAgBF,IAAI,GAAGF,IAAvB;AAEA,SAAOV,MAAP;AACH,CAfD;;AAiBAe,MAAM,CAACC,OAAP,GAAiBjB,SAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  Merges source rectangle into target rectangle and returns target\r\n//  Neither rect should have negative widths or heights\r\n\r\n/**\r\n * Merges the source rectangle into the target rectangle and returns the target.\r\n * Neither rectangle should have a negative width or height.\r\n *\r\n * @function Phaser.Geom.Rectangle.MergeRect\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [target,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} target - Target rectangle. Will be modified to include source rectangle.\r\n * @param {Phaser.Geom.Rectangle} source - Rectangle that will be merged into target rectangle.\r\n *\r\n * @return {Phaser.Geom.Rectangle} Modified target rectangle that contains source rectangle.\r\n */\r\nvar MergeRect = function (target, source)\r\n{\r\n    var minX = Math.min(target.x, source.x);\r\n    var maxX = Math.max(target.right, source.right);\r\n\r\n    target.x = minX;\r\n    target.width = maxX - minX;\r\n\r\n    var minY = Math.min(target.y, source.y);\r\n    var maxY = Math.max(target.bottom, source.bottom);\r\n\r\n    target.y = minY;\r\n    target.height = maxY - minY;\r\n\r\n    return target;\r\n};\r\n\r\nmodule.exports = MergeRect;\r\n"]},"metadata":{},"sourceType":"script"}