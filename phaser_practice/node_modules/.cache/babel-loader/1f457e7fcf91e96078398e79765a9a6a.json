{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * The Impact Acceleration component.\r\n * Should be applied as a mixin.\r\n *\r\n * @namespace Phaser.Physics.Impact.Components.Acceleration\r\n * @since 3.0.0\r\n */\nvar Acceleration = {\n  /**\r\n   * Sets the horizontal acceleration of this body.\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.Acceleration#setAccelerationX\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The amount of acceleration to apply.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setAccelerationX: function (x) {\n    this.accel.x = x;\n    return this;\n  },\n\n  /**\r\n   * Sets the vertical acceleration of this body.\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.Acceleration#setAccelerationY\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} y - The amount of acceleration to apply.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setAccelerationY: function (y) {\n    this.accel.y = y;\n    return this;\n  },\n\n  /**\r\n   * Sets the horizontal and vertical acceleration of this body.\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.Acceleration#setAcceleration\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The amount of horizontal acceleration to apply.\r\n   * @param {number} y - The amount of vertical acceleration to apply.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setAcceleration: function (x, y) {\n    this.accel.x = x;\n    this.accel.y = y;\n    return this;\n  }\n};\nmodule.exports = Acceleration;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/impact/components/Acceleration.js"],"names":["Acceleration","setAccelerationX","x","accel","setAccelerationY","y","setAcceleration","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;AAOA,IAAIA,YAAY,GAAG;AAEf;;;;;;;;;;AAUAC,EAAAA,gBAAgB,EAAE,UAAUC,CAAV,EAClB;AACI,SAAKC,KAAL,CAAWD,CAAX,GAAeA,CAAf;AAEA,WAAO,IAAP;AACH,GAjBc;;AAmBf;;;;;;;;;;AAUAE,EAAAA,gBAAgB,EAAE,UAAUC,CAAV,EAClB;AACI,SAAKF,KAAL,CAAWE,CAAX,GAAeA,CAAf;AAEA,WAAO,IAAP;AACH,GAlCc;;AAoCf;;;;;;;;;;;AAWAC,EAAAA,eAAe,EAAE,UAAUJ,CAAV,EAAaG,CAAb,EACjB;AACI,SAAKF,KAAL,CAAWD,CAAX,GAAeA,CAAf;AACA,SAAKC,KAAL,CAAWE,CAAX,GAAeA,CAAf;AAEA,WAAO,IAAP;AACH;AArDc,CAAnB;AAyDAE,MAAM,CAACC,OAAP,GAAiBR,YAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Impact Acceleration component.\r\n * Should be applied as a mixin.\r\n *\r\n * @namespace Phaser.Physics.Impact.Components.Acceleration\r\n * @since 3.0.0\r\n */\r\nvar Acceleration = {\r\n\r\n    /**\r\n     * Sets the horizontal acceleration of this body.\r\n     *\r\n     * @method Phaser.Physics.Impact.Components.Acceleration#setAccelerationX\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The amount of acceleration to apply.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setAccelerationX: function (x)\r\n    {\r\n        this.accel.x = x;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the vertical acceleration of this body.\r\n     *\r\n     * @method Phaser.Physics.Impact.Components.Acceleration#setAccelerationY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} y - The amount of acceleration to apply.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setAccelerationY: function (y)\r\n    {\r\n        this.accel.y = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the horizontal and vertical acceleration of this body.\r\n     *\r\n     * @method Phaser.Physics.Impact.Components.Acceleration#setAcceleration\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The amount of horizontal acceleration to apply.\r\n     * @param {number} y - The amount of vertical acceleration to apply.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setAcceleration: function (x, y)\r\n    {\r\n        this.accel.x = x;\r\n        this.accel.y = y;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Acceleration;\r\n"]},"metadata":{},"sourceType":"script"}