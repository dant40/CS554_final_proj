{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Provides methods used for visually flipping a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n * \r\n * @namespace Phaser.GameObjects.Components.Flip\r\n * @since 3.0.0\r\n */\nvar Flip = {\n  /**\r\n   * The horizontally flipped state of the Game Object.\r\n   * \r\n   * A Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\n   * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n   * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Flip#flipX\r\n   * @type {boolean}\r\n   * @default false\r\n   * @since 3.0.0\r\n   */\n  flipX: false,\n\n  /**\r\n   * The vertically flipped state of the Game Object.\r\n   * \r\n   * A Game Object that is flipped vertically will render inversed on the vertical axis (i.e. upside down)\r\n   * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n   * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Flip#flipY\r\n   * @type {boolean}\r\n   * @default false\r\n   * @since 3.0.0\r\n   */\n  flipY: false,\n\n  /**\r\n   * Toggles the horizontal flipped state of this Game Object.\r\n   * \r\n   * A Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\n   * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n   * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Flip#toggleFlipX\r\n   * @since 3.0.0\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  toggleFlipX: function () {\n    this.flipX = !this.flipX;\n    return this;\n  },\n\n  /**\r\n   * Toggles the vertical flipped state of this Game Object.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Flip#toggleFlipY\r\n   * @since 3.0.0\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  toggleFlipY: function () {\n    this.flipY = !this.flipY;\n    return this;\n  },\n\n  /**\r\n   * Sets the horizontal flipped state of this Game Object.\r\n   * \r\n   * A Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\n   * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n   * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Flip#setFlipX\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} value - The flipped state. `false` for no flip, or `true` to be flipped.\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  setFlipX: function (value) {\n    this.flipX = value;\n    return this;\n  },\n\n  /**\r\n   * Sets the vertical flipped state of this Game Object.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Flip#setFlipY\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} value - The flipped state. `false` for no flip, or `true` to be flipped.\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  setFlipY: function (value) {\n    this.flipY = value;\n    return this;\n  },\n\n  /**\r\n   * Sets the horizontal and vertical flipped state of this Game Object.\r\n   * \r\n   * A Game Object that is flipped will render inversed on the flipped axis.\r\n   * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n   * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Flip#setFlip\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} x - The horizontal flipped state. `false` for no flip, or `true` to be flipped.\r\n   * @param {boolean} y - The horizontal flipped state. `false` for no flip, or `true` to be flipped.\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  setFlip: function (x, y) {\n    this.flipX = x;\n    this.flipY = y;\n    return this;\n  },\n\n  /**\r\n   * Resets the horizontal and vertical flipped state of this Game Object back to their default un-flipped state.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Flip#resetFlip\r\n   * @since 3.0.0\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  resetFlip: function () {\n    this.flipX = false;\n    this.flipY = false;\n    return this;\n  }\n};\nmodule.exports = Flip;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/components/Flip.js"],"names":["Flip","flipX","flipY","toggleFlipX","toggleFlipY","setFlipX","value","setFlipY","setFlip","x","y","resetFlip","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;AAQA,IAAIA,IAAI,GAAG;AAEP;;;;;;;;;;;;AAYAC,EAAAA,KAAK,EAAE,KAdA;;AAgBP;;;;;;;;;;;;AAYAC,EAAAA,KAAK,EAAE,KA5BA;;AA8BP;;;;;;;;;;;;AAYAC,EAAAA,WAAW,EAAE,YACb;AACI,SAAKF,KAAL,GAAa,CAAC,KAAKA,KAAnB;AAEA,WAAO,IAAP;AACH,GA/CM;;AAiDP;;;;;;;;AAQAG,EAAAA,WAAW,EAAE,YACb;AACI,SAAKF,KAAL,GAAa,CAAC,KAAKA,KAAnB;AAEA,WAAO,IAAP;AACH,GA9DM;;AAgEP;;;;;;;;;;;;;;AAcAG,EAAAA,QAAQ,EAAE,UAAUC,KAAV,EACV;AACI,SAAKL,KAAL,GAAaK,KAAb;AAEA,WAAO,IAAP;AACH,GAnFM;;AAqFP;;;;;;;;;;AAUAC,EAAAA,QAAQ,EAAE,UAAUD,KAAV,EACV;AACI,SAAKJ,KAAL,GAAaI,KAAb;AAEA,WAAO,IAAP;AACH,GApGM;;AAsGP;;;;;;;;;;;;;;;AAeAE,EAAAA,OAAO,EAAE,UAAUC,CAAV,EAAaC,CAAb,EACT;AACI,SAAKT,KAAL,GAAaQ,CAAb;AACA,SAAKP,KAAL,GAAaQ,CAAb;AAEA,WAAO,IAAP;AACH,GA3HM;;AA6HP;;;;;;;;AAQAC,EAAAA,SAAS,EAAE,YACX;AACI,SAAKV,KAAL,GAAa,KAAb;AACA,SAAKC,KAAL,GAAa,KAAb;AAEA,WAAO,IAAP;AACH;AA3IM,CAAX;AA+IAU,MAAM,CAACC,OAAP,GAAiBb,IAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for visually flipping a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n * \r\n * @namespace Phaser.GameObjects.Components.Flip\r\n * @since 3.0.0\r\n */\r\n\r\nvar Flip = {\r\n\r\n    /**\r\n     * The horizontally flipped state of the Game Object.\r\n     * \r\n     * A Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\n     * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n     * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Flip#flipX\r\n     * @type {boolean}\r\n     * @default false\r\n     * @since 3.0.0\r\n     */\r\n    flipX: false,\r\n\r\n    /**\r\n     * The vertically flipped state of the Game Object.\r\n     * \r\n     * A Game Object that is flipped vertically will render inversed on the vertical axis (i.e. upside down)\r\n     * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n     * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Flip#flipY\r\n     * @type {boolean}\r\n     * @default false\r\n     * @since 3.0.0\r\n     */\r\n    flipY: false,\r\n\r\n    /**\r\n     * Toggles the horizontal flipped state of this Game Object.\r\n     * \r\n     * A Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\n     * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n     * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Flip#toggleFlipX\r\n     * @since 3.0.0\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    toggleFlipX: function ()\r\n    {\r\n        this.flipX = !this.flipX;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Toggles the vertical flipped state of this Game Object.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Flip#toggleFlipY\r\n     * @since 3.0.0\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    toggleFlipY: function ()\r\n    {\r\n        this.flipY = !this.flipY;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the horizontal flipped state of this Game Object.\r\n     * \r\n     * A Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\n     * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n     * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Flip#setFlipX\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} value - The flipped state. `false` for no flip, or `true` to be flipped.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFlipX: function (value)\r\n    {\r\n        this.flipX = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the vertical flipped state of this Game Object.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Flip#setFlipY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} value - The flipped state. `false` for no flip, or `true` to be flipped.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFlipY: function (value)\r\n    {\r\n        this.flipY = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the horizontal and vertical flipped state of this Game Object.\r\n     * \r\n     * A Game Object that is flipped will render inversed on the flipped axis.\r\n     * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n     * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Flip#setFlip\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} x - The horizontal flipped state. `false` for no flip, or `true` to be flipped.\r\n     * @param {boolean} y - The horizontal flipped state. `false` for no flip, or `true` to be flipped.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFlip: function (x, y)\r\n    {\r\n        this.flipX = x;\r\n        this.flipY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the horizontal and vertical flipped state of this Game Object back to their default un-flipped state.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Flip#resetFlip\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    resetFlip: function ()\r\n    {\r\n        this.flipX = false;\r\n        this.flipY = false;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Flip;\r\n"]},"metadata":{},"sourceType":"script"}