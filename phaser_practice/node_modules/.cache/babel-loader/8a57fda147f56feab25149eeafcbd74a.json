{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Physics.Impact.SeparateX\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Impact.World} world - [description]\r\n * @param {Phaser.Physics.Impact.Body} left - [description]\r\n * @param {Phaser.Physics.Impact.Body} right - [description]\r\n * @param {Phaser.Physics.Impact.Body} [weak] - [description]\r\n */\nvar SeparateX = function (world, left, right, weak) {\n  var nudge = left.pos.x + left.size.x - right.pos.x; // We have a weak entity, so just move this one\n\n  if (weak) {\n    var strong = left === weak ? right : left;\n    weak.vel.x = -weak.vel.x * weak.bounciness + strong.vel.x;\n    var resWeak = world.collisionMap.trace(weak.pos.x, weak.pos.y, weak === left ? -nudge : nudge, 0, weak.size.x, weak.size.y);\n    weak.pos.x = resWeak.pos.x;\n  } else {\n    var v2 = (left.vel.x - right.vel.x) / 2;\n    left.vel.x = -v2;\n    right.vel.x = v2;\n    var resLeft = world.collisionMap.trace(left.pos.x, left.pos.y, -nudge / 2, 0, left.size.x, left.size.y);\n    left.pos.x = Math.floor(resLeft.pos.x);\n    var resRight = world.collisionMap.trace(right.pos.x, right.pos.y, nudge / 2, 0, right.size.x, right.size.y);\n    right.pos.x = Math.ceil(resRight.pos.x);\n  }\n};\n\nmodule.exports = SeparateX;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/impact/SeparateX.js"],"names":["SeparateX","world","left","right","weak","nudge","pos","x","size","strong","vel","bounciness","resWeak","collisionMap","trace","y","v2","resLeft","Math","floor","resRight","ceil","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;AAWA,IAAIA,SAAS,GAAG,UAAUC,KAAV,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAChB;AACI,MAAIC,KAAK,GAAGH,IAAI,CAACI,GAAL,CAASC,CAAT,GAAaL,IAAI,CAACM,IAAL,CAAUD,CAAvB,GAA2BJ,KAAK,CAACG,GAAN,CAAUC,CAAjD,CADJ,CAGI;;AACA,MAAIH,IAAJ,EACA;AACI,QAAIK,MAAM,GAAIP,IAAI,KAAKE,IAAV,GAAkBD,KAAlB,GAA0BD,IAAvC;AAEAE,IAAAA,IAAI,CAACM,GAAL,CAASH,CAAT,GAAa,CAACH,IAAI,CAACM,GAAL,CAASH,CAAV,GAAcH,IAAI,CAACO,UAAnB,GAAgCF,MAAM,CAACC,GAAP,CAAWH,CAAxD;AAEA,QAAIK,OAAO,GAAGX,KAAK,CAACY,YAAN,CAAmBC,KAAnB,CAAyBV,IAAI,CAACE,GAAL,CAASC,CAAlC,EAAqCH,IAAI,CAACE,GAAL,CAASS,CAA9C,EAAiDX,IAAI,KAAKF,IAAT,GAAgB,CAACG,KAAjB,GAAyBA,KAA1E,EAAiF,CAAjF,EAAoFD,IAAI,CAACI,IAAL,CAAUD,CAA9F,EAAiGH,IAAI,CAACI,IAAL,CAAUO,CAA3G,CAAd;AAEAX,IAAAA,IAAI,CAACE,GAAL,CAASC,CAAT,GAAaK,OAAO,CAACN,GAAR,CAAYC,CAAzB;AACH,GATD,MAWA;AACI,QAAIS,EAAE,GAAG,CAACd,IAAI,CAACQ,GAAL,CAASH,CAAT,GAAaJ,KAAK,CAACO,GAAN,CAAUH,CAAxB,IAA6B,CAAtC;AAEAL,IAAAA,IAAI,CAACQ,GAAL,CAASH,CAAT,GAAa,CAACS,EAAd;AACAb,IAAAA,KAAK,CAACO,GAAN,CAAUH,CAAV,GAAcS,EAAd;AAEA,QAAIC,OAAO,GAAGhB,KAAK,CAACY,YAAN,CAAmBC,KAAnB,CAAyBZ,IAAI,CAACI,GAAL,CAASC,CAAlC,EAAqCL,IAAI,CAACI,GAAL,CAASS,CAA9C,EAAiD,CAACV,KAAD,GAAS,CAA1D,EAA6D,CAA7D,EAAgEH,IAAI,CAACM,IAAL,CAAUD,CAA1E,EAA6EL,IAAI,CAACM,IAAL,CAAUO,CAAvF,CAAd;AAEAb,IAAAA,IAAI,CAACI,GAAL,CAASC,CAAT,GAAaW,IAAI,CAACC,KAAL,CAAWF,OAAO,CAACX,GAAR,CAAYC,CAAvB,CAAb;AAEA,QAAIa,QAAQ,GAAGnB,KAAK,CAACY,YAAN,CAAmBC,KAAnB,CAAyBX,KAAK,CAACG,GAAN,CAAUC,CAAnC,EAAsCJ,KAAK,CAACG,GAAN,CAAUS,CAAhD,EAAmDV,KAAK,GAAG,CAA3D,EAA8D,CAA9D,EAAiEF,KAAK,CAACK,IAAN,CAAWD,CAA5E,EAA+EJ,KAAK,CAACK,IAAN,CAAWO,CAA1F,CAAf;AAEAZ,IAAAA,KAAK,CAACG,GAAN,CAAUC,CAAV,GAAcW,IAAI,CAACG,IAAL,CAAUD,QAAQ,CAACd,GAAT,CAAaC,CAAvB,CAAd;AACH;AACJ,CA9BD;;AAgCAe,MAAM,CAACC,OAAP,GAAiBvB,SAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Physics.Impact.SeparateX\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Impact.World} world - [description]\r\n * @param {Phaser.Physics.Impact.Body} left - [description]\r\n * @param {Phaser.Physics.Impact.Body} right - [description]\r\n * @param {Phaser.Physics.Impact.Body} [weak] - [description]\r\n */\r\nvar SeparateX = function (world, left, right, weak)\r\n{\r\n    var nudge = left.pos.x + left.size.x - right.pos.x;\r\n    \r\n    // We have a weak entity, so just move this one\r\n    if (weak)\r\n    {\r\n        var strong = (left === weak) ? right : left;\r\n\r\n        weak.vel.x = -weak.vel.x * weak.bounciness + strong.vel.x;\r\n        \r\n        var resWeak = world.collisionMap.trace(weak.pos.x, weak.pos.y, weak === left ? -nudge : nudge, 0, weak.size.x, weak.size.y);\r\n\r\n        weak.pos.x = resWeak.pos.x;\r\n    }\r\n    else\r\n    {\r\n        var v2 = (left.vel.x - right.vel.x) / 2;\r\n\r\n        left.vel.x = -v2;\r\n        right.vel.x = v2;\r\n    \r\n        var resLeft = world.collisionMap.trace(left.pos.x, left.pos.y, -nudge / 2, 0, left.size.x, left.size.y);\r\n\r\n        left.pos.x = Math.floor(resLeft.pos.x);\r\n        \r\n        var resRight = world.collisionMap.trace(right.pos.x, right.pos.y, nudge / 2, 0, right.size.x, right.size.y);\r\n\r\n        right.pos.x = Math.ceil(resRight.pos.x);\r\n    }\r\n};\r\n\r\nmodule.exports = SeparateX;\r\n"]},"metadata":{},"sourceType":"script"}