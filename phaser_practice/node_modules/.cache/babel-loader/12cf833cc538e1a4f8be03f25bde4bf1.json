{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar GetFastValue = require('../utils/object/GetFastValue');\n\nvar UppercaseFirst = require('../utils/string/UppercaseFirst');\n/**\r\n * Builds an array of which physics plugins should be activated for the given Scene.\r\n *\r\n * @function Phaser.Scenes.GetPhysicsPlugins\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scenes.Systems} sys - The scene system to get the physics systems of.\r\n *\r\n * @return {array} An array of Physics systems to start for this Scene.\r\n */\n\n\nvar GetPhysicsPlugins = function (sys) {\n  var defaultSystem = sys.game.config.defaultPhysicsSystem;\n  var sceneSystems = GetFastValue(sys.settings, 'physics', false);\n\n  if (!defaultSystem && !sceneSystems) {\n    //  No default physics system or systems in this scene\n    return;\n  } //  Let's build the systems array\n\n\n  var output = [];\n\n  if (defaultSystem) {\n    output.push(UppercaseFirst(defaultSystem + 'Physics'));\n  }\n\n  if (sceneSystems) {\n    for (var key in sceneSystems) {\n      key = UppercaseFirst(key.concat('Physics'));\n\n      if (output.indexOf(key) === -1) {\n        output.push(key);\n      }\n    }\n  } //  An array of Physics systems to start for this Scene\n\n\n  return output;\n};\n\nmodule.exports = GetPhysicsPlugins;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/scene/GetPhysicsPlugins.js"],"names":["GetFastValue","require","UppercaseFirst","GetPhysicsPlugins","sys","defaultSystem","game","config","defaultPhysicsSystem","sceneSystems","settings","output","push","key","concat","indexOf","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,YAAY,GAAGC,OAAO,CAAC,8BAAD,CAA1B;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,gCAAD,CAA5B;AAEA;;;;;;;;;;;;AAUA,IAAIE,iBAAiB,GAAG,UAAUC,GAAV,EACxB;AACI,MAAIC,aAAa,GAAGD,GAAG,CAACE,IAAJ,CAASC,MAAT,CAAgBC,oBAApC;AACA,MAAIC,YAAY,GAAGT,YAAY,CAACI,GAAG,CAACM,QAAL,EAAe,SAAf,EAA0B,KAA1B,CAA/B;;AAEA,MAAI,CAACL,aAAD,IAAkB,CAACI,YAAvB,EACA;AACI;AACA;AACH,GARL,CAUI;;;AACA,MAAIE,MAAM,GAAG,EAAb;;AAEA,MAAIN,aAAJ,EACA;AACIM,IAAAA,MAAM,CAACC,IAAP,CAAYV,cAAc,CAACG,aAAa,GAAG,SAAjB,CAA1B;AACH;;AAED,MAAII,YAAJ,EACA;AACI,SAAK,IAAII,GAAT,IAAgBJ,YAAhB,EACA;AACII,MAAAA,GAAG,GAAGX,cAAc,CAACW,GAAG,CAACC,MAAJ,CAAW,SAAX,CAAD,CAApB;;AAEA,UAAIH,MAAM,CAACI,OAAP,CAAeF,GAAf,MAAwB,CAAC,CAA7B,EACA;AACIF,QAAAA,MAAM,CAACC,IAAP,CAAYC,GAAZ;AACH;AACJ;AACJ,GA7BL,CA+BI;;;AACA,SAAOF,MAAP;AACH,CAlCD;;AAoCAK,MAAM,CAACC,OAAP,GAAiBd,iBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetFastValue = require('../utils/object/GetFastValue');\r\nvar UppercaseFirst = require('../utils/string/UppercaseFirst');\r\n\r\n/**\r\n * Builds an array of which physics plugins should be activated for the given Scene.\r\n *\r\n * @function Phaser.Scenes.GetPhysicsPlugins\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scenes.Systems} sys - The scene system to get the physics systems of.\r\n *\r\n * @return {array} An array of Physics systems to start for this Scene.\r\n */\r\nvar GetPhysicsPlugins = function (sys)\r\n{\r\n    var defaultSystem = sys.game.config.defaultPhysicsSystem;\r\n    var sceneSystems = GetFastValue(sys.settings, 'physics', false);\r\n\r\n    if (!defaultSystem && !sceneSystems)\r\n    {\r\n        //  No default physics system or systems in this scene\r\n        return;\r\n    }\r\n\r\n    //  Let's build the systems array\r\n    var output = [];\r\n\r\n    if (defaultSystem)\r\n    {\r\n        output.push(UppercaseFirst(defaultSystem + 'Physics'));\r\n    }\r\n\r\n    if (sceneSystems)\r\n    {\r\n        for (var key in sceneSystems)\r\n        {\r\n            key = UppercaseFirst(key.concat('Physics'));\r\n\r\n            if (output.indexOf(key) === -1)\r\n            {\r\n                output.push(key);\r\n            }\r\n        }\r\n    }\r\n\r\n    //  An array of Physics systems to start for this Scene\r\n    return output;\r\n};\r\n\r\nmodule.exports = GetPhysicsPlugins;\r\n"]},"metadata":{},"sourceType":"script"}