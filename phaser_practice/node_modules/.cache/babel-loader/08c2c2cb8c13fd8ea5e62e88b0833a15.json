{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Rectangle = require('../rectangle/Rectangle');\n/**\r\n * Calculates the bounding AABB rectangle of a polygon.\r\n *\r\n * @function Phaser.Geom.Polygon.GetAABB\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Polygon} polygon - The polygon that should be calculated.\r\n * @param {(Phaser.Geom.Rectangle|object)} [out] - The rectangle or object that has x, y, width, and height properties to store the result. Optional.\r\n *\r\n * @return {(Phaser.Geom.Rectangle|object)} The resulting rectangle or object that is passed in with position and dimensions of the polygon's AABB.\r\n */\n\n\nvar GetAABB = function (polygon, out) {\n  if (out === undefined) {\n    out = new Rectangle();\n  }\n\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -minX;\n  var maxY = -minY;\n  var p;\n\n  for (var i = 0; i < polygon.points.length; i++) {\n    p = polygon.points[i];\n    minX = Math.min(minX, p.x);\n    minY = Math.min(minY, p.y);\n    maxX = Math.max(maxX, p.x);\n    maxY = Math.max(maxY, p.y);\n  }\n\n  out.x = minX;\n  out.y = minY;\n  out.width = maxX - minX;\n  out.height = maxY - minY;\n  return out;\n};\n\nmodule.exports = GetAABB;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/polygon/GetAABB.js"],"names":["Rectangle","require","GetAABB","polygon","out","undefined","minX","Infinity","minY","maxX","maxY","p","i","points","length","Math","min","x","y","max","width","height","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,SAAS,GAAGC,OAAO,CAAC,wBAAD,CAAvB;AAEA;;;;;;;;;;;;;;;AAaA,IAAIC,OAAO,GAAG,UAAUC,OAAV,EAAmBC,GAAnB,EACd;AACI,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AAAED,IAAAA,GAAG,GAAG,IAAIJ,SAAJ,EAAN;AAAwB;;AAEjD,MAAIM,IAAI,GAAGC,QAAX;AACA,MAAIC,IAAI,GAAGD,QAAX;AACA,MAAIE,IAAI,GAAG,CAACH,IAAZ;AACA,MAAII,IAAI,GAAG,CAACF,IAAZ;AACA,MAAIG,CAAJ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACU,MAAR,CAAeC,MAAnC,EAA2CF,CAAC,EAA5C,EACA;AACID,IAAAA,CAAC,GAAGR,OAAO,CAACU,MAAR,CAAeD,CAAf,CAAJ;AAEAN,IAAAA,IAAI,GAAGS,IAAI,CAACC,GAAL,CAASV,IAAT,EAAeK,CAAC,CAACM,CAAjB,CAAP;AACAT,IAAAA,IAAI,GAAGO,IAAI,CAACC,GAAL,CAASR,IAAT,EAAeG,CAAC,CAACO,CAAjB,CAAP;AACAT,IAAAA,IAAI,GAAGM,IAAI,CAACI,GAAL,CAASV,IAAT,EAAeE,CAAC,CAACM,CAAjB,CAAP;AACAP,IAAAA,IAAI,GAAGK,IAAI,CAACI,GAAL,CAAST,IAAT,EAAeC,CAAC,CAACO,CAAjB,CAAP;AACH;;AAEDd,EAAAA,GAAG,CAACa,CAAJ,GAAQX,IAAR;AACAF,EAAAA,GAAG,CAACc,CAAJ,GAAQV,IAAR;AACAJ,EAAAA,GAAG,CAACgB,KAAJ,GAAYX,IAAI,GAAGH,IAAnB;AACAF,EAAAA,GAAG,CAACiB,MAAJ,GAAaX,IAAI,GAAGF,IAApB;AAEA,SAAOJ,GAAP;AACH,CA1BD;;AA4BAkB,MAAM,CAACC,OAAP,GAAiBrB,OAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Rectangle = require('../rectangle/Rectangle');\r\n\r\n/**\r\n * Calculates the bounding AABB rectangle of a polygon.\r\n *\r\n * @function Phaser.Geom.Polygon.GetAABB\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Polygon} polygon - The polygon that should be calculated.\r\n * @param {(Phaser.Geom.Rectangle|object)} [out] - The rectangle or object that has x, y, width, and height properties to store the result. Optional.\r\n *\r\n * @return {(Phaser.Geom.Rectangle|object)} The resulting rectangle or object that is passed in with position and dimensions of the polygon's AABB.\r\n */\r\nvar GetAABB = function (polygon, out)\r\n{\r\n    if (out === undefined) { out = new Rectangle(); }\r\n\r\n    var minX = Infinity;\r\n    var minY = Infinity;\r\n    var maxX = -minX;\r\n    var maxY = -minY;\r\n    var p;\r\n\r\n    for (var i = 0; i < polygon.points.length; i++)\r\n    {\r\n        p = polygon.points[i];\r\n\r\n        minX = Math.min(minX, p.x);\r\n        minY = Math.min(minY, p.y);\r\n        maxX = Math.max(maxX, p.x);\r\n        maxY = Math.max(maxY, p.y);\r\n    }\r\n\r\n    out.x = minX;\r\n    out.y = minY;\r\n    out.width = maxX - minX;\r\n    out.height = maxY - minY;\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetAABB;\r\n"]},"metadata":{},"sourceType":"script"}