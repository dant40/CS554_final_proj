{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Bounce ease-in/out.\r\n *\r\n * @function Phaser.Math.Easing.Bounce.InOut\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n *\r\n * @return {number} The tweened value.\r\n */\nvar InOut = function (v) {\n  var reverse = false;\n\n  if (v < 0.5) {\n    v = 1 - v * 2;\n    reverse = true;\n  } else {\n    v = v * 2 - 1;\n  }\n\n  if (v < 1 / 2.75) {\n    v = 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    v = 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\n  } else if (v < 2.5 / 2.75) {\n    v = 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\n  } else {\n    v = 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\n  }\n\n  if (reverse) {\n    return (1 - v) * 0.5;\n  } else {\n    return v * 0.5 + 0.5;\n  }\n};\n\nmodule.exports = InOut;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/math/easing/bounce/InOut.js"],"names":["InOut","v","reverse","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;AAUA,IAAIA,KAAK,GAAG,UAAUC,CAAV,EACZ;AACI,MAAIC,OAAO,GAAG,KAAd;;AAEA,MAAID,CAAC,GAAG,GAAR,EACA;AACIA,IAAAA,CAAC,GAAG,IAAKA,CAAC,GAAG,CAAb;AACAC,IAAAA,OAAO,GAAG,IAAV;AACH,GAJD,MAMA;AACID,IAAAA,CAAC,GAAIA,CAAC,GAAG,CAAL,GAAU,CAAd;AACH;;AAED,MAAIA,CAAC,GAAG,IAAI,IAAZ,EACA;AACIA,IAAAA,CAAC,GAAG,SAASA,CAAT,GAAaA,CAAjB;AACH,GAHD,MAIK,IAAIA,CAAC,GAAG,IAAI,IAAZ,EACL;AACIA,IAAAA,CAAC,GAAG,UAAUA,CAAC,IAAI,MAAM,IAArB,IAA6BA,CAA7B,GAAiC,IAArC;AACH,GAHI,MAIA,IAAIA,CAAC,GAAG,MAAM,IAAd,EACL;AACIA,IAAAA,CAAC,GAAG,UAAUA,CAAC,IAAI,OAAO,IAAtB,IAA8BA,CAA9B,GAAkC,MAAtC;AACH,GAHI,MAKL;AACIA,IAAAA,CAAC,GAAG,UAAUA,CAAC,IAAI,QAAQ,IAAvB,IAA+BA,CAA/B,GAAmC,QAAvC;AACH;;AAED,MAAIC,OAAJ,EACA;AACI,WAAO,CAAC,IAAID,CAAL,IAAU,GAAjB;AACH,GAHD,MAKA;AACI,WAAOA,CAAC,GAAG,GAAJ,GAAU,GAAjB;AACH;AACJ,CAvCD;;AAyCAE,MAAM,CAACC,OAAP,GAAiBJ,KAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Bounce ease-in/out.\r\n *\r\n * @function Phaser.Math.Easing.Bounce.InOut\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n *\r\n * @return {number} The tweened value.\r\n */\r\nvar InOut = function (v)\r\n{\r\n    var reverse = false;\r\n\r\n    if (v < 0.5)\r\n    {\r\n        v = 1 - (v * 2);\r\n        reverse = true;\r\n    }\r\n    else\r\n    {\r\n        v = (v * 2) - 1;\r\n    }\r\n\r\n    if (v < 1 / 2.75)\r\n    {\r\n        v = 7.5625 * v * v;\r\n    }\r\n    else if (v < 2 / 2.75)\r\n    {\r\n        v = 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\r\n    }\r\n    else if (v < 2.5 / 2.75)\r\n    {\r\n        v = 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\r\n    }\r\n    else\r\n    {\r\n        v = 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\r\n    }\r\n\r\n    if (reverse)\r\n    {\r\n        return (1 - v) * 0.5;\r\n    }\r\n    else\r\n    {\r\n        return v * 0.5 + 0.5;\r\n    }\r\n};\r\n\r\nmodule.exports = InOut;\r\n"]},"metadata":{},"sourceType":"script"}