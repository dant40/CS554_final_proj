{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @author       Pavle Goloskokovic <pgoloskokovic@gmail.com> (http://prunegames.com)\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar BaseSound = require('../BaseSound');\n\nvar Class = require('../../utils/Class');\n\nvar EventEmitter = require('eventemitter3');\n\nvar Extend = require('../../utils/object/Extend');\n/**\r\n * @classdesc\r\n * No audio implementation of the sound. It is used if audio has been\r\n * disabled in the game config or the device doesn't support any audio.\r\n *\r\n * It represents a graceful degradation of sound logic that provides\r\n * minimal functionality and prevents Phaser projects that use audio from\r\n * breaking on devices that don't support any audio playback technologies.\r\n *\r\n * @class NoAudioSound\r\n * @extends Phaser.Sound.BaseSound\r\n * @memberof Phaser.Sound\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Sound.NoAudioSoundManager} manager - Reference to the current sound manager instance.\r\n * @param {string} key - Asset key for the sound.\r\n * @param {Phaser.Types.Sound.SoundConfig} [config={}] - An optional config object containing default sound settings.\r\n */\n\n\nvar NoAudioSound = new Class({\n  Extends: EventEmitter,\n  initialize: function NoAudioSound(manager, key, config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    EventEmitter.call(this);\n    this.manager = manager;\n    this.key = key;\n    this.isPlaying = false;\n    this.isPaused = false;\n    this.totalRate = 1;\n    this.duration = 0;\n    this.totalDuration = 0;\n    this.config = Extend({\n      mute: false,\n      volume: 1,\n      rate: 1,\n      detune: 0,\n      seek: 0,\n      loop: false,\n      delay: 0\n    }, config);\n    this.currentConfig = this.config;\n    this.mute = false;\n    this.volume = 1;\n    this.rate = 1;\n    this.detune = 0;\n    this.seek = 0;\n    this.loop = false;\n    this.markers = {};\n    this.currentMarker = null;\n    this.pendingRemove = false;\n  },\n  // eslint-disable-next-line no-unused-vars\n  addMarker: function (marker) {\n    return false;\n  },\n  // eslint-disable-next-line no-unused-vars\n  updateMarker: function (marker) {\n    return false;\n  },\n  // eslint-disable-next-line no-unused-vars\n  removeMarker: function (markerName) {\n    return null;\n  },\n  // eslint-disable-next-line no-unused-vars\n  play: function (markerName, config) {\n    return false;\n  },\n  pause: function () {\n    return false;\n  },\n  resume: function () {\n    return false;\n  },\n  stop: function () {\n    return false;\n  },\n  destroy: function () {\n    this.manager.remove(this);\n    BaseSound.prototype.destroy.call(this);\n  }\n});\nmodule.exports = NoAudioSound;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/sound/noaudio/NoAudioSound.js"],"names":["BaseSound","require","Class","EventEmitter","Extend","NoAudioSound","Extends","initialize","manager","key","config","call","isPlaying","isPaused","totalRate","duration","totalDuration","mute","volume","rate","detune","seek","loop","delay","currentConfig","markers","currentMarker","pendingRemove","addMarker","marker","updateMarker","removeMarker","markerName","play","pause","resume","stop","destroy","remove","prototype","module","exports"],"mappings":"AAAA;;;;;;AAOA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,2BAAD,CAApB;AAEA;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAII,YAAY,GAAG,IAAIH,KAAJ,CAAU;AAEzBI,EAAAA,OAAO,EAAEH,YAFgB;AAIzBI,EAAAA,UAAU,EAEV,SAASF,YAAT,CAAuBG,OAAvB,EAAgCC,GAAhC,EAAqCC,MAArC,EACA;AACI,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,EAAT;AAAc;;AAEvCP,IAAAA,YAAY,CAACQ,IAAb,CAAkB,IAAlB;AAEA,SAAKH,OAAL,GAAeA,OAAf;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKG,SAAL,GAAiB,KAAjB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,aAAL,GAAqB,CAArB;AAEA,SAAKN,MAAL,GAAcN,MAAM,CAAC;AACjBa,MAAAA,IAAI,EAAE,KADW;AAEjBC,MAAAA,MAAM,EAAE,CAFS;AAGjBC,MAAAA,IAAI,EAAE,CAHW;AAIjBC,MAAAA,MAAM,EAAE,CAJS;AAKjBC,MAAAA,IAAI,EAAE,CALW;AAMjBC,MAAAA,IAAI,EAAE,KANW;AAOjBC,MAAAA,KAAK,EAAE;AAPU,KAAD,EAQjBb,MARiB,CAApB;AAUA,SAAKc,aAAL,GAAqB,KAAKd,MAA1B;AACA,SAAKO,IAAL,GAAY,KAAZ;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,IAAL,GAAY,CAAZ;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,IAAL,GAAY,CAAZ;AACA,SAAKC,IAAL,GAAY,KAAZ;AACA,SAAKG,OAAL,GAAe,EAAf;AACA,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACH,GAxCwB;AA0CzB;AACAC,EAAAA,SAAS,EAAE,UAAUC,MAAV,EACX;AACI,WAAO,KAAP;AACH,GA9CwB;AAgDzB;AACAC,EAAAA,YAAY,EAAE,UAAUD,MAAV,EACd;AACI,WAAO,KAAP;AACH,GApDwB;AAsDzB;AACAE,EAAAA,YAAY,EAAE,UAAUC,UAAV,EACd;AACI,WAAO,IAAP;AACH,GA1DwB;AA4DzB;AACAC,EAAAA,IAAI,EAAE,UAAUD,UAAV,EAAsBtB,MAAtB,EACN;AACI,WAAO,KAAP;AACH,GAhEwB;AAkEzBwB,EAAAA,KAAK,EAAE,YACP;AACI,WAAO,KAAP;AACH,GArEwB;AAuEzBC,EAAAA,MAAM,EAAE,YACR;AACI,WAAO,KAAP;AACH,GA1EwB;AA4EzBC,EAAAA,IAAI,EAAE,YACN;AACI,WAAO,KAAP;AACH,GA/EwB;AAiFzBC,EAAAA,OAAO,EAAE,YACT;AACI,SAAK7B,OAAL,CAAa8B,MAAb,CAAoB,IAApB;AAEAtC,IAAAA,SAAS,CAACuC,SAAV,CAAoBF,OAApB,CAA4B1B,IAA5B,CAAiC,IAAjC;AACH;AAtFwB,CAAV,CAAnB;AAyFA6B,MAAM,CAACC,OAAP,GAAiBpC,YAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @author       Pavle Goloskokovic <pgoloskokovic@gmail.com> (http://prunegames.com)\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar BaseSound = require('../BaseSound');\r\nvar Class = require('../../utils/Class');\r\nvar EventEmitter = require('eventemitter3');\r\nvar Extend = require('../../utils/object/Extend');\r\n\r\n/**\r\n * @classdesc\r\n * No audio implementation of the sound. It is used if audio has been\r\n * disabled in the game config or the device doesn't support any audio.\r\n *\r\n * It represents a graceful degradation of sound logic that provides\r\n * minimal functionality and prevents Phaser projects that use audio from\r\n * breaking on devices that don't support any audio playback technologies.\r\n *\r\n * @class NoAudioSound\r\n * @extends Phaser.Sound.BaseSound\r\n * @memberof Phaser.Sound\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Sound.NoAudioSoundManager} manager - Reference to the current sound manager instance.\r\n * @param {string} key - Asset key for the sound.\r\n * @param {Phaser.Types.Sound.SoundConfig} [config={}] - An optional config object containing default sound settings.\r\n */\r\nvar NoAudioSound = new Class({\r\n\r\n    Extends: EventEmitter,\r\n\r\n    initialize:\r\n\r\n    function NoAudioSound (manager, key, config)\r\n    {\r\n        if (config === void 0) { config = {}; }\r\n\r\n        EventEmitter.call(this);\r\n\r\n        this.manager = manager;\r\n        this.key = key;\r\n        this.isPlaying = false;\r\n        this.isPaused = false;\r\n        this.totalRate = 1;\r\n        this.duration = 0;\r\n        this.totalDuration = 0;\r\n\r\n        this.config = Extend({\r\n            mute: false,\r\n            volume: 1,\r\n            rate: 1,\r\n            detune: 0,\r\n            seek: 0,\r\n            loop: false,\r\n            delay: 0\r\n        }, config);\r\n\r\n        this.currentConfig = this.config;\r\n        this.mute = false;\r\n        this.volume = 1;\r\n        this.rate = 1;\r\n        this.detune = 0;\r\n        this.seek = 0;\r\n        this.loop = false;\r\n        this.markers = {};\r\n        this.currentMarker = null;\r\n        this.pendingRemove = false;\r\n    },\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    addMarker: function (marker)\r\n    {\r\n        return false;\r\n    },\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    updateMarker: function (marker)\r\n    {\r\n        return false;\r\n    },\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    removeMarker: function (markerName)\r\n    {\r\n        return null;\r\n    },\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    play: function (markerName, config)\r\n    {\r\n        return false;\r\n    },\r\n\r\n    pause: function ()\r\n    {\r\n        return false;\r\n    },\r\n\r\n    resume: function ()\r\n    {\r\n        return false;\r\n    },\r\n\r\n    stop: function ()\r\n    {\r\n        return false;\r\n    },\r\n\r\n    destroy: function ()\r\n    {\r\n        this.manager.remove(this);\r\n\r\n        BaseSound.prototype.destroy.call(this);\r\n    }\r\n});\r\n\r\nmodule.exports = NoAudioSound;\r\n"]},"metadata":{},"sourceType":"script"}