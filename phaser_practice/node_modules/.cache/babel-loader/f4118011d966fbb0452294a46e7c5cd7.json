{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar GetValue = require('./GetValue');\n\nvar Clamp = require('../../math/Clamp');\n/**\r\n * Retrieves and clamps a numerical value from an object.\r\n *\r\n * @function Phaser.Utils.Objects.GetMinMaxValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`).\r\n * @param {number} min - The minimum value which can be returned.\r\n * @param {number} max - The maximum value which can be returned.\r\n * @param {number} defaultValue - The value to return if the property doesn't exist. It's also constrained to the given bounds.\r\n *\r\n * @return {number} The clamped value from the `source` object.\r\n */\n\n\nvar GetMinMaxValue = function (source, key, min, max, defaultValue) {\n  if (defaultValue === undefined) {\n    defaultValue = min;\n  }\n\n  var value = GetValue(source, key, defaultValue);\n  return Clamp(value, min, max);\n};\n\nmodule.exports = GetMinMaxValue;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/object/GetMinMaxValue.js"],"names":["GetValue","require","Clamp","GetMinMaxValue","source","key","min","max","defaultValue","undefined","value","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,kBAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;AAcA,IAAIE,cAAc,GAAG,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,YAAjC,EACrB;AACI,MAAIA,YAAY,KAAKC,SAArB,EAAgC;AAAED,IAAAA,YAAY,GAAGF,GAAf;AAAqB;;AAEvD,MAAII,KAAK,GAAGV,QAAQ,CAACI,MAAD,EAASC,GAAT,EAAcG,YAAd,CAApB;AAEA,SAAON,KAAK,CAACQ,KAAD,EAAQJ,GAAR,EAAaC,GAAb,CAAZ;AACH,CAPD;;AASAI,MAAM,CAACC,OAAP,GAAiBT,cAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetValue = require('./GetValue');\r\nvar Clamp = require('../../math/Clamp');\r\n\r\n/**\r\n * Retrieves and clamps a numerical value from an object.\r\n *\r\n * @function Phaser.Utils.Objects.GetMinMaxValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`).\r\n * @param {number} min - The minimum value which can be returned.\r\n * @param {number} max - The maximum value which can be returned.\r\n * @param {number} defaultValue - The value to return if the property doesn't exist. It's also constrained to the given bounds.\r\n *\r\n * @return {number} The clamped value from the `source` object.\r\n */\r\nvar GetMinMaxValue = function (source, key, min, max, defaultValue)\r\n{\r\n    if (defaultValue === undefined) { defaultValue = min; }\r\n\r\n    var value = GetValue(source, key, defaultValue);\r\n\r\n    return Clamp(value, min, max);\r\n};\r\n\r\nmodule.exports = GetMinMaxValue;\r\n"]},"metadata":{},"sourceType":"script"}