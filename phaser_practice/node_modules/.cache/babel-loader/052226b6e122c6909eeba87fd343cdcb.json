{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Point = require('../point/Point');\n/**\r\n * Returns a random point on a given Line.\r\n *\r\n * @function Phaser.Geom.Line.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The Line to calculate the random Point on.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An instance of a Point to be modified.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A random Point on the Line.\r\n */\n\n\nvar Random = function (line, out) {\n  if (out === undefined) {\n    out = new Point();\n  }\n\n  var t = Math.random();\n  out.x = line.x1 + t * (line.x2 - line.x1);\n  out.y = line.y1 + t * (line.y2 - line.y1);\n  return out;\n};\n\nmodule.exports = Random;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/line/Random.js"],"names":["Point","require","Random","line","out","undefined","t","Math","random","x","x1","x2","y","y1","y2","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB;AAEA;;;;;;;;;;;;;;;AAaA,IAAIC,MAAM,GAAG,UAAUC,IAAV,EAAgBC,GAAhB,EACb;AACI,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AAAED,IAAAA,GAAG,GAAG,IAAIJ,KAAJ,EAAN;AAAoB;;AAE7C,MAAIM,CAAC,GAAGC,IAAI,CAACC,MAAL,EAAR;AAEAJ,EAAAA,GAAG,CAACK,CAAJ,GAAQN,IAAI,CAACO,EAAL,GAAUJ,CAAC,IAAIH,IAAI,CAACQ,EAAL,GAAUR,IAAI,CAACO,EAAnB,CAAnB;AACAN,EAAAA,GAAG,CAACQ,CAAJ,GAAQT,IAAI,CAACU,EAAL,GAAUP,CAAC,IAAIH,IAAI,CAACW,EAAL,GAAUX,IAAI,CAACU,EAAnB,CAAnB;AAEA,SAAOT,GAAP;AACH,CAVD;;AAYAW,MAAM,CAACC,OAAP,GAAiBd,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Returns a random point on a given Line.\r\n *\r\n * @function Phaser.Geom.Line.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The Line to calculate the random Point on.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An instance of a Point to be modified.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A random Point on the Line.\r\n */\r\nvar Random = function (line, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    var t = Math.random();\r\n\r\n    out.x = line.x1 + t * (line.x2 - line.x1);\r\n    out.y = line.y1 + t * (line.y2 - line.y1);\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Random;\r\n"]},"metadata":{},"sourceType":"script"}