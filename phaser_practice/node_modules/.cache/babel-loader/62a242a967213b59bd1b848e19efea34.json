{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n//  bitmask flag for GameObject.renderMask\nvar _FLAG = 8; // 1000\n\n/**\r\n * Provides methods used for getting and setting the texture of a Game Object.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Texture\r\n * @since 3.0.0\r\n */\n\nvar Texture = {\n  /**\r\n   * The Texture this Game Object is using to render with.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Texture#texture\r\n   * @type {Phaser.Textures.Texture|Phaser.Textures.CanvasTexture}\r\n   * @since 3.0.0\r\n   */\n  texture: null,\n\n  /**\r\n   * The Texture Frame this Game Object is using to render with.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Texture#frame\r\n   * @type {Phaser.Textures.Frame}\r\n   * @since 3.0.0\r\n   */\n  frame: null,\n\n  /**\r\n   * Internal flag. Not to be set by this Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Texture#isCropped\r\n   * @type {boolean}\r\n   * @private\r\n   * @since 3.11.0\r\n   */\n  isCropped: false,\n\n  /**\r\n   * Sets the texture and frame this Game Object will use to render with.\r\n   *\r\n   * Textures are referenced by their string-based keys, as stored in the Texture Manager.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Texture#setTexture\r\n   * @since 3.0.0\r\n   *\r\n   * @param {(string|Phaser.Textures.Texture)} key - The key of the texture to be used, as stored in the Texture Manager, or a Texture instance.\r\n   * @param {(string|integer)} [frame] - The name or index of the frame within the Texture.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setTexture: function (key, frame) {\n    this.texture = this.scene.sys.textures.get(key);\n    return this.setFrame(frame);\n  },\n\n  /**\r\n   * Sets the frame this Game Object will use to render with.\r\n   *\r\n   * The Frame has to belong to the current Texture being used.\r\n   *\r\n   * It can be either a string or an index.\r\n   *\r\n   * Calling `setFrame` will modify the `width` and `height` properties of your Game Object.\r\n   * It will also change the `origin` if the Frame has a custom pivot point, as exported from packages like Texture Packer.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Texture#setFrame\r\n   * @since 3.0.0\r\n   *\r\n   * @param {(string|integer)} frame - The name or index of the frame within the Texture.\r\n   * @param {boolean} [updateSize=true] - Should this call adjust the size of the Game Object?\r\n   * @param {boolean} [updateOrigin=true] - Should this call adjust the origin of the Game Object?\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setFrame: function (frame, updateSize, updateOrigin) {\n    if (updateSize === undefined) {\n      updateSize = true;\n    }\n\n    if (updateOrigin === undefined) {\n      updateOrigin = true;\n    }\n\n    this.frame = this.texture.get(frame);\n\n    if (!this.frame.cutWidth || !this.frame.cutHeight) {\n      this.renderFlags &= ~_FLAG;\n    } else {\n      this.renderFlags |= _FLAG;\n    }\n\n    if (this._sizeComponent && updateSize) {\n      this.setSizeToFrame();\n    }\n\n    if (this._originComponent && updateOrigin) {\n      if (this.frame.customPivot) {\n        this.setOrigin(this.frame.pivotX, this.frame.pivotY);\n      } else {\n        this.updateDisplayOrigin();\n      }\n    }\n\n    return this;\n  }\n};\nmodule.exports = Texture;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/components/Texture.js"],"names":["_FLAG","Texture","texture","frame","isCropped","setTexture","key","scene","sys","textures","get","setFrame","updateSize","updateOrigin","undefined","cutWidth","cutHeight","renderFlags","_sizeComponent","setSizeToFrame","_originComponent","customPivot","setOrigin","pivotX","pivotY","updateDisplayOrigin","module","exports"],"mappings":"AAAA;;;;;AAMA;AACA,IAAIA,KAAK,GAAG,CAAZ,C,CAAe;;AAEf;;;;;;;AAOA,IAAIC,OAAO,GAAG;AAEV;;;;;;;AAOAC,EAAAA,OAAO,EAAE,IATC;;AAWV;;;;;;;AAOAC,EAAAA,KAAK,EAAE,IAlBG;;AAoBV;;;;;;;;AAQAC,EAAAA,SAAS,EAAE,KA5BD;;AA8BV;;;;;;;;;;;;;AAaAC,EAAAA,UAAU,EAAE,UAAUC,GAAV,EAAeH,KAAf,EACZ;AACI,SAAKD,OAAL,GAAe,KAAKK,KAAL,CAAWC,GAAX,CAAeC,QAAf,CAAwBC,GAAxB,CAA4BJ,GAA5B,CAAf;AAEA,WAAO,KAAKK,QAAL,CAAcR,KAAd,CAAP;AACH,GAhDS;;AAkDV;;;;;;;;;;;;;;;;;;;AAmBAQ,EAAAA,QAAQ,EAAE,UAAUR,KAAV,EAAiBS,UAAjB,EAA6BC,YAA7B,EACV;AACI,QAAID,UAAU,KAAKE,SAAnB,EAA8B;AAAEF,MAAAA,UAAU,GAAG,IAAb;AAAoB;;AACpD,QAAIC,YAAY,KAAKC,SAArB,EAAgC;AAAED,MAAAA,YAAY,GAAG,IAAf;AAAsB;;AAExD,SAAKV,KAAL,GAAa,KAAKD,OAAL,CAAaQ,GAAb,CAAiBP,KAAjB,CAAb;;AAEA,QAAI,CAAC,KAAKA,KAAL,CAAWY,QAAZ,IAAwB,CAAC,KAAKZ,KAAL,CAAWa,SAAxC,EACA;AACI,WAAKC,WAAL,IAAoB,CAACjB,KAArB;AACH,KAHD,MAKA;AACI,WAAKiB,WAAL,IAAoBjB,KAApB;AACH;;AAED,QAAI,KAAKkB,cAAL,IAAuBN,UAA3B,EACA;AACI,WAAKO,cAAL;AACH;;AAED,QAAI,KAAKC,gBAAL,IAAyBP,YAA7B,EACA;AACI,UAAI,KAAKV,KAAL,CAAWkB,WAAf,EACA;AACI,aAAKC,SAAL,CAAe,KAAKnB,KAAL,CAAWoB,MAA1B,EAAkC,KAAKpB,KAAL,CAAWqB,MAA7C;AACH,OAHD,MAKA;AACI,aAAKC,mBAAL;AACH;AACJ;;AAED,WAAO,IAAP;AACH;AAvGS,CAAd;AA2GAC,MAAM,CAACC,OAAP,GAAiB1B,OAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  bitmask flag for GameObject.renderMask\r\nvar _FLAG = 8; // 1000\r\n\r\n/**\r\n * Provides methods used for getting and setting the texture of a Game Object.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Texture\r\n * @since 3.0.0\r\n */\r\n\r\nvar Texture = {\r\n\r\n    /**\r\n     * The Texture this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Texture#texture\r\n     * @type {Phaser.Textures.Texture|Phaser.Textures.CanvasTexture}\r\n     * @since 3.0.0\r\n     */\r\n    texture: null,\r\n\r\n    /**\r\n     * The Texture Frame this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Texture#frame\r\n     * @type {Phaser.Textures.Frame}\r\n     * @since 3.0.0\r\n     */\r\n    frame: null,\r\n\r\n    /**\r\n     * Internal flag. Not to be set by this Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Texture#isCropped\r\n     * @type {boolean}\r\n     * @private\r\n     * @since 3.11.0\r\n     */\r\n    isCropped: false,\r\n\r\n    /**\r\n     * Sets the texture and frame this Game Object will use to render with.\r\n     *\r\n     * Textures are referenced by their string-based keys, as stored in the Texture Manager.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Texture#setTexture\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|Phaser.Textures.Texture)} key - The key of the texture to be used, as stored in the Texture Manager, or a Texture instance.\r\n     * @param {(string|integer)} [frame] - The name or index of the frame within the Texture.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setTexture: function (key, frame)\r\n    {\r\n        this.texture = this.scene.sys.textures.get(key);\r\n\r\n        return this.setFrame(frame);\r\n    },\r\n\r\n    /**\r\n     * Sets the frame this Game Object will use to render with.\r\n     *\r\n     * The Frame has to belong to the current Texture being used.\r\n     *\r\n     * It can be either a string or an index.\r\n     *\r\n     * Calling `setFrame` will modify the `width` and `height` properties of your Game Object.\r\n     * It will also change the `origin` if the Frame has a custom pivot point, as exported from packages like Texture Packer.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Texture#setFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|integer)} frame - The name or index of the frame within the Texture.\r\n     * @param {boolean} [updateSize=true] - Should this call adjust the size of the Game Object?\r\n     * @param {boolean} [updateOrigin=true] - Should this call adjust the origin of the Game Object?\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFrame: function (frame, updateSize, updateOrigin)\r\n    {\r\n        if (updateSize === undefined) { updateSize = true; }\r\n        if (updateOrigin === undefined) { updateOrigin = true; }\r\n\r\n        this.frame = this.texture.get(frame);\r\n\r\n        if (!this.frame.cutWidth || !this.frame.cutHeight)\r\n        {\r\n            this.renderFlags &= ~_FLAG;\r\n        }\r\n        else\r\n        {\r\n            this.renderFlags |= _FLAG;\r\n        }\r\n\r\n        if (this._sizeComponent && updateSize)\r\n        {\r\n            this.setSizeToFrame();\r\n        }\r\n\r\n        if (this._originComponent && updateOrigin)\r\n        {\r\n            if (this.frame.customPivot)\r\n            {\r\n                this.setOrigin(this.frame.pivotX, this.frame.pivotY);\r\n            }\r\n            else\r\n            {\r\n                this.updateDisplayOrigin();\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Texture;\r\n"]},"metadata":{},"sourceType":"script"}