{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Perimeter = require('./Perimeter');\n\nvar Point = require('../point/Point');\n/**\r\n * Position is a value between 0 and 1 where 0 = the top-left of the rectangle and 0.5 = the bottom right.\r\n *\r\n * @function Phaser.Geom.Rectangle.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectangle - [description]\r\n * @param {number} position - [description]\r\n * @param {(Phaser.Geom.Point|object)} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\n\n\nvar GetPoint = function (rectangle, position, out) {\n  if (out === undefined) {\n    out = new Point();\n  }\n\n  if (position <= 0 || position >= 1) {\n    out.x = rectangle.x;\n    out.y = rectangle.y;\n    return out;\n  }\n\n  var p = Perimeter(rectangle) * position;\n\n  if (position > 0.5) {\n    p -= rectangle.width + rectangle.height;\n\n    if (p <= rectangle.width) {\n      //  Face 3\n      out.x = rectangle.right - p;\n      out.y = rectangle.bottom;\n    } else {\n      //  Face 4\n      out.x = rectangle.x;\n      out.y = rectangle.bottom - (p - rectangle.width);\n    }\n  } else if (p <= rectangle.width) {\n    //  Face 1\n    out.x = rectangle.x + p;\n    out.y = rectangle.y;\n  } else {\n    //  Face 2\n    out.x = rectangle.right;\n    out.y = rectangle.y + (p - rectangle.width);\n  }\n\n  return out;\n};\n\nmodule.exports = GetPoint;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/rectangle/GetPoint.js"],"names":["Perimeter","require","Point","GetPoint","rectangle","position","out","undefined","x","y","p","width","height","right","bottom","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,gBAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;AAcA,IAAIE,QAAQ,GAAG,UAAUC,SAAV,EAAqBC,QAArB,EAA+BC,GAA/B,EACf;AACI,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AAAED,IAAAA,GAAG,GAAG,IAAIJ,KAAJ,EAAN;AAAoB;;AAE7C,MAAIG,QAAQ,IAAI,CAAZ,IAAiBA,QAAQ,IAAI,CAAjC,EACA;AACIC,IAAAA,GAAG,CAACE,CAAJ,GAAQJ,SAAS,CAACI,CAAlB;AACAF,IAAAA,GAAG,CAACG,CAAJ,GAAQL,SAAS,CAACK,CAAlB;AAEA,WAAOH,GAAP;AACH;;AAED,MAAII,CAAC,GAAGV,SAAS,CAACI,SAAD,CAAT,GAAuBC,QAA/B;;AAEA,MAAIA,QAAQ,GAAG,GAAf,EACA;AACIK,IAAAA,CAAC,IAAKN,SAAS,CAACO,KAAV,GAAkBP,SAAS,CAACQ,MAAlC;;AAEA,QAAIF,CAAC,IAAIN,SAAS,CAACO,KAAnB,EACA;AACI;AACAL,MAAAA,GAAG,CAACE,CAAJ,GAAQJ,SAAS,CAACS,KAAV,GAAkBH,CAA1B;AACAJ,MAAAA,GAAG,CAACG,CAAJ,GAAQL,SAAS,CAACU,MAAlB;AACH,KALD,MAOA;AACI;AACAR,MAAAA,GAAG,CAACE,CAAJ,GAAQJ,SAAS,CAACI,CAAlB;AACAF,MAAAA,GAAG,CAACG,CAAJ,GAAQL,SAAS,CAACU,MAAV,IAAoBJ,CAAC,GAAGN,SAAS,CAACO,KAAlC,CAAR;AACH;AACJ,GAhBD,MAiBK,IAAID,CAAC,IAAIN,SAAS,CAACO,KAAnB,EACL;AACI;AACAL,IAAAA,GAAG,CAACE,CAAJ,GAAQJ,SAAS,CAACI,CAAV,GAAcE,CAAtB;AACAJ,IAAAA,GAAG,CAACG,CAAJ,GAAQL,SAAS,CAACK,CAAlB;AACH,GALI,MAOL;AACI;AACAH,IAAAA,GAAG,CAACE,CAAJ,GAAQJ,SAAS,CAACS,KAAlB;AACAP,IAAAA,GAAG,CAACG,CAAJ,GAAQL,SAAS,CAACK,CAAV,IAAeC,CAAC,GAAGN,SAAS,CAACO,KAA7B,CAAR;AACH;;AAED,SAAOL,GAAP;AACH,CA7CD;;AA+CAS,MAAM,CAACC,OAAP,GAAiBb,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Perimeter = require('./Perimeter');\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Position is a value between 0 and 1 where 0 = the top-left of the rectangle and 0.5 = the bottom right.\r\n *\r\n * @function Phaser.Geom.Rectangle.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectangle - [description]\r\n * @param {number} position - [description]\r\n * @param {(Phaser.Geom.Point|object)} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\r\nvar GetPoint = function (rectangle, position, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    if (position <= 0 || position >= 1)\r\n    {\r\n        out.x = rectangle.x;\r\n        out.y = rectangle.y;\r\n\r\n        return out;\r\n    }\r\n\r\n    var p = Perimeter(rectangle) * position;\r\n\r\n    if (position > 0.5)\r\n    {\r\n        p -= (rectangle.width + rectangle.height);\r\n\r\n        if (p <= rectangle.width)\r\n        {\r\n            //  Face 3\r\n            out.x = rectangle.right - p;\r\n            out.y = rectangle.bottom;\r\n        }\r\n        else\r\n        {\r\n            //  Face 4\r\n            out.x = rectangle.x;\r\n            out.y = rectangle.bottom - (p - rectangle.width);\r\n        }\r\n    }\r\n    else if (p <= rectangle.width)\r\n    {\r\n        //  Face 1\r\n        out.x = rectangle.x + p;\r\n        out.y = rectangle.y;\r\n    }\r\n    else\r\n    {\r\n        //  Face 2\r\n        out.x = rectangle.right;\r\n        out.y = rectangle.y + (p - rectangle.width);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetPoint;\r\n"]},"metadata":{},"sourceType":"script"}