{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Back ease-in/out.\r\n *\r\n * @function Phaser.Math.Easing.Back.InOut\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n * @param {number} [overshoot=1.70158] - The overshoot amount.\r\n *\r\n * @return {number} The tweened value.\r\n */\nvar InOut = function (v, overshoot) {\n  if (overshoot === undefined) {\n    overshoot = 1.70158;\n  }\n\n  var s = overshoot * 1.525;\n\n  if ((v *= 2) < 1) {\n    return 0.5 * (v * v * ((s + 1) * v - s));\n  } else {\n    return 0.5 * ((v -= 2) * v * ((s + 1) * v + s) + 2);\n  }\n};\n\nmodule.exports = InOut;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/math/easing/back/InOut.js"],"names":["InOut","v","overshoot","undefined","s","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;AAWA,IAAIA,KAAK,GAAG,UAAUC,CAAV,EAAaC,SAAb,EACZ;AACI,MAAIA,SAAS,KAAKC,SAAlB,EAA6B;AAAED,IAAAA,SAAS,GAAG,OAAZ;AAAsB;;AAErD,MAAIE,CAAC,GAAGF,SAAS,GAAG,KAApB;;AAEA,MAAI,CAACD,CAAC,IAAI,CAAN,IAAW,CAAf,EACA;AACI,WAAO,OAAOA,CAAC,GAAGA,CAAJ,IAAS,CAACG,CAAC,GAAG,CAAL,IAAUH,CAAV,GAAcG,CAAvB,CAAP,CAAP;AACH,GAHD,MAKA;AACI,WAAO,OAAO,CAACH,CAAC,IAAI,CAAN,IAAWA,CAAX,IAAgB,CAACG,CAAC,GAAG,CAAL,IAAUH,CAAV,GAAcG,CAA9B,IAAmC,CAA1C,CAAP;AACH;AACJ,CAdD;;AAgBAC,MAAM,CAACC,OAAP,GAAiBN,KAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Back ease-in/out.\r\n *\r\n * @function Phaser.Math.Easing.Back.InOut\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n * @param {number} [overshoot=1.70158] - The overshoot amount.\r\n *\r\n * @return {number} The tweened value.\r\n */\r\nvar InOut = function (v, overshoot)\r\n{\r\n    if (overshoot === undefined) { overshoot = 1.70158; }\r\n\r\n    var s = overshoot * 1.525;\r\n\r\n    if ((v *= 2) < 1)\r\n    {\r\n        return 0.5 * (v * v * ((s + 1) * v - s));\r\n    }\r\n    else\r\n    {\r\n        return 0.5 * ((v -= 2) * v * ((s + 1) * v + s) + 2);\r\n    }\r\n};\r\n\r\nmodule.exports = InOut;\r\n"]},"metadata":{},"sourceType":"script"}