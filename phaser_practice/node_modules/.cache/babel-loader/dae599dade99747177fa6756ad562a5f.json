{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * @ignore\r\n */\nfunction P0(t, p) {\n  var k = 1 - t;\n  return k * k * p;\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction P1(t, p) {\n  return 2 * (1 - t) * t * p;\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction P2(t, p) {\n  return t * t * p;\n} // https://github.com/mrdoob/three.js/blob/master/src/extras/core/Interpolations.js\n\n/**\r\n * A quadratic bezier interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.QuadraticBezier\r\n * @since 3.2.0\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} p0 - The start point.\r\n * @param {number} p1 - The control point.\r\n * @param {number} p2 - The end point.\r\n *\r\n * @return {number} The interpolated value.\r\n */\n\n\nvar QuadraticBezierInterpolation = function (t, p0, p1, p2) {\n  return P0(t, p0) + P1(t, p1) + P2(t, p2);\n};\n\nmodule.exports = QuadraticBezierInterpolation;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/math/interpolation/QuadraticBezierInterpolation.js"],"names":["P0","t","p","k","P1","P2","QuadraticBezierInterpolation","p0","p1","p2","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;AAGA,SAASA,EAAT,CAAaC,CAAb,EAAgBC,CAAhB,EACA;AACI,MAAIC,CAAC,GAAG,IAAIF,CAAZ;AAEA,SAAOE,CAAC,GAAGA,CAAJ,GAAQD,CAAf;AACH;AAED;;;;;AAGA,SAASE,EAAT,CAAaH,CAAb,EAAgBC,CAAhB,EACA;AACI,SAAO,KAAK,IAAID,CAAT,IAAcA,CAAd,GAAkBC,CAAzB;AACH;AAED;;;;;AAGA,SAASG,EAAT,CAAaJ,CAAb,EAAgBC,CAAhB,EACA;AACI,SAAOD,CAAC,GAAGA,CAAJ,GAAQC,CAAf;AACH,C,CAED;;AAEA;;;;;;;;;;;;;;;AAaA,IAAII,4BAA4B,GAAG,UAAUL,CAAV,EAAaM,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EACnC;AACI,SAAOT,EAAE,CAACC,CAAD,EAAIM,EAAJ,CAAF,GAAYH,EAAE,CAACH,CAAD,EAAIO,EAAJ,CAAd,GAAwBH,EAAE,CAACJ,CAAD,EAAIQ,EAAJ,CAAjC;AACH,CAHD;;AAKAC,MAAM,CAACC,OAAP,GAAiBL,4BAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P0 (t, p)\r\n{\r\n    var k = 1 - t;\r\n\r\n    return k * k * p;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P1 (t, p)\r\n{\r\n    return 2 * (1 - t) * t * p;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P2 (t, p)\r\n{\r\n    return t * t * p;\r\n}\r\n\r\n// https://github.com/mrdoob/three.js/blob/master/src/extras/core/Interpolations.js\r\n\r\n/**\r\n * A quadratic bezier interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.QuadraticBezier\r\n * @since 3.2.0\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} p0 - The start point.\r\n * @param {number} p1 - The control point.\r\n * @param {number} p2 - The end point.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nvar QuadraticBezierInterpolation = function (t, p0, p1, p2)\r\n{\r\n    return P0(t, p0) + P1(t, p1) + P2(t, p2);\r\n};\r\n\r\nmodule.exports = QuadraticBezierInterpolation;\r\n"]},"metadata":{},"sourceType":"script"}