{"ast":null,"code":"module.exports = ['#define SHADER_NAME PHASER_TEXTURE_TINT_FS', '', 'precision mediump float;', '', 'uniform sampler2D uMainSampler;', '', 'varying vec2 outTexCoord;', 'varying float outTintEffect;', 'varying vec4 outTint;', '', 'void main()', '{', '    vec4 texture = texture2D(uMainSampler, outTexCoord);', '    vec4 texel = vec4(outTint.rgb * outTint.a, outTint.a);', '    vec4 color = texture;', '', '    if (outTintEffect == 0.0)', '    {', '        //  Multiply texture tint', '        color = texture * texel;', '    }', '    else if (outTintEffect == 1.0)', '    {', '        //  Solid color + texture alpha', '        color.rgb = mix(texture.rgb, outTint.rgb * outTint.a, texture.a);', '        color.a = texture.a * texel.a;', '    }', '    else if (outTintEffect == 2.0)', '    {', '        //  Solid color, no texture', '        color = texel;', '    }', '', '    gl_FragColor = color;', '}', ''].join('\\n');","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/renderer/webgl/shaders/TextureTint-frag.js"],"names":["module","exports","join"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,CACb,4CADa,EAEb,EAFa,EAGb,0BAHa,EAIb,EAJa,EAKb,iCALa,EAMb,EANa,EAOb,2BAPa,EAQb,8BARa,EASb,uBATa,EAUb,EAVa,EAWb,aAXa,EAYb,GAZa,EAab,0DAba,EAcb,4DAda,EAeb,2BAfa,EAgBb,EAhBa,EAiBb,+BAjBa,EAkBb,OAlBa,EAmBb,mCAnBa,EAoBb,kCApBa,EAqBb,OArBa,EAsBb,oCAtBa,EAuBb,OAvBa,EAwBb,yCAxBa,EAyBb,2EAzBa,EA0Bb,wCA1Ba,EA2Bb,OA3Ba,EA4Bb,oCA5Ba,EA6Bb,OA7Ba,EA8Bb,qCA9Ba,EA+Bb,wBA/Ba,EAgCb,OAhCa,EAiCb,EAjCa,EAkCb,2BAlCa,EAmCb,GAnCa,EAoCb,EApCa,EAqCfC,IArCe,CAqCV,IArCU,CAAjB","sourcesContent":["module.exports = [\n    '#define SHADER_NAME PHASER_TEXTURE_TINT_FS',\n    '',\n    'precision mediump float;',\n    '',\n    'uniform sampler2D uMainSampler;',\n    '',\n    'varying vec2 outTexCoord;',\n    'varying float outTintEffect;',\n    'varying vec4 outTint;',\n    '',\n    'void main()',\n    '{',\n    '    vec4 texture = texture2D(uMainSampler, outTexCoord);',\n    '    vec4 texel = vec4(outTint.rgb * outTint.a, outTint.a);',\n    '    vec4 color = texture;',\n    '',\n    '    if (outTintEffect == 0.0)',\n    '    {',\n    '        //  Multiply texture tint',\n    '        color = texture * texel;',\n    '    }',\n    '    else if (outTintEffect == 1.0)',\n    '    {',\n    '        //  Solid color + texture alpha',\n    '        color.rgb = mix(texture.rgb, outTint.rgb * outTint.a, texture.a);',\n    '        color.a = texture.a * texel.a;',\n    '    }',\n    '    else if (outTintEffect == 2.0)',\n    '    {',\n    '        //  Solid color, no texture',\n    '        color = texel;',\n    '    }',\n    '',\n    '    gl_FragColor = color;',\n    '}',\n    ''\n].join('\\n');\n"]},"metadata":{},"sourceType":"script"}