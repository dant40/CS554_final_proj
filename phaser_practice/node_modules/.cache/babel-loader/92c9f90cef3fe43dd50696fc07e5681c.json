{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Body = require('../lib/body/Body');\n\nvar Vector2 = require('../../../math/Vector2');\n/**\r\n * Allows accessing the mass, density, and center of mass of a Matter-enabled Game Object. Should be used as a mixin and not directly.\r\n *\r\n * @namespace Phaser.Physics.Matter.Components.Mass\r\n * @since 3.0.0\r\n */\n\n\nvar Mass = {\n  /**\r\n   * Sets the mass of the Game Object's Matter Body.\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Mass#setMass\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The new mass of the body.\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setMass: function (value) {\n    Body.setMass(this.body, value);\n    return this;\n  },\n\n  /**\r\n   * Sets density of the body.\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Mass#setDensity\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The new density of the body.\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setDensity: function (value) {\n    Body.setDensity(this.body, value);\n    return this;\n  },\n\n  /**\r\n   * The body's center of mass.\r\n   * \r\n   * Calling this creates a new `Vector2 each time to avoid mutation.\r\n   * \r\n   * If you only need to read the value and won't change it, you can get it from `GameObject.body.centerOfMass`.\r\n   *\r\n   * @name Phaser.Physics.Matter.Components.Mass#centerOfMass\r\n   * @type {Phaser.Math.Vector2}\r\n   * @readonly\r\n   * @since 3.10.0\r\n   *\r\n   * @return {Phaser.Math.Vector2} The center of mass.\r\n   */\n  centerOfMass: {\n    get: function () {\n      return new Vector2(this.body.centerOfMass.x, this.body.centerOfMass.y);\n    }\n  }\n};\nmodule.exports = Mass;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/matter-js/components/Mass.js"],"names":["Body","require","Vector2","Mass","setMass","value","body","setDensity","centerOfMass","get","x","y","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,IAAI,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,uBAAD,CAArB;AAEA;;;;;;;;AAMA,IAAIE,IAAI,GAAG;AAEP;;;;;;;;;;AAUAC,EAAAA,OAAO,EAAE,UAAUC,KAAV,EACT;AACIL,IAAAA,IAAI,CAACI,OAAL,CAAa,KAAKE,IAAlB,EAAwBD,KAAxB;AAEA,WAAO,IAAP;AACH,GAjBM;;AAmBP;;;;;;;;;;AAUAE,EAAAA,UAAU,EAAE,UAAUF,KAAV,EACZ;AACIL,IAAAA,IAAI,CAACO,UAAL,CAAgB,KAAKD,IAArB,EAA2BD,KAA3B;AAEA,WAAO,IAAP;AACH,GAlCM;;AAoCP;;;;;;;;;;;;;;AAcAG,EAAAA,YAAY,EAAE;AAEVC,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,IAAIP,OAAJ,CAAY,KAAKI,IAAL,CAAUE,YAAV,CAAuBE,CAAnC,EAAsC,KAAKJ,IAAL,CAAUE,YAAV,CAAuBG,CAA7D,CAAP;AACH;AALS;AAlDP,CAAX;AA4DAC,MAAM,CAACC,OAAP,GAAiBV,IAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Body = require('../lib/body/Body');\r\nvar Vector2 = require('../../../math/Vector2');\r\n\r\n/**\r\n * Allows accessing the mass, density, and center of mass of a Matter-enabled Game Object. Should be used as a mixin and not directly.\r\n *\r\n * @namespace Phaser.Physics.Matter.Components.Mass\r\n * @since 3.0.0\r\n */\r\nvar Mass = {\r\n\r\n    /**\r\n     * Sets the mass of the Game Object's Matter Body.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Mass#setMass\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The new mass of the body.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setMass: function (value)\r\n    {\r\n        Body.setMass(this.body, value);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets density of the body.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Mass#setDensity\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The new density of the body.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setDensity: function (value)\r\n    {\r\n        Body.setDensity(this.body, value);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * The body's center of mass.\r\n     * \r\n     * Calling this creates a new `Vector2 each time to avoid mutation.\r\n     * \r\n     * If you only need to read the value and won't change it, you can get it from `GameObject.body.centerOfMass`.\r\n     *\r\n     * @name Phaser.Physics.Matter.Components.Mass#centerOfMass\r\n     * @type {Phaser.Math.Vector2}\r\n     * @readonly\r\n     * @since 3.10.0\r\n     *\r\n     * @return {Phaser.Math.Vector2} The center of mass.\r\n     */\r\n    centerOfMass: {\r\n\r\n        get: function ()\r\n        {\r\n            return new Vector2(this.body.centerOfMass.x, this.body.centerOfMass.y);\r\n        }\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Mass;\r\n"]},"metadata":{},"sourceType":"script"}