{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * @namespace Phaser.Math.Angle\r\n */\nmodule.exports = {\n  Between: require('./Between'),\n  BetweenPoints: require('./BetweenPoints'),\n  BetweenPointsY: require('./BetweenPointsY'),\n  BetweenY: require('./BetweenY'),\n  CounterClockwise: require('./CounterClockwise'),\n  Normalize: require('./Normalize'),\n  Reverse: require('./Reverse'),\n  RotateTo: require('./RotateTo'),\n  ShortestBetween: require('./ShortestBetween'),\n  Wrap: require('./Wrap'),\n  WrapDegrees: require('./WrapDegrees')\n};","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/math/angle/index.js"],"names":["module","exports","Between","require","BetweenPoints","BetweenPointsY","BetweenY","CounterClockwise","Normalize","Reverse","RotateTo","ShortestBetween","Wrap","WrapDegrees"],"mappings":"AAAA;;;;;;AAMA;;;AAIAA,MAAM,CAACC,OAAP,GAAiB;AAEbC,EAAAA,OAAO,EAAEC,OAAO,CAAC,WAAD,CAFH;AAGbC,EAAAA,aAAa,EAAED,OAAO,CAAC,iBAAD,CAHT;AAIbE,EAAAA,cAAc,EAAEF,OAAO,CAAC,kBAAD,CAJV;AAKbG,EAAAA,QAAQ,EAAEH,OAAO,CAAC,YAAD,CALJ;AAMbI,EAAAA,gBAAgB,EAAEJ,OAAO,CAAC,oBAAD,CANZ;AAObK,EAAAA,SAAS,EAAEL,OAAO,CAAC,aAAD,CAPL;AAQbM,EAAAA,OAAO,EAAEN,OAAO,CAAC,WAAD,CARH;AASbO,EAAAA,QAAQ,EAAEP,OAAO,CAAC,YAAD,CATJ;AAUbQ,EAAAA,eAAe,EAAER,OAAO,CAAC,mBAAD,CAVX;AAWbS,EAAAA,IAAI,EAAET,OAAO,CAAC,QAAD,CAXA;AAYbU,EAAAA,WAAW,EAAEV,OAAO,CAAC,eAAD;AAZP,CAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Math.Angle\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    Between: require('./Between'),\r\n    BetweenPoints: require('./BetweenPoints'),\r\n    BetweenPointsY: require('./BetweenPointsY'),\r\n    BetweenY: require('./BetweenY'),\r\n    CounterClockwise: require('./CounterClockwise'),\r\n    Normalize: require('./Normalize'),\r\n    Reverse: require('./Reverse'),\r\n    RotateTo: require('./RotateTo'),\r\n    ShortestBetween: require('./ShortestBetween'),\r\n    Wrap: require('./Wrap'),\r\n    WrapDegrees: require('./WrapDegrees')\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"script"}