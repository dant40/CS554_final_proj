{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar MATH_CONST = require('../../math/const');\n\nvar Angle = require('./Angle');\n\nvar Point = require('../point/Point');\n/**\r\n * Calculate the normal of the given line.\r\n *\r\n * The normal of a line is a vector that points perpendicular from it.\r\n *\r\n * @function Phaser.Geom.Line.GetNormal\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to calculate the normal of.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An optional point object to store the normal in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} The normal of the Line.\r\n */\n\n\nvar GetNormal = function (line, out) {\n  if (out === undefined) {\n    out = new Point();\n  }\n\n  var a = Angle(line) - MATH_CONST.TAU;\n  out.x = Math.cos(a);\n  out.y = Math.sin(a);\n  return out;\n};\n\nmodule.exports = GetNormal;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/line/GetNormal.js"],"names":["MATH_CONST","require","Angle","Point","GetNormal","line","out","undefined","a","TAU","x","Math","cos","y","sin","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,gBAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;;AAeA,IAAIG,SAAS,GAAG,UAAUC,IAAV,EAAgBC,GAAhB,EAChB;AACI,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AAAED,IAAAA,GAAG,GAAG,IAAIH,KAAJ,EAAN;AAAoB;;AAE7C,MAAIK,CAAC,GAAGN,KAAK,CAACG,IAAD,CAAL,GAAcL,UAAU,CAACS,GAAjC;AAEAH,EAAAA,GAAG,CAACI,CAAJ,GAAQC,IAAI,CAACC,GAAL,CAASJ,CAAT,CAAR;AACAF,EAAAA,GAAG,CAACO,CAAJ,GAAQF,IAAI,CAACG,GAAL,CAASN,CAAT,CAAR;AAEA,SAAOF,GAAP;AACH,CAVD;;AAYAS,MAAM,CAACC,OAAP,GAAiBZ,SAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MATH_CONST = require('../../math/const');\r\nvar Angle = require('./Angle');\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Calculate the normal of the given line.\r\n *\r\n * The normal of a line is a vector that points perpendicular from it.\r\n *\r\n * @function Phaser.Geom.Line.GetNormal\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to calculate the normal of.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An optional point object to store the normal in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} The normal of the Line.\r\n */\r\nvar GetNormal = function (line, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    var a = Angle(line) - MATH_CONST.TAU;\r\n\r\n    out.x = Math.cos(a);\r\n    out.y = Math.sin(a);\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetNormal;\r\n"]},"metadata":{},"sourceType":"script"}