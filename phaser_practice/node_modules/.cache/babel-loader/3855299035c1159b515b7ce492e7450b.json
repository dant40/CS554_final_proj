{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Bernstein = require('../Bernstein');\n/**\r\n * A bezier interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.Bezier\r\n * @since 3.0.0\r\n *\r\n * @param {number[]} v - The input array of values to interpolate between.\r\n * @param {number} k - The percentage of interpolation, between 0 and 1.\r\n *\r\n * @return {number} The interpolated value.\r\n */\n\n\nvar BezierInterpolation = function (v, k) {\n  var b = 0;\n  var n = v.length - 1;\n\n  for (var i = 0; i <= n; i++) {\n    b += Math.pow(1 - k, n - i) * Math.pow(k, i) * v[i] * Bernstein(n, i);\n  }\n\n  return b;\n};\n\nmodule.exports = BezierInterpolation;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/math/interpolation/BezierInterpolation.js"],"names":["Bernstein","require","BezierInterpolation","v","k","b","n","length","i","Math","pow","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;AAEA;;;;;;;;;;;;;AAWA,IAAIC,mBAAmB,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAC1B;AACI,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAGH,CAAC,CAACI,MAAF,GAAW,CAAnB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,CAArB,EAAwBE,CAAC,EAAzB,EACA;AACIH,IAAAA,CAAC,IAAII,IAAI,CAACC,GAAL,CAAS,IAAIN,CAAb,EAAgBE,CAAC,GAAGE,CAApB,IAAyBC,IAAI,CAACC,GAAL,CAASN,CAAT,EAAYI,CAAZ,CAAzB,GAA0CL,CAAC,CAACK,CAAD,CAA3C,GAAiDR,SAAS,CAACM,CAAD,EAAIE,CAAJ,CAA/D;AACH;;AAED,SAAOH,CAAP;AACH,CAXD;;AAaAM,MAAM,CAACC,OAAP,GAAiBV,mBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Bernstein = require('../Bernstein');\r\n\r\n/**\r\n * A bezier interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.Bezier\r\n * @since 3.0.0\r\n *\r\n * @param {number[]} v - The input array of values to interpolate between.\r\n * @param {number} k - The percentage of interpolation, between 0 and 1.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nvar BezierInterpolation = function (v, k)\r\n{\r\n    var b = 0;\r\n    var n = v.length - 1;\r\n\r\n    for (var i = 0; i <= n; i++)\r\n    {\r\n        b += Math.pow(1 - k, n - i) * Math.pow(k, i) * v[i] * Bernstein(n, i);\r\n    }\r\n\r\n    return b;\r\n};\r\n\r\nmodule.exports = BezierInterpolation;\r\n"]},"metadata":{},"sourceType":"script"}