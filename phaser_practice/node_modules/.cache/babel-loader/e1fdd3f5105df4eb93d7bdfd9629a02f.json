{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Enables a Matter-enabled Game Object to be a sensor. Should be used as a mixin and not directly.\r\n *\r\n * @namespace Phaser.Physics.Matter.Components.Sensor\r\n * @since 3.0.0\r\n */\nvar Sensor = {\n  /**\r\n   * Set the body belonging to this Game Object to be a sensor.\r\n   * Sensors trigger collision events, but don't react with colliding body physically.\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Sensor#setSensor\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} value - `true` to set the body as a sensor, or `false` to disable it.\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setSensor: function (value) {\n    this.body.isSensor = value;\n    return this;\n  },\n\n  /**\r\n   * Is the body belonging to this Game Object a sensor or not?\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Sensor#isSensor\r\n   * @since 3.0.0\r\n   *\r\n   * @return {boolean} `true` if the body is a sensor, otherwise `false`.\r\n   */\n  isSensor: function () {\n    return this.body.isSensor;\n  }\n};\nmodule.exports = Sensor;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/matter-js/components/Sensor.js"],"names":["Sensor","setSensor","value","body","isSensor","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;AAMA,IAAIA,MAAM,GAAG;AAET;;;;;;;;;;;AAWAC,EAAAA,SAAS,EAAE,UAAUC,KAAV,EACX;AACI,SAAKC,IAAL,CAAUC,QAAV,GAAqBF,KAArB;AAEA,WAAO,IAAP;AACH,GAlBQ;;AAoBT;;;;;;;;AAQAE,EAAAA,QAAQ,EAAE,YACV;AACI,WAAO,KAAKD,IAAL,CAAUC,QAAjB;AACH;AA/BQ,CAAb;AAmCAC,MAAM,CAACC,OAAP,GAAiBN,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Enables a Matter-enabled Game Object to be a sensor. Should be used as a mixin and not directly.\r\n *\r\n * @namespace Phaser.Physics.Matter.Components.Sensor\r\n * @since 3.0.0\r\n */\r\nvar Sensor = {\r\n\r\n    /**\r\n     * Set the body belonging to this Game Object to be a sensor.\r\n     * Sensors trigger collision events, but don't react with colliding body physically.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Sensor#setSensor\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} value - `true` to set the body as a sensor, or `false` to disable it.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setSensor: function (value)\r\n    {\r\n        this.body.isSensor = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Is the body belonging to this Game Object a sensor or not?\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Sensor#isSensor\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` if the body is a sensor, otherwise `false`.\r\n     */\r\n    isSensor: function ()\r\n    {\r\n        return this.body.isSensor;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Sensor;\r\n"]},"metadata":{},"sourceType":"script"}