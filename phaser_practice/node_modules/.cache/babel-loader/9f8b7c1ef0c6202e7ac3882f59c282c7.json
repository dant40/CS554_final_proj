{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Returns a string containing a hex representation of the given color component.\r\n *\r\n * @function Phaser.Display.Color.ComponentToHex\r\n * @since 3.0.0\r\n *\r\n * @param {integer} color - The color channel to get the hex value for, must be a value between 0 and 255.\r\n *\r\n * @return {string} A string of length 2 characters, i.e. 255 = ff, 100 = 64.\r\n */\nvar ComponentToHex = function (color) {\n  var hex = color.toString(16);\n  return hex.length === 1 ? '0' + hex : hex;\n};\n\nmodule.exports = ComponentToHex;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/display/color/ComponentToHex.js"],"names":["ComponentToHex","color","hex","toString","length","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;AAUA,IAAIA,cAAc,GAAG,UAAUC,KAAV,EACrB;AACI,MAAIC,GAAG,GAAGD,KAAK,CAACE,QAAN,CAAe,EAAf,CAAV;AAEA,SAAQD,GAAG,CAACE,MAAJ,KAAe,CAAhB,GAAqB,MAAMF,GAA3B,GAAiCA,GAAxC;AACH,CALD;;AAOAG,MAAM,CAACC,OAAP,GAAiBN,cAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Returns a string containing a hex representation of the given color component.\r\n *\r\n * @function Phaser.Display.Color.ComponentToHex\r\n * @since 3.0.0\r\n *\r\n * @param {integer} color - The color channel to get the hex value for, must be a value between 0 and 255.\r\n *\r\n * @return {string} A string of length 2 characters, i.e. 255 = ff, 100 = 64.\r\n */\r\nvar ComponentToHex = function (color)\r\n{\r\n    var hex = color.toString(16);\r\n\r\n    return (hex.length === 1) ? '0' + hex : hex;\r\n};\r\n\r\nmodule.exports = ComponentToHex;\r\n"]},"metadata":{},"sourceType":"script"}