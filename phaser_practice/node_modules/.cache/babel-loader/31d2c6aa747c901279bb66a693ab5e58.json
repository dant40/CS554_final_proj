{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Blitter = require('./Blitter');\n\nvar BuildGameObject = require('../BuildGameObject');\n\nvar GameObjectCreator = require('../GameObjectCreator');\n\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\n/**\r\n * Creates a new Blitter Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Blitter Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#blitter\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Blitter} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('blitter', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  }\n\n  var key = GetAdvancedValue(config, 'key', null);\n  var frame = GetAdvancedValue(config, 'frame', null);\n  var blitter = new Blitter(this.scene, 0, 0, key, frame);\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  BuildGameObject(this.scene, blitter, config);\n  return blitter;\n}); //  When registering a factory function 'this' refers to the GameObjectCreator context.","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/blitter/BlitterCreator.js"],"names":["Blitter","require","BuildGameObject","GameObjectCreator","GetAdvancedValue","register","config","addToScene","undefined","key","frame","blitter","scene","add"],"mappings":"AAAA;;;;;AAMA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,oBAAD,CAA7B;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,sBAAD,CAA/B;;AACA,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,qCAAD,CAA9B;AAEA;;;;;;;;;;;;;;;AAaAE,iBAAiB,CAACE,QAAlB,CAA2B,SAA3B,EAAsC,UAAUC,MAAV,EAAkBC,UAAlB,EACtC;AACI,MAAID,MAAM,KAAKE,SAAf,EAA0B;AAAEF,IAAAA,MAAM,GAAG,EAAT;AAAc;;AAE1C,MAAIG,GAAG,GAAGL,gBAAgB,CAACE,MAAD,EAAS,KAAT,EAAgB,IAAhB,CAA1B;AACA,MAAII,KAAK,GAAGN,gBAAgB,CAACE,MAAD,EAAS,OAAT,EAAkB,IAAlB,CAA5B;AAEA,MAAIK,OAAO,GAAG,IAAIX,OAAJ,CAAY,KAAKY,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BH,GAA9B,EAAmCC,KAAnC,CAAd;;AAEA,MAAIH,UAAU,KAAKC,SAAnB,EACA;AACIF,IAAAA,MAAM,CAACO,GAAP,GAAaN,UAAb;AACH;;AAEDL,EAAAA,eAAe,CAAC,KAAKU,KAAN,EAAaD,OAAb,EAAsBL,MAAtB,CAAf;AAEA,SAAOK,OAAP;AACH,CAjBD,E,CAmBA","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Blitter = require('./Blitter');\r\nvar BuildGameObject = require('../BuildGameObject');\r\nvar GameObjectCreator = require('../GameObjectCreator');\r\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\r\n\r\n/**\r\n * Creates a new Blitter Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Blitter Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#blitter\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Blitter} The Game Object that was created.\r\n */\r\nGameObjectCreator.register('blitter', function (config, addToScene)\r\n{\r\n    if (config === undefined) { config = {}; }\r\n\r\n    var key = GetAdvancedValue(config, 'key', null);\r\n    var frame = GetAdvancedValue(config, 'frame', null);\r\n\r\n    var blitter = new Blitter(this.scene, 0, 0, key, frame);\r\n\r\n    if (addToScene !== undefined)\r\n    {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    BuildGameObject(this.scene, blitter, config);\r\n\r\n    return blitter;\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectCreator context.\r\n"]},"metadata":{},"sourceType":"script"}