{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar BuildGameObject = require('../../BuildGameObject');\n\nvar GameObjectCreator = require('../../GameObjectCreator');\n\nvar GetAdvancedValue = require('../../../utils/object/GetAdvancedValue');\n\nvar Text = require('./Text');\n/**\r\n * Creates a new Text Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Text Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#text\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Text} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('text', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  } // style Object = {\n  //     font: [ 'font', '16px Courier' ],\n  //     backgroundColor: [ 'backgroundColor', null ],\n  //     fill: [ 'fill', '#fff' ],\n  //     stroke: [ 'stroke', '#fff' ],\n  //     strokeThickness: [ 'strokeThickness', 0 ],\n  //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\n  //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\n  //     shadowColor: [ 'shadow.color', '#000' ],\n  //     shadowBlur: [ 'shadow.blur', 0 ],\n  //     shadowStroke: [ 'shadow.stroke', false ],\n  //     shadowFill: [ 'shadow.fill', false ],\n  //     align: [ 'align', 'left' ],\n  //     maxLines: [ 'maxLines', 0 ],\n  //     fixedWidth: [ 'fixedWidth', false ],\n  //     fixedHeight: [ 'fixedHeight', false ],\n  //     rtl: [ 'rtl', false ]\n  // }\n\n\n  var content = GetAdvancedValue(config, 'text', '');\n  var style = GetAdvancedValue(config, 'style', null); //  Padding\n  //      { padding: 2 }\n  //      { padding: { x: , y: }}\n  //      { padding: { left: , top: }}\n  //      { padding: { left: , right: , top: , bottom: }}\n\n  var padding = GetAdvancedValue(config, 'padding', null);\n\n  if (padding !== null) {\n    style.padding = padding;\n  }\n\n  var text = new Text(this.scene, 0, 0, content, style);\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  BuildGameObject(this.scene, text, config); //  Text specific config options:\n\n  text.autoRound = GetAdvancedValue(config, 'autoRound', true);\n  text.resolution = GetAdvancedValue(config, 'resolution', 1);\n  return text;\n}); //  When registering a factory function 'this' refers to the GameObjectCreator context.","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/text/static/TextCreator.js"],"names":["BuildGameObject","require","GameObjectCreator","GetAdvancedValue","Text","register","config","addToScene","undefined","content","style","padding","text","scene","add","autoRound","resolution"],"mappings":"AAAA;;;;;AAMA,IAAIA,eAAe,GAAGC,OAAO,CAAC,uBAAD,CAA7B;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,yBAAD,CAA/B;;AACA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,wCAAD,CAA9B;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAD,CAAlB;AAEA;;;;;;;;;;;;;;;AAaAC,iBAAiB,CAACG,QAAlB,CAA2B,MAA3B,EAAmC,UAAUC,MAAV,EAAkBC,UAAlB,EACnC;AACI,MAAID,MAAM,KAAKE,SAAf,EAA0B;AAAEF,IAAAA,MAAM,GAAG,EAAT;AAAc,GAD9C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAIG,OAAO,GAAGN,gBAAgB,CAACG,MAAD,EAAS,MAAT,EAAiB,EAAjB,CAA9B;AACA,MAAII,KAAK,GAAGP,gBAAgB,CAACG,MAAD,EAAS,OAAT,EAAkB,IAAlB,CAA5B,CAvBJ,CAyBI;AACA;AACA;AACA;AACA;;AAEA,MAAIK,OAAO,GAAGR,gBAAgB,CAACG,MAAD,EAAS,SAAT,EAAoB,IAApB,CAA9B;;AAEA,MAAIK,OAAO,KAAK,IAAhB,EACA;AACID,IAAAA,KAAK,CAACC,OAAN,GAAgBA,OAAhB;AACH;;AAED,MAAIC,IAAI,GAAG,IAAIR,IAAJ,CAAS,KAAKS,KAAd,EAAqB,CAArB,EAAwB,CAAxB,EAA2BJ,OAA3B,EAAoCC,KAApC,CAAX;;AAEA,MAAIH,UAAU,KAAKC,SAAnB,EACA;AACIF,IAAAA,MAAM,CAACQ,GAAP,GAAaP,UAAb;AACH;;AAEDP,EAAAA,eAAe,CAAC,KAAKa,KAAN,EAAaD,IAAb,EAAmBN,MAAnB,CAAf,CA7CJ,CA+CI;;AAEAM,EAAAA,IAAI,CAACG,SAAL,GAAiBZ,gBAAgB,CAACG,MAAD,EAAS,WAAT,EAAsB,IAAtB,CAAjC;AACAM,EAAAA,IAAI,CAACI,UAAL,GAAkBb,gBAAgB,CAACG,MAAD,EAAS,YAAT,EAAuB,CAAvB,CAAlC;AAEA,SAAOM,IAAP;AACH,CAtDD,E,CAwDA","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar BuildGameObject = require('../../BuildGameObject');\r\nvar GameObjectCreator = require('../../GameObjectCreator');\r\nvar GetAdvancedValue = require('../../../utils/object/GetAdvancedValue');\r\nvar Text = require('./Text');\r\n\r\n/**\r\n * Creates a new Text Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Text Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#text\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Text} The Game Object that was created.\r\n */\r\nGameObjectCreator.register('text', function (config, addToScene)\r\n{\r\n    if (config === undefined) { config = {}; }\r\n\r\n    // style Object = {\r\n    //     font: [ 'font', '16px Courier' ],\r\n    //     backgroundColor: [ 'backgroundColor', null ],\r\n    //     fill: [ 'fill', '#fff' ],\r\n    //     stroke: [ 'stroke', '#fff' ],\r\n    //     strokeThickness: [ 'strokeThickness', 0 ],\r\n    //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\r\n    //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\r\n    //     shadowColor: [ 'shadow.color', '#000' ],\r\n    //     shadowBlur: [ 'shadow.blur', 0 ],\r\n    //     shadowStroke: [ 'shadow.stroke', false ],\r\n    //     shadowFill: [ 'shadow.fill', false ],\r\n    //     align: [ 'align', 'left' ],\r\n    //     maxLines: [ 'maxLines', 0 ],\r\n    //     fixedWidth: [ 'fixedWidth', false ],\r\n    //     fixedHeight: [ 'fixedHeight', false ],\r\n    //     rtl: [ 'rtl', false ]\r\n    // }\r\n\r\n    var content = GetAdvancedValue(config, 'text', '');\r\n    var style = GetAdvancedValue(config, 'style', null);\r\n\r\n    //  Padding\r\n    //      { padding: 2 }\r\n    //      { padding: { x: , y: }}\r\n    //      { padding: { left: , top: }}\r\n    //      { padding: { left: , right: , top: , bottom: }}\r\n\r\n    var padding = GetAdvancedValue(config, 'padding', null);\r\n\r\n    if (padding !== null)\r\n    {\r\n        style.padding = padding;\r\n    }\r\n\r\n    var text = new Text(this.scene, 0, 0, content, style);\r\n\r\n    if (addToScene !== undefined)\r\n    {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    BuildGameObject(this.scene, text, config);\r\n\r\n    //  Text specific config options:\r\n\r\n    text.autoRound = GetAdvancedValue(config, 'autoRound', true);\r\n    text.resolution = GetAdvancedValue(config, 'resolution', 1);\r\n\r\n    return text;\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectCreator context.\r\n"]},"metadata":{},"sourceType":"script"}