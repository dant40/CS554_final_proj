{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Converts from tile X coordinates (tile units) to world X coordinates (pixels), factoring in the\r\n * layer's position, scale and scroll.\r\n *\r\n * @function Phaser.Tilemaps.Components.TileToWorldX\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} tileX - The x coordinate, in tiles, not pixels.\r\n * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - The Camera to use when calculating the tile index from the world values.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n * \r\n * @return {number}\r\n */\nvar TileToWorldX = function (tileX, camera, layer) {\n  var tileWidth = layer.baseTileWidth;\n  var tilemapLayer = layer.tilemapLayer;\n  var layerWorldX = 0;\n\n  if (tilemapLayer) {\n    if (camera === undefined) {\n      camera = tilemapLayer.scene.cameras.main;\n    }\n\n    layerWorldX = tilemapLayer.x + camera.scrollX * (1 - tilemapLayer.scrollFactorX);\n    tileWidth *= tilemapLayer.scaleX;\n  }\n\n  return layerWorldX + tileX * tileWidth;\n};\n\nmodule.exports = TileToWorldX;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/tilemaps/components/TileToWorldX.js"],"names":["TileToWorldX","tileX","camera","layer","tileWidth","baseTileWidth","tilemapLayer","layerWorldX","undefined","scene","cameras","main","x","scrollX","scrollFactorX","scaleX","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;AAcA,IAAIA,YAAY,GAAG,UAAUC,KAAV,EAAiBC,MAAjB,EAAyBC,KAAzB,EACnB;AACI,MAAIC,SAAS,GAAGD,KAAK,CAACE,aAAtB;AACA,MAAIC,YAAY,GAAGH,KAAK,CAACG,YAAzB;AACA,MAAIC,WAAW,GAAG,CAAlB;;AAEA,MAAID,YAAJ,EACA;AACI,QAAIJ,MAAM,KAAKM,SAAf,EAA0B;AAAEN,MAAAA,MAAM,GAAGI,YAAY,CAACG,KAAb,CAAmBC,OAAnB,CAA2BC,IAApC;AAA2C;;AAEvEJ,IAAAA,WAAW,GAAGD,YAAY,CAACM,CAAb,GAAiBV,MAAM,CAACW,OAAP,IAAkB,IAAIP,YAAY,CAACQ,aAAnC,CAA/B;AAEAV,IAAAA,SAAS,IAAIE,YAAY,CAACS,MAA1B;AACH;;AAED,SAAOR,WAAW,GAAGN,KAAK,GAAGG,SAA7B;AACH,CAhBD;;AAkBAY,MAAM,CAACC,OAAP,GAAiBjB,YAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Converts from tile X coordinates (tile units) to world X coordinates (pixels), factoring in the\r\n * layer's position, scale and scroll.\r\n *\r\n * @function Phaser.Tilemaps.Components.TileToWorldX\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} tileX - The x coordinate, in tiles, not pixels.\r\n * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - The Camera to use when calculating the tile index from the world values.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n * \r\n * @return {number}\r\n */\r\nvar TileToWorldX = function (tileX, camera, layer)\r\n{\r\n    var tileWidth = layer.baseTileWidth;\r\n    var tilemapLayer = layer.tilemapLayer;\r\n    var layerWorldX = 0;\r\n\r\n    if (tilemapLayer)\r\n    {\r\n        if (camera === undefined) { camera = tilemapLayer.scene.cameras.main; }\r\n\r\n        layerWorldX = tilemapLayer.x + camera.scrollX * (1 - tilemapLayer.scrollFactorX);\r\n\r\n        tileWidth *= tilemapLayer.scaleX;\r\n    }\r\n\r\n    return layerWorldX + tileX * tileWidth;\r\n};\r\n\r\nmodule.exports = TileToWorldX;\r\n"]},"metadata":{},"sourceType":"script"}