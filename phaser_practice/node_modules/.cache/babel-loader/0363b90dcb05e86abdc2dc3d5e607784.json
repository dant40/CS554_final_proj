{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Video#renderCanvas\r\n * @since 3.20.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.Video} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\nvar VideoCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\n  if (src.videoTexture) {\n    renderer.batchSprite(src, src.frame, camera, parentMatrix);\n  }\n};\n\nmodule.exports = VideoCanvasRenderer;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/video/VideoCanvasRenderer.js"],"names":["VideoCanvasRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","videoTexture","batchSprite","frame","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;;;AAeA,IAAIA,mBAAmB,GAAG,UAAUC,QAAV,EAAoBC,GAApB,EAAyBC,uBAAzB,EAAkDC,MAAlD,EAA0DC,YAA1D,EAC1B;AACI,MAAIH,GAAG,CAACI,YAAR,EACA;AACIL,IAAAA,QAAQ,CAACM,WAAT,CAAqBL,GAArB,EAA0BA,GAAG,CAACM,KAA9B,EAAqCJ,MAArC,EAA6CC,YAA7C;AACH;AACJ,CAND;;AAQAI,MAAM,CAACC,OAAP,GAAiBV,mBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Video#renderCanvas\r\n * @since 3.20.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.Video} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar VideoCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    if (src.videoTexture)\r\n    {\r\n        renderer.batchSprite(src, src.frame, camera, parentMatrix);\r\n    }\r\n};\r\n\r\nmodule.exports = VideoCanvasRenderer;\r\n"]},"metadata":{},"sourceType":"script"}