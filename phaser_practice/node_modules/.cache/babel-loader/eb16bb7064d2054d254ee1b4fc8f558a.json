{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Creates and returns an RFC4122 version 4 compliant UUID.\r\n * \r\n * The string is in the form: `xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx` where each `x` is replaced with a random\r\n * hexadecimal digit from 0 to f, and `y` is replaced with a random hexadecimal digit from 8 to b.\r\n *\r\n * @function Phaser.Utils.String.UUID\r\n * @since 3.12.0\r\n *\r\n * @return {string} The UUID string.\r\n */\nvar UUID = function () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\n\nmodule.exports = UUID;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/utils/string/UUID.js"],"names":["UUID","replace","c","r","Math","random","v","toString","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;AAWA,IAAIA,IAAI,GAAG,YACX;AACI,SAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,EAAwD,UAAUC,CAAV,EAC/D;AACI,QAAIC,CAAC,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,CAA7B;AACA,QAAIC,CAAC,GAAIJ,CAAC,KAAK,GAAP,GAAcC,CAAd,GAAmBA,CAAC,GAAG,GAAJ,GAAU,GAArC;AAEA,WAAOG,CAAC,CAACC,QAAF,CAAW,EAAX,CAAP;AACH,GANM,CAAP;AAOH,CATD;;AAWAC,MAAM,CAACC,OAAP,GAAiBT,IAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Creates and returns an RFC4122 version 4 compliant UUID.\r\n * \r\n * The string is in the form: `xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx` where each `x` is replaced with a random\r\n * hexadecimal digit from 0 to f, and `y` is replaced with a random hexadecimal digit from 8 to b.\r\n *\r\n * @function Phaser.Utils.String.UUID\r\n * @since 3.12.0\r\n *\r\n * @return {string} The UUID string.\r\n */\r\nvar UUID = function ()\r\n{\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c)\r\n    {\r\n        var r = Math.random() * 16 | 0;\r\n        var v = (c === 'x') ? r : (r & 0x3 | 0x8);\r\n\r\n        return v.toString(16);\r\n    });\r\n};\r\n\r\nmodule.exports = UUID;\r\n"]},"metadata":{},"sourceType":"script"}