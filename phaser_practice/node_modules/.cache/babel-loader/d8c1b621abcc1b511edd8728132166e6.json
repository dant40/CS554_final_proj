{"ast":null,"code":"/**\r\n * @author       @dxu https://github.com/dxu/matter-collision-events\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar MatterCollisionEvents = {\n  name: 'matter-collision-events',\n  version: '0.1.6',\n  for: 'matter-js@^0.14.2',\n  silent: true,\n  install: function (matter) {\n    matter.after('Engine.create', function () {\n      matter.Events.on(this, 'collisionStart', function (event) {\n        event.pairs.map(function (pair) {\n          var bodyA = pair.bodyA;\n          var bodyB = pair.bodyB;\n\n          if (bodyA.gameObject) {\n            bodyA.gameObject.emit('collide', bodyA, bodyB, pair);\n          }\n\n          if (bodyB.gameObject) {\n            bodyB.gameObject.emit('collide', bodyB, bodyA, pair);\n          }\n\n          matter.Events.trigger(bodyA, 'onCollide', {\n            pair: pair\n          });\n          matter.Events.trigger(bodyB, 'onCollide', {\n            pair: pair\n          });\n\n          if (bodyA.onCollideCallback) {\n            bodyA.onCollideCallback(pair);\n          }\n\n          if (bodyB.onCollideCallback) {\n            bodyB.onCollideCallback(pair);\n          }\n\n          if (bodyA.onCollideWith[bodyB.id]) {\n            bodyA.onCollideWith[bodyB.id](bodyB, pair);\n          }\n\n          if (bodyB.onCollideWith[bodyA.id]) {\n            bodyB.onCollideWith[bodyA.id](bodyA, pair);\n          }\n        });\n      });\n      matter.Events.on(this, 'collisionActive', function (event) {\n        event.pairs.map(function (pair) {\n          var bodyA = pair.bodyA;\n          var bodyB = pair.bodyB;\n\n          if (bodyA.gameObject) {\n            bodyA.gameObject.emit('collideActive', bodyA, bodyB, pair);\n          }\n\n          if (bodyB.gameObject) {\n            bodyB.gameObject.emit('collideActive', bodyB, bodyA, pair);\n          }\n\n          matter.Events.trigger(bodyA, 'onCollideActive', {\n            pair: pair\n          });\n          matter.Events.trigger(bodyB, 'onCollideActive', {\n            pair: pair\n          });\n\n          if (bodyA.onCollideActiveCallback) {\n            bodyA.onCollideActiveCallback(pair);\n          }\n\n          if (bodyB.onCollideActiveCallback) {\n            bodyB.onCollideActiveCallback(pair);\n          }\n        });\n      });\n      matter.Events.on(this, 'collisionEnd', function (event) {\n        event.pairs.map(function (pair) {\n          var bodyA = pair.bodyA;\n          var bodyB = pair.bodyB;\n\n          if (bodyA.gameObject) {\n            bodyA.gameObject.emit('collideEnd', bodyA, bodyB, pair);\n          }\n\n          if (bodyB.gameObject) {\n            bodyB.gameObject.emit('collideEnd', bodyB, bodyA, pair);\n          }\n\n          matter.Events.trigger(bodyA, 'onCollideEnd', {\n            pair: pair\n          });\n          matter.Events.trigger(bodyB, 'onCollideEnd', {\n            pair: pair\n          });\n\n          if (bodyA.onCollideEndCallback) {\n            bodyA.onCollideEndCallback(pair);\n          }\n\n          if (bodyB.onCollideEndCallback) {\n            bodyB.onCollideEndCallback(pair);\n          }\n        });\n      });\n    });\n  }\n};\nmodule.exports = MatterCollisionEvents;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/matter-js/lib/plugins/MatterCollisionEvents.js"],"names":["MatterCollisionEvents","name","version","for","silent","install","matter","after","Events","on","event","pairs","map","pair","bodyA","bodyB","gameObject","emit","trigger","onCollideCallback","onCollideWith","id","onCollideActiveCallback","onCollideEndCallback","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,qBAAqB,GAAG;AAExBC,EAAAA,IAAI,EAAE,yBAFkB;AAGxBC,EAAAA,OAAO,EAAE,OAHe;AAIxBC,EAAAA,GAAG,EAAE,mBAJmB;AAKxBC,EAAAA,MAAM,EAAE,IALgB;AAOxBC,EAAAA,OAAO,EAAE,UAAUC,MAAV,EACT;AACIA,IAAAA,MAAM,CAACC,KAAP,CAAa,eAAb,EAA8B,YAC9B;AACID,MAAAA,MAAM,CAACE,MAAP,CAAcC,EAAd,CAAiB,IAAjB,EAAuB,gBAAvB,EAAyC,UAAUC,KAAV,EACzC;AACIA,QAAAA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAUC,IAAV,EAChB;AACI,cAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACA,cAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;;AAEA,cAAID,KAAK,CAACE,UAAV,EACA;AACIF,YAAAA,KAAK,CAACE,UAAN,CAAiBC,IAAjB,CAAsB,SAAtB,EAAiCH,KAAjC,EAAwCC,KAAxC,EAA+CF,IAA/C;AACH;;AAED,cAAIE,KAAK,CAACC,UAAV,EACA;AACID,YAAAA,KAAK,CAACC,UAAN,CAAiBC,IAAjB,CAAsB,SAAtB,EAAiCF,KAAjC,EAAwCD,KAAxC,EAA+CD,IAA/C;AACH;;AAEDP,UAAAA,MAAM,CAACE,MAAP,CAAcU,OAAd,CAAsBJ,KAAtB,EAA6B,WAA7B,EAA0C;AAAED,YAAAA,IAAI,EAAEA;AAAR,WAA1C;AACAP,UAAAA,MAAM,CAACE,MAAP,CAAcU,OAAd,CAAsBH,KAAtB,EAA6B,WAA7B,EAA0C;AAAEF,YAAAA,IAAI,EAAEA;AAAR,WAA1C;;AAEA,cAAIC,KAAK,CAACK,iBAAV,EACA;AACIL,YAAAA,KAAK,CAACK,iBAAN,CAAwBN,IAAxB;AACH;;AAED,cAAIE,KAAK,CAACI,iBAAV,EACA;AACIJ,YAAAA,KAAK,CAACI,iBAAN,CAAwBN,IAAxB;AACH;;AAED,cAAIC,KAAK,CAACM,aAAN,CAAoBL,KAAK,CAACM,EAA1B,CAAJ,EACA;AACIP,YAAAA,KAAK,CAACM,aAAN,CAAoBL,KAAK,CAACM,EAA1B,EAA8BN,KAA9B,EAAqCF,IAArC;AACH;;AAED,cAAIE,KAAK,CAACK,aAAN,CAAoBN,KAAK,CAACO,EAA1B,CAAJ,EACA;AACIN,YAAAA,KAAK,CAACK,aAAN,CAAoBN,KAAK,CAACO,EAA1B,EAA8BP,KAA9B,EAAqCD,IAArC;AACH;AACJ,SArCD;AAsCH,OAxCD;AA0CAP,MAAAA,MAAM,CAACE,MAAP,CAAcC,EAAd,CAAiB,IAAjB,EAAuB,iBAAvB,EAA0C,UAAUC,KAAV,EAC1C;AACIA,QAAAA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAUC,IAAV,EAChB;AACI,cAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACA,cAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;;AAEA,cAAID,KAAK,CAACE,UAAV,EACA;AACIF,YAAAA,KAAK,CAACE,UAAN,CAAiBC,IAAjB,CAAsB,eAAtB,EAAuCH,KAAvC,EAA8CC,KAA9C,EAAqDF,IAArD;AACH;;AAED,cAAIE,KAAK,CAACC,UAAV,EACA;AACID,YAAAA,KAAK,CAACC,UAAN,CAAiBC,IAAjB,CAAsB,eAAtB,EAAuCF,KAAvC,EAA8CD,KAA9C,EAAqDD,IAArD;AACH;;AAEDP,UAAAA,MAAM,CAACE,MAAP,CAAcU,OAAd,CAAsBJ,KAAtB,EAA6B,iBAA7B,EAAgD;AAAED,YAAAA,IAAI,EAAEA;AAAR,WAAhD;AACAP,UAAAA,MAAM,CAACE,MAAP,CAAcU,OAAd,CAAsBH,KAAtB,EAA6B,iBAA7B,EAAgD;AAAEF,YAAAA,IAAI,EAAEA;AAAR,WAAhD;;AAEA,cAAIC,KAAK,CAACQ,uBAAV,EACA;AACIR,YAAAA,KAAK,CAACQ,uBAAN,CAA8BT,IAA9B;AACH;;AAED,cAAIE,KAAK,CAACO,uBAAV,EACA;AACIP,YAAAA,KAAK,CAACO,uBAAN,CAA8BT,IAA9B;AACH;AACJ,SA3BD;AA4BH,OA9BD;AAgCAP,MAAAA,MAAM,CAACE,MAAP,CAAcC,EAAd,CAAiB,IAAjB,EAAuB,cAAvB,EAAuC,UAAUC,KAAV,EACvC;AACIA,QAAAA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAUC,IAAV,EAChB;AACI,cAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACA,cAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;;AAEA,cAAID,KAAK,CAACE,UAAV,EACA;AACIF,YAAAA,KAAK,CAACE,UAAN,CAAiBC,IAAjB,CAAsB,YAAtB,EAAoCH,KAApC,EAA2CC,KAA3C,EAAkDF,IAAlD;AACH;;AAED,cAAIE,KAAK,CAACC,UAAV,EACA;AACID,YAAAA,KAAK,CAACC,UAAN,CAAiBC,IAAjB,CAAsB,YAAtB,EAAoCF,KAApC,EAA2CD,KAA3C,EAAkDD,IAAlD;AACH;;AAEDP,UAAAA,MAAM,CAACE,MAAP,CAAcU,OAAd,CAAsBJ,KAAtB,EAA6B,cAA7B,EAA6C;AAAED,YAAAA,IAAI,EAAEA;AAAR,WAA7C;AACAP,UAAAA,MAAM,CAACE,MAAP,CAAcU,OAAd,CAAsBH,KAAtB,EAA6B,cAA7B,EAA6C;AAAEF,YAAAA,IAAI,EAAEA;AAAR,WAA7C;;AAEA,cAAIC,KAAK,CAACS,oBAAV,EACA;AACIT,YAAAA,KAAK,CAACS,oBAAN,CAA2BV,IAA3B;AACH;;AAED,cAAIE,KAAK,CAACQ,oBAAV,EACA;AACIR,YAAAA,KAAK,CAACQ,oBAAN,CAA2BV,IAA3B;AACH;AACJ,SA3BD;AA4BH,OA9BD;AA+BH,KA3GD;AA4GH;AArHuB,CAA5B;AAwHAW,MAAM,CAACC,OAAP,GAAiBzB,qBAAjB","sourcesContent":["/**\r\n * @author       @dxu https://github.com/dxu/matter-collision-events\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MatterCollisionEvents = {\r\n\r\n    name: 'matter-collision-events',\r\n    version: '0.1.6',\r\n    for: 'matter-js@^0.14.2',\r\n    silent: true,\r\n\r\n    install: function (matter)\r\n    {\r\n        matter.after('Engine.create', function ()\r\n        {\r\n            matter.Events.on(this, 'collisionStart', function (event)\r\n            {\r\n                event.pairs.map(function (pair)\r\n                {\r\n                    var bodyA = pair.bodyA;\r\n                    var bodyB = pair.bodyB;\r\n\r\n                    if (bodyA.gameObject)\r\n                    {\r\n                        bodyA.gameObject.emit('collide', bodyA, bodyB, pair);\r\n                    }\r\n\r\n                    if (bodyB.gameObject)\r\n                    {\r\n                        bodyB.gameObject.emit('collide', bodyB, bodyA, pair);\r\n                    }\r\n\r\n                    matter.Events.trigger(bodyA, 'onCollide', { pair: pair });\r\n                    matter.Events.trigger(bodyB, 'onCollide', { pair: pair });\r\n\r\n                    if (bodyA.onCollideCallback)\r\n                    {\r\n                        bodyA.onCollideCallback(pair);\r\n                    }\r\n\r\n                    if (bodyB.onCollideCallback)\r\n                    {\r\n                        bodyB.onCollideCallback(pair);\r\n                    }\r\n\r\n                    if (bodyA.onCollideWith[bodyB.id])\r\n                    {\r\n                        bodyA.onCollideWith[bodyB.id](bodyB, pair);\r\n                    }\r\n\r\n                    if (bodyB.onCollideWith[bodyA.id])\r\n                    {\r\n                        bodyB.onCollideWith[bodyA.id](bodyA, pair);\r\n                    }\r\n                });\r\n            });\r\n\r\n            matter.Events.on(this, 'collisionActive', function (event)\r\n            {\r\n                event.pairs.map(function (pair)\r\n                {\r\n                    var bodyA = pair.bodyA;\r\n                    var bodyB = pair.bodyB;\r\n\r\n                    if (bodyA.gameObject)\r\n                    {\r\n                        bodyA.gameObject.emit('collideActive', bodyA, bodyB, pair);\r\n                    }\r\n\r\n                    if (bodyB.gameObject)\r\n                    {\r\n                        bodyB.gameObject.emit('collideActive', bodyB, bodyA, pair);\r\n                    }\r\n\r\n                    matter.Events.trigger(bodyA, 'onCollideActive', { pair: pair });\r\n                    matter.Events.trigger(bodyB, 'onCollideActive', { pair: pair });\r\n\r\n                    if (bodyA.onCollideActiveCallback)\r\n                    {\r\n                        bodyA.onCollideActiveCallback(pair);\r\n                    }\r\n\r\n                    if (bodyB.onCollideActiveCallback)\r\n                    {\r\n                        bodyB.onCollideActiveCallback(pair);\r\n                    }\r\n                });\r\n            });\r\n\r\n            matter.Events.on(this, 'collisionEnd', function (event)\r\n            {\r\n                event.pairs.map(function (pair)\r\n                {\r\n                    var bodyA = pair.bodyA;\r\n                    var bodyB = pair.bodyB;\r\n\r\n                    if (bodyA.gameObject)\r\n                    {\r\n                        bodyA.gameObject.emit('collideEnd', bodyA, bodyB, pair);\r\n                    }\r\n\r\n                    if (bodyB.gameObject)\r\n                    {\r\n                        bodyB.gameObject.emit('collideEnd', bodyB, bodyA, pair);\r\n                    }\r\n\r\n                    matter.Events.trigger(bodyA, 'onCollideEnd', { pair: pair });\r\n                    matter.Events.trigger(bodyB, 'onCollideEnd', { pair: pair });\r\n\r\n                    if (bodyA.onCollideEndCallback)\r\n                    {\r\n                        bodyA.onCollideEndCallback(pair);\r\n                    }\r\n\r\n                    if (bodyB.onCollideEndCallback)\r\n                    {\r\n                        bodyB.onCollideEndCallback(pair);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nmodule.exports = MatterCollisionEvents;\r\n"]},"metadata":{},"sourceType":"script"}