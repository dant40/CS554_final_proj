{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n\nvar GetFastValue = require('../../utils/object/GetFastValue');\n/**\r\n * @classdesc\r\n * A class for representing data about about a layer in a map. Maps are parsed from CSV, Tiled,\r\n * etc. into this format. Tilemap, StaticTilemapLayer and DynamicTilemapLayer have a reference\r\n * to this data and use it to look up and perform operations on tiles.\r\n *\r\n * @class LayerData\r\n * @memberof Phaser.Tilemaps\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {object} [config] - [description]\r\n */\n\n\nvar LayerData = new Class({\n  initialize: function LayerData(config) {\n    if (config === undefined) {\n      config = {};\n    }\n    /**\r\n     * The name of the layer, if specified in Tiled.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#name\r\n     * @type {string}\r\n     * @since 3.0.0\r\n     */\n\n\n    this.name = GetFastValue(config, 'name', 'layer');\n    /**\r\n     * The x offset of where to draw from the top left\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#x\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.x = GetFastValue(config, 'x', 0);\n    /**\r\n     * The y offset of where to draw from the top left\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#y\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.y = GetFastValue(config, 'y', 0);\n    /**\r\n     * The width in tile of the layer.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#width\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.width = GetFastValue(config, 'width', 0);\n    /**\r\n     * The height in tiles of the layer.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#height\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.height = GetFastValue(config, 'height', 0);\n    /**\r\n     * The pixel width of the tiles.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#tileWidth\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.tileWidth = GetFastValue(config, 'tileWidth', 0);\n    /**\r\n     * The pixel height of the tiles.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#tileHeight\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.tileHeight = GetFastValue(config, 'tileHeight', 0);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#baseTileWidth\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.baseTileWidth = GetFastValue(config, 'baseTileWidth', this.tileWidth);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#baseTileHeight\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.baseTileHeight = GetFastValue(config, 'baseTileHeight', this.tileHeight);\n    /**\r\n     * The width in pixels of the entire layer.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#widthInPixels\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.widthInPixels = GetFastValue(config, 'widthInPixels', this.width * this.baseTileWidth);\n    /**\r\n     * The height in pixels of the entire layer.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#heightInPixels\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.heightInPixels = GetFastValue(config, 'heightInPixels', this.height * this.baseTileHeight);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#alpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.alpha = GetFastValue(config, 'alpha', 1);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#visible\r\n     * @type {boolean}\r\n     * @since 3.0.0\r\n     */\n\n    this.visible = GetFastValue(config, 'visible', true);\n    /**\r\n     * Layer specific properties (can be specified in Tiled)\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#properties\r\n     * @type {object}\r\n     * @since 3.0.0\r\n     */\n\n    this.properties = GetFastValue(config, 'properties', {});\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#indexes\r\n     * @type {array}\r\n     * @since 3.0.0\r\n     */\n\n    this.indexes = GetFastValue(config, 'indexes', []);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#collideIndexes\r\n     * @type {array}\r\n     * @since 3.0.0\r\n     */\n\n    this.collideIndexes = GetFastValue(config, 'collideIndexes', []);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#callbacks\r\n     * @type {array}\r\n     * @since 3.0.0\r\n     */\n\n    this.callbacks = GetFastValue(config, 'callbacks', []);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#bodies\r\n     * @type {array}\r\n     * @since 3.0.0\r\n     */\n\n    this.bodies = GetFastValue(config, 'bodies', []);\n    /**\r\n     * An array of the tile indexes\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#data\r\n     * @type {Phaser.Tilemaps.Tile[][]}\r\n     * @since 3.0.0\r\n     */\n\n    this.data = GetFastValue(config, 'data', []);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#tilemapLayer\r\n     * @type {(Phaser.Tilemaps.DynamicTilemapLayer|Phaser.Tilemaps.StaticTilemapLayer)}\r\n     * @since 3.0.0\r\n     */\n\n    this.tilemapLayer = GetFastValue(config, 'tilemapLayer', null);\n  }\n});\nmodule.exports = LayerData;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/tilemaps/mapdata/LayerData.js"],"names":["Class","require","GetFastValue","LayerData","initialize","config","undefined","name","x","y","width","height","tileWidth","tileHeight","baseTileWidth","baseTileHeight","widthInPixels","heightInPixels","alpha","visible","properties","indexes","collideIndexes","callbacks","bodies","data","tilemapLayer","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,iCAAD,CAA1B;AAEA;;;;;;;;;;;;;;;AAaA,IAAIE,SAAS,GAAG,IAAIH,KAAJ,CAAU;AAEtBI,EAAAA,UAAU,EAEV,SAASD,SAAT,CAAoBE,MAApB,EACA;AACI,QAAIA,MAAM,KAAKC,SAAf,EAA0B;AAAED,MAAAA,MAAM,GAAG,EAAT;AAAc;AAE1C;;;;;;;;;AAOA,SAAKE,IAAL,GAAYL,YAAY,CAACG,MAAD,EAAS,MAAT,EAAiB,OAAjB,CAAxB;AAEA;;;;;;;;AAOA,SAAKG,CAAL,GAASN,YAAY,CAACG,MAAD,EAAS,GAAT,EAAc,CAAd,CAArB;AAEA;;;;;;;;AAOA,SAAKI,CAAL,GAASP,YAAY,CAACG,MAAD,EAAS,GAAT,EAAc,CAAd,CAArB;AAEA;;;;;;;;AAOA,SAAKK,KAAL,GAAaR,YAAY,CAACG,MAAD,EAAS,OAAT,EAAkB,CAAlB,CAAzB;AAEA;;;;;;;;AAOA,SAAKM,MAAL,GAAcT,YAAY,CAACG,MAAD,EAAS,QAAT,EAAmB,CAAnB,CAA1B;AAEA;;;;;;;;AAOA,SAAKO,SAAL,GAAiBV,YAAY,CAACG,MAAD,EAAS,WAAT,EAAsB,CAAtB,CAA7B;AAEA;;;;;;;;AAOA,SAAKQ,UAAL,GAAkBX,YAAY,CAACG,MAAD,EAAS,YAAT,EAAuB,CAAvB,CAA9B;AAEA;;;;;;;;AAOA,SAAKS,aAAL,GAAqBZ,YAAY,CAACG,MAAD,EAAS,eAAT,EAA0B,KAAKO,SAA/B,CAAjC;AAEA;;;;;;;;AAOA,SAAKG,cAAL,GAAsBb,YAAY,CAACG,MAAD,EAAS,gBAAT,EAA2B,KAAKQ,UAAhC,CAAlC;AAEA;;;;;;;;AAOA,SAAKG,aAAL,GAAqBd,YAAY,CAACG,MAAD,EAAS,eAAT,EAA0B,KAAKK,KAAL,GAAa,KAAKI,aAA5C,CAAjC;AAEA;;;;;;;;AAOA,SAAKG,cAAL,GAAsBf,YAAY,CAACG,MAAD,EAAS,gBAAT,EAA2B,KAAKM,MAAL,GAAc,KAAKI,cAA9C,CAAlC;AAEA;;;;;;;;AAOA,SAAKG,KAAL,GAAahB,YAAY,CAACG,MAAD,EAAS,OAAT,EAAkB,CAAlB,CAAzB;AAEA;;;;;;;;AAOA,SAAKc,OAAL,GAAejB,YAAY,CAACG,MAAD,EAAS,SAAT,EAAoB,IAApB,CAA3B;AAEA;;;;;;;;AAOA,SAAKe,UAAL,GAAkBlB,YAAY,CAACG,MAAD,EAAS,YAAT,EAAuB,EAAvB,CAA9B;AAEA;;;;;;;;AAOA,SAAKgB,OAAL,GAAenB,YAAY,CAACG,MAAD,EAAS,SAAT,EAAoB,EAApB,CAA3B;AAEA;;;;;;;;AAOA,SAAKiB,cAAL,GAAsBpB,YAAY,CAACG,MAAD,EAAS,gBAAT,EAA2B,EAA3B,CAAlC;AAEA;;;;;;;;AAOA,SAAKkB,SAAL,GAAiBrB,YAAY,CAACG,MAAD,EAAS,WAAT,EAAsB,EAAtB,CAA7B;AAEA;;;;;;;;AAOA,SAAKmB,MAAL,GAActB,YAAY,CAACG,MAAD,EAAS,QAAT,EAAmB,EAAnB,CAA1B;AAEA;;;;;;;;AAOA,SAAKoB,IAAL,GAAYvB,YAAY,CAACG,MAAD,EAAS,MAAT,EAAiB,EAAjB,CAAxB;AAEA;;;;;;;;AAOA,SAAKqB,YAAL,GAAoBxB,YAAY,CAACG,MAAD,EAAS,cAAT,EAAyB,IAAzB,CAAhC;AACH;AA3LqB,CAAV,CAAhB;AA+LAsB,MAAM,CAACC,OAAP,GAAiBzB,SAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\n\r\n/**\r\n * @classdesc\r\n * A class for representing data about about a layer in a map. Maps are parsed from CSV, Tiled,\r\n * etc. into this format. Tilemap, StaticTilemapLayer and DynamicTilemapLayer have a reference\r\n * to this data and use it to look up and perform operations on tiles.\r\n *\r\n * @class LayerData\r\n * @memberof Phaser.Tilemaps\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {object} [config] - [description]\r\n */\r\nvar LayerData = new Class({\r\n\r\n    initialize:\r\n\r\n    function LayerData (config)\r\n    {\r\n        if (config === undefined) { config = {}; }\r\n\r\n        /**\r\n         * The name of the layer, if specified in Tiled.\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#name\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.name = GetFastValue(config, 'name', 'layer');\r\n\r\n        /**\r\n         * The x offset of where to draw from the top left\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#x\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.x = GetFastValue(config, 'x', 0);\r\n\r\n        /**\r\n         * The y offset of where to draw from the top left\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#y\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.y = GetFastValue(config, 'y', 0);\r\n\r\n        /**\r\n         * The width in tile of the layer.\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#width\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.width = GetFastValue(config, 'width', 0);\r\n\r\n        /**\r\n         * The height in tiles of the layer.\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#height\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.height = GetFastValue(config, 'height', 0);\r\n\r\n        /**\r\n         * The pixel width of the tiles.\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#tileWidth\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.tileWidth = GetFastValue(config, 'tileWidth', 0);\r\n\r\n        /**\r\n         * The pixel height of the tiles.\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#tileHeight\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.tileHeight = GetFastValue(config, 'tileHeight', 0);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#baseTileWidth\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.baseTileWidth = GetFastValue(config, 'baseTileWidth', this.tileWidth);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#baseTileHeight\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.baseTileHeight = GetFastValue(config, 'baseTileHeight', this.tileHeight);\r\n\r\n        /**\r\n         * The width in pixels of the entire layer.\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#widthInPixels\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.widthInPixels = GetFastValue(config, 'widthInPixels', this.width * this.baseTileWidth);\r\n\r\n        /**\r\n         * The height in pixels of the entire layer.\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#heightInPixels\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.heightInPixels = GetFastValue(config, 'heightInPixels', this.height * this.baseTileHeight);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#alpha\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.alpha = GetFastValue(config, 'alpha', 1);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#visible\r\n         * @type {boolean}\r\n         * @since 3.0.0\r\n         */\r\n        this.visible = GetFastValue(config, 'visible', true);\r\n\r\n        /**\r\n         * Layer specific properties (can be specified in Tiled)\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#properties\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.properties = GetFastValue(config, 'properties', {});\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#indexes\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.indexes = GetFastValue(config, 'indexes', []);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#collideIndexes\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.collideIndexes = GetFastValue(config, 'collideIndexes', []);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#callbacks\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.callbacks = GetFastValue(config, 'callbacks', []);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#bodies\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.bodies = GetFastValue(config, 'bodies', []);\r\n\r\n        /**\r\n         * An array of the tile indexes\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#data\r\n         * @type {Phaser.Tilemaps.Tile[][]}\r\n         * @since 3.0.0\r\n         */\r\n        this.data = GetFastValue(config, 'data', []);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Tilemaps.LayerData#tilemapLayer\r\n         * @type {(Phaser.Tilemaps.DynamicTilemapLayer|Phaser.Tilemaps.StaticTilemapLayer)}\r\n         * @since 3.0.0\r\n         */\r\n        this.tilemapLayer = GetFastValue(config, 'tilemapLayer', null);\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = LayerData;\r\n"]},"metadata":{},"sourceType":"script"}