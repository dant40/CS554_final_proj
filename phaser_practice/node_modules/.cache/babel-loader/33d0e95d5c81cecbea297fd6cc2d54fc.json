{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Adds the given element to the DOM. If a parent is provided the element is added as a child of the parent, providing it was able to access it.\r\n * If no parent was given it falls back to using `document.body`.\r\n *\r\n * @function Phaser.DOM.AddToDOM\r\n * @since 3.0.0\r\n *\r\n * @param {HTMLElement} element - The element to be added to the DOM. Usually a Canvas object.\r\n * @param {(string|HTMLElement)} [parent] - The parent in which to add the element. Can be a string which is passed to `getElementById` or an actual DOM object.\r\n *\r\n * @return {HTMLElement} The element that was added to the DOM.\r\n */\nvar AddToDOM = function (element, parent) {\n  var target;\n\n  if (parent) {\n    if (typeof parent === 'string') {\n      //  Hopefully an element ID\n      target = document.getElementById(parent);\n    } else if (typeof parent === 'object' && parent.nodeType === 1) {\n      //  Quick test for a HTMLElement\n      target = parent;\n    }\n  } else if (element.parentElement) {\n    return element;\n  } //  Fallback, covers an invalid ID and a non HTMLElement object\n\n\n  if (!target) {\n    target = document.body;\n  }\n\n  target.appendChild(element);\n  return element;\n};\n\nmodule.exports = AddToDOM;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/dom/AddToDOM.js"],"names":["AddToDOM","element","parent","target","document","getElementById","nodeType","parentElement","body","appendChild","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;AAYA,IAAIA,QAAQ,GAAG,UAAUC,OAAV,EAAmBC,MAAnB,EACf;AACI,MAAIC,MAAJ;;AAEA,MAAID,MAAJ,EACA;AACI,QAAI,OAAOA,MAAP,KAAkB,QAAtB,EACA;AACI;AACAC,MAAAA,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,MAAxB,CAAT;AACH,KAJD,MAKK,IAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACI,QAAP,KAAoB,CAAtD,EACL;AACI;AACAH,MAAAA,MAAM,GAAGD,MAAT;AACH;AACJ,GAZD,MAaK,IAAID,OAAO,CAACM,aAAZ,EACL;AACI,WAAON,OAAP;AACH,GAnBL,CAqBI;;;AACA,MAAI,CAACE,MAAL,EACA;AACIA,IAAAA,MAAM,GAAGC,QAAQ,CAACI,IAAlB;AACH;;AAEDL,EAAAA,MAAM,CAACM,WAAP,CAAmBR,OAAnB;AAEA,SAAOA,OAAP;AACH,CA/BD;;AAiCAS,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Adds the given element to the DOM. If a parent is provided the element is added as a child of the parent, providing it was able to access it.\r\n * If no parent was given it falls back to using `document.body`.\r\n *\r\n * @function Phaser.DOM.AddToDOM\r\n * @since 3.0.0\r\n *\r\n * @param {HTMLElement} element - The element to be added to the DOM. Usually a Canvas object.\r\n * @param {(string|HTMLElement)} [parent] - The parent in which to add the element. Can be a string which is passed to `getElementById` or an actual DOM object.\r\n *\r\n * @return {HTMLElement} The element that was added to the DOM.\r\n */\r\nvar AddToDOM = function (element, parent)\r\n{\r\n    var target;\r\n\r\n    if (parent)\r\n    {\r\n        if (typeof parent === 'string')\r\n        {\r\n            //  Hopefully an element ID\r\n            target = document.getElementById(parent);\r\n        }\r\n        else if (typeof parent === 'object' && parent.nodeType === 1)\r\n        {\r\n            //  Quick test for a HTMLElement\r\n            target = parent;\r\n        }\r\n    }\r\n    else if (element.parentElement)\r\n    {\r\n        return element;\r\n    }\r\n\r\n    //  Fallback, covers an invalid ID and a non HTMLElement object\r\n    if (!target)\r\n    {\r\n        target = document.body;\r\n    }\r\n\r\n    target.appendChild(element);\r\n\r\n    return element;\r\n};\r\n\r\nmodule.exports = AddToDOM;\r\n"]},"metadata":{},"sourceType":"script"}