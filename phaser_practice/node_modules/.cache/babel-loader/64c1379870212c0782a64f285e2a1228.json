{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n\nvar Components = require('../components');\n\nvar GameObject = require('../GameObject');\n\nvar ExternRender = require('./ExternRender');\n/**\r\n * @classdesc\r\n * An Extern Game Object is a special type of Game Object that allows you to pass\r\n * rendering off to a 3rd party.\r\n * \r\n * When you create an Extern and place it in the display list of a Scene, the renderer will\r\n * process the list as usual. When it finds an Extern it will flush the current batch,\r\n * clear down the pipeline and prepare a transform matrix which your render function can\r\n * take advantage of, if required.\r\n * \r\n * The WebGL context is then left is a 'clean' state, ready for you to bind your own shaders,\r\n * or draw to it, whatever you wish to do. Once you've finished, you should free-up any\r\n * of your resources. The Extern will then rebind the Phaser pipeline and carry on \r\n * rendering the display list.\r\n * \r\n * Although this object has lots of properties such as Alpha, Blend Mode and Tint, none of\r\n * them are used during rendering unless you take advantage of them in your own render code.\r\n *\r\n * @class Extern\r\n * @extends Phaser.GameObjects.GameObject\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.16.0\r\n *\r\n * @extends Phaser.GameObjects.Components.Alpha\r\n * @extends Phaser.GameObjects.Components.BlendMode\r\n * @extends Phaser.GameObjects.Components.Depth\r\n * @extends Phaser.GameObjects.Components.Flip\r\n * @extends Phaser.GameObjects.Components.Origin\r\n * @extends Phaser.GameObjects.Components.ScrollFactor\r\n * @extends Phaser.GameObjects.Components.Size\r\n * @extends Phaser.GameObjects.Components.Texture\r\n * @extends Phaser.GameObjects.Components.Tint\r\n * @extends Phaser.GameObjects.Components.Transform\r\n * @extends Phaser.GameObjects.Components.Visible\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n */\n\n\nvar Extern = new Class({\n  Extends: GameObject,\n  Mixins: [Components.Alpha, Components.BlendMode, Components.Depth, Components.Flip, Components.Origin, Components.ScrollFactor, Components.Size, Components.Texture, Components.Tint, Components.Transform, Components.Visible, ExternRender],\n  initialize: function Extern(scene) {\n    GameObject.call(this, scene, 'Extern');\n  },\n  preUpdate: function () {//  override this!\n    //  Arguments: time, delta\n  },\n  render: function () {//  override this!\n    //  Arguments: renderer, camera, calcMatrix\n  }\n});\nmodule.exports = Extern;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/extern/Extern.js"],"names":["Class","require","Components","GameObject","ExternRender","Extern","Extends","Mixins","Alpha","BlendMode","Depth","Flip","Origin","ScrollFactor","Size","Texture","Tint","Transform","Visible","initialize","scene","call","preUpdate","render","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,gBAAD,CAA1B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,IAAII,MAAM,GAAG,IAAIL,KAAJ,CAAU;AAEnBM,EAAAA,OAAO,EAAEH,UAFU;AAInBI,EAAAA,MAAM,EAAE,CACJL,UAAU,CAACM,KADP,EAEJN,UAAU,CAACO,SAFP,EAGJP,UAAU,CAACQ,KAHP,EAIJR,UAAU,CAACS,IAJP,EAKJT,UAAU,CAACU,MALP,EAMJV,UAAU,CAACW,YANP,EAOJX,UAAU,CAACY,IAPP,EAQJZ,UAAU,CAACa,OARP,EASJb,UAAU,CAACc,IATP,EAUJd,UAAU,CAACe,SAVP,EAWJf,UAAU,CAACgB,OAXP,EAYJd,YAZI,CAJW;AAmBnBe,EAAAA,UAAU,EAEV,SAASd,MAAT,CAAiBe,KAAjB,EACA;AACIjB,IAAAA,UAAU,CAACkB,IAAX,CAAgB,IAAhB,EAAsBD,KAAtB,EAA6B,QAA7B;AACH,GAxBkB;AA0BnBE,EAAAA,SAAS,EAAE,YACX,CACI;AACA;AACH,GA9BkB;AAgCnBC,EAAAA,MAAM,EAAE,YACR,CACI;AACA;AACH;AApCkB,CAAV,CAAb;AAwCAC,MAAM,CAACC,OAAP,GAAiBpB,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Components = require('../components');\r\nvar GameObject = require('../GameObject');\r\nvar ExternRender = require('./ExternRender');\r\n\r\n/**\r\n * @classdesc\r\n * An Extern Game Object is a special type of Game Object that allows you to pass\r\n * rendering off to a 3rd party.\r\n * \r\n * When you create an Extern and place it in the display list of a Scene, the renderer will\r\n * process the list as usual. When it finds an Extern it will flush the current batch,\r\n * clear down the pipeline and prepare a transform matrix which your render function can\r\n * take advantage of, if required.\r\n * \r\n * The WebGL context is then left is a 'clean' state, ready for you to bind your own shaders,\r\n * or draw to it, whatever you wish to do. Once you've finished, you should free-up any\r\n * of your resources. The Extern will then rebind the Phaser pipeline and carry on \r\n * rendering the display list.\r\n * \r\n * Although this object has lots of properties such as Alpha, Blend Mode and Tint, none of\r\n * them are used during rendering unless you take advantage of them in your own render code.\r\n *\r\n * @class Extern\r\n * @extends Phaser.GameObjects.GameObject\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.16.0\r\n *\r\n * @extends Phaser.GameObjects.Components.Alpha\r\n * @extends Phaser.GameObjects.Components.BlendMode\r\n * @extends Phaser.GameObjects.Components.Depth\r\n * @extends Phaser.GameObjects.Components.Flip\r\n * @extends Phaser.GameObjects.Components.Origin\r\n * @extends Phaser.GameObjects.Components.ScrollFactor\r\n * @extends Phaser.GameObjects.Components.Size\r\n * @extends Phaser.GameObjects.Components.Texture\r\n * @extends Phaser.GameObjects.Components.Tint\r\n * @extends Phaser.GameObjects.Components.Transform\r\n * @extends Phaser.GameObjects.Components.Visible\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n */\r\nvar Extern = new Class({\r\n\r\n    Extends: GameObject,\r\n\r\n    Mixins: [\r\n        Components.Alpha,\r\n        Components.BlendMode,\r\n        Components.Depth,\r\n        Components.Flip,\r\n        Components.Origin,\r\n        Components.ScrollFactor,\r\n        Components.Size,\r\n        Components.Texture,\r\n        Components.Tint,\r\n        Components.Transform,\r\n        Components.Visible,\r\n        ExternRender\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function Extern (scene)\r\n    {\r\n        GameObject.call(this, scene, 'Extern');\r\n    },\r\n\r\n    preUpdate: function ()\r\n    {\r\n        //  override this!\r\n        //  Arguments: time, delta\r\n    },\r\n\r\n    render: function ()\r\n    {\r\n        //  override this!\r\n        //  Arguments: renderer, camera, calcMatrix\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Extern;\r\n"]},"metadata":{},"sourceType":"script"}