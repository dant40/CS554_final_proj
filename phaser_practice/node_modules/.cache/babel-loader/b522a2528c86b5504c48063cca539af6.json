{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Rectangle = require('../rectangle/Rectangle');\n/**\r\n * Calculates the Axis Aligned Bounding Box (or aabb) from an array of points.\r\n *\r\n * @function Phaser.Geom.Point.GetRectangleFromPoints\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Point[]} points - [description]\r\n * @param {Phaser.Geom.Rectangle} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Rectangle} [description]\r\n */\n\n\nvar GetRectangleFromPoints = function (points, out) {\n  if (out === undefined) {\n    out = new Rectangle();\n  }\n\n  var xMax = Number.NEGATIVE_INFINITY;\n  var xMin = Number.POSITIVE_INFINITY;\n  var yMax = Number.NEGATIVE_INFINITY;\n  var yMin = Number.POSITIVE_INFINITY;\n\n  for (var i = 0; i < points.length; i++) {\n    var point = points[i];\n\n    if (point.x > xMax) {\n      xMax = point.x;\n    }\n\n    if (point.x < xMin) {\n      xMin = point.x;\n    }\n\n    if (point.y > yMax) {\n      yMax = point.y;\n    }\n\n    if (point.y < yMin) {\n      yMin = point.y;\n    }\n  }\n\n  out.x = xMin;\n  out.y = yMin;\n  out.width = xMax - xMin;\n  out.height = yMax - yMin;\n  return out;\n};\n\nmodule.exports = GetRectangleFromPoints;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/point/GetRectangleFromPoints.js"],"names":["Rectangle","require","GetRectangleFromPoints","points","out","undefined","xMax","Number","NEGATIVE_INFINITY","xMin","POSITIVE_INFINITY","yMax","yMin","i","length","point","x","y","width","height","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,SAAS,GAAGC,OAAO,CAAC,wBAAD,CAAvB;AAEA;;;;;;;;;;;;;;;AAaA,IAAIC,sBAAsB,GAAG,UAAUC,MAAV,EAAkBC,GAAlB,EAC7B;AACI,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AAAED,IAAAA,GAAG,GAAG,IAAIJ,SAAJ,EAAN;AAAwB;;AAEjD,MAAIM,IAAI,GAAGC,MAAM,CAACC,iBAAlB;AACA,MAAIC,IAAI,GAAGF,MAAM,CAACG,iBAAlB;AACA,MAAIC,IAAI,GAAGJ,MAAM,CAACC,iBAAlB;AACA,MAAII,IAAI,GAAGL,MAAM,CAACG,iBAAlB;;AAEA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,MAAM,CAACW,MAA3B,EAAmCD,CAAC,EAApC,EACA;AACI,QAAIE,KAAK,GAAGZ,MAAM,CAACU,CAAD,CAAlB;;AAEA,QAAIE,KAAK,CAACC,CAAN,GAAUV,IAAd,EACA;AACIA,MAAAA,IAAI,GAAGS,KAAK,CAACC,CAAb;AACH;;AAED,QAAID,KAAK,CAACC,CAAN,GAAUP,IAAd,EACA;AACIA,MAAAA,IAAI,GAAGM,KAAK,CAACC,CAAb;AACH;;AAED,QAAID,KAAK,CAACE,CAAN,GAAUN,IAAd,EACA;AACIA,MAAAA,IAAI,GAAGI,KAAK,CAACE,CAAb;AACH;;AAED,QAAIF,KAAK,CAACE,CAAN,GAAUL,IAAd,EACA;AACIA,MAAAA,IAAI,GAAGG,KAAK,CAACE,CAAb;AACH;AACJ;;AAEDb,EAAAA,GAAG,CAACY,CAAJ,GAAQP,IAAR;AACAL,EAAAA,GAAG,CAACa,CAAJ,GAAQL,IAAR;AACAR,EAAAA,GAAG,CAACc,KAAJ,GAAYZ,IAAI,GAAGG,IAAnB;AACAL,EAAAA,GAAG,CAACe,MAAJ,GAAaR,IAAI,GAAGC,IAApB;AAEA,SAAOR,GAAP;AACH,CAxCD;;AA0CAgB,MAAM,CAACC,OAAP,GAAiBnB,sBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Rectangle = require('../rectangle/Rectangle');\r\n\r\n/**\r\n * Calculates the Axis Aligned Bounding Box (or aabb) from an array of points.\r\n *\r\n * @function Phaser.Geom.Point.GetRectangleFromPoints\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Point[]} points - [description]\r\n * @param {Phaser.Geom.Rectangle} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Rectangle} [description]\r\n */\r\nvar GetRectangleFromPoints = function (points, out)\r\n{\r\n    if (out === undefined) { out = new Rectangle(); }\r\n\r\n    var xMax = Number.NEGATIVE_INFINITY;\r\n    var xMin = Number.POSITIVE_INFINITY;\r\n    var yMax = Number.NEGATIVE_INFINITY;\r\n    var yMin = Number.POSITIVE_INFINITY;\r\n\r\n    for (var i = 0; i < points.length; i++)\r\n    {\r\n        var point = points[i];\r\n\r\n        if (point.x > xMax)\r\n        {\r\n            xMax = point.x;\r\n        }\r\n\r\n        if (point.x < xMin)\r\n        {\r\n            xMin = point.x;\r\n        }\r\n\r\n        if (point.y > yMax)\r\n        {\r\n            yMax = point.y;\r\n        }\r\n\r\n        if (point.y < yMin)\r\n        {\r\n            yMin = point.y;\r\n        }\r\n    }\r\n\r\n    out.x = xMin;\r\n    out.y = yMin;\r\n    out.width = xMax - xMin;\r\n    out.height = yMax - yMin;\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetRectangleFromPoints;\r\n"]},"metadata":{},"sourceType":"script"}