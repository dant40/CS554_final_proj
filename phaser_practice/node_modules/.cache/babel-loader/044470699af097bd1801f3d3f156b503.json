{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar GetFastValue = require('../../../src/utils/object/GetFastValue');\n/**\r\n * @typedef {object} Purchase\r\n *\r\n * @property {string} [developerPayload] - A developer-specified string, provided during the purchase of the product.\r\n * @property {string} [paymentID] - The identifier for the purchase transaction.\r\n * @property {string} [productID] - The product's game-specified identifier.\r\n * @property {string} [purchaseTime] - Unix timestamp of when the purchase occurred.\r\n * @property {string} [purchaseToken] - A token representing the purchase that may be used to consume the purchase.\r\n * @property {string} [signedRequest] - Server-signed encoding of the purchase request.\r\n */\n\n\nvar Purchase = function (data) {\n  return {\n    developerPayload: GetFastValue(data, 'developerPayload', ''),\n    paymentID: GetFastValue(data, 'paymentID', ''),\n    productID: GetFastValue(data, 'productID', ''),\n    purchaseTime: GetFastValue(data, 'purchaseTime', ''),\n    purchaseToken: GetFastValue(data, 'purchaseToken', ''),\n    signedRequest: GetFastValue(data, 'signedRequest', '')\n  };\n};\n\nmodule.exports = Purchase;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/plugins/fbinstant/src/Purchase.js"],"names":["GetFastValue","require","Purchase","data","developerPayload","paymentID","productID","purchaseTime","purchaseToken","signedRequest","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,YAAY,GAAGC,OAAO,CAAC,wCAAD,CAA1B;AAEA;;;;;;;;;;;;AAWA,IAAIC,QAAQ,GAAG,UAAUC,IAAV,EACf;AACI,SAAO;AACHC,IAAAA,gBAAgB,EAAEJ,YAAY,CAACG,IAAD,EAAO,kBAAP,EAA2B,EAA3B,CAD3B;AAEHE,IAAAA,SAAS,EAAEL,YAAY,CAACG,IAAD,EAAO,WAAP,EAAoB,EAApB,CAFpB;AAGHG,IAAAA,SAAS,EAAEN,YAAY,CAACG,IAAD,EAAO,WAAP,EAAoB,EAApB,CAHpB;AAIHI,IAAAA,YAAY,EAAEP,YAAY,CAACG,IAAD,EAAO,cAAP,EAAuB,EAAvB,CAJvB;AAKHK,IAAAA,aAAa,EAAER,YAAY,CAACG,IAAD,EAAO,eAAP,EAAwB,EAAxB,CALxB;AAMHM,IAAAA,aAAa,EAAET,YAAY,CAACG,IAAD,EAAO,eAAP,EAAwB,EAAxB;AANxB,GAAP;AAQH,CAVD;;AAYAO,MAAM,CAACC,OAAP,GAAiBT,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar GetFastValue = require('../../../src/utils/object/GetFastValue');\r\n\r\n/**\r\n * @typedef {object} Purchase\r\n *\r\n * @property {string} [developerPayload] - A developer-specified string, provided during the purchase of the product.\r\n * @property {string} [paymentID] - The identifier for the purchase transaction.\r\n * @property {string} [productID] - The product's game-specified identifier.\r\n * @property {string} [purchaseTime] - Unix timestamp of when the purchase occurred.\r\n * @property {string} [purchaseToken] - A token representing the purchase that may be used to consume the purchase.\r\n * @property {string} [signedRequest] - Server-signed encoding of the purchase request.\r\n */\r\n\r\nvar Purchase = function (data)\r\n{\r\n    return {\r\n        developerPayload: GetFastValue(data, 'developerPayload', ''),\r\n        paymentID: GetFastValue(data, 'paymentID', ''),\r\n        productID: GetFastValue(data, 'productID', ''),\r\n        purchaseTime: GetFastValue(data, 'purchaseTime', ''),\r\n        purchaseToken: GetFastValue(data, 'purchaseToken', ''),\r\n        signedRequest: GetFastValue(data, 'signedRequest', '')\r\n    };\r\n};\r\n\r\nmodule.exports = Purchase;\r\n"]},"metadata":{},"sourceType":"script"}