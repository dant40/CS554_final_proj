{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Creates a new Pixel Perfect Handler function.\r\n *\r\n * Access via `InputPlugin.makePixelPerfect` rather than calling it directly.\r\n *\r\n * @function Phaser.Input.CreatePixelPerfectHandler\r\n * @since 3.10.0\r\n *\r\n * @param {Phaser.Textures.TextureManager} textureManager - A reference to the Texture Manager.\r\n * @param {integer} alphaTolerance - The alpha level that the pixel should be above to be included as a successful interaction.\r\n *\r\n * @return {function} The new Pixel Perfect Handler function.\r\n */\nvar CreatePixelPerfectHandler = function (textureManager, alphaTolerance) {\n  return function (hitArea, x, y, gameObject) {\n    var alpha = textureManager.getPixelAlpha(x, y, gameObject.texture.key, gameObject.frame.name);\n    return alpha && alpha >= alphaTolerance;\n  };\n};\n\nmodule.exports = CreatePixelPerfectHandler;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/input/CreatePixelPerfectHandler.js"],"names":["CreatePixelPerfectHandler","textureManager","alphaTolerance","hitArea","x","y","gameObject","alpha","getPixelAlpha","texture","key","frame","name","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;;AAaA,IAAIA,yBAAyB,GAAG,UAAUC,cAAV,EAA0BC,cAA1B,EAChC;AACI,SAAO,UAAUC,OAAV,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyBC,UAAzB,EACP;AACI,QAAIC,KAAK,GAAGN,cAAc,CAACO,aAAf,CAA6BJ,CAA7B,EAAgCC,CAAhC,EAAmCC,UAAU,CAACG,OAAX,CAAmBC,GAAtD,EAA2DJ,UAAU,CAACK,KAAX,CAAiBC,IAA5E,CAAZ;AAEA,WAAQL,KAAK,IAAIA,KAAK,IAAIL,cAA1B;AACH,GALD;AAMH,CARD;;AAUAW,MAAM,CAACC,OAAP,GAAiBd,yBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Creates a new Pixel Perfect Handler function.\r\n *\r\n * Access via `InputPlugin.makePixelPerfect` rather than calling it directly.\r\n *\r\n * @function Phaser.Input.CreatePixelPerfectHandler\r\n * @since 3.10.0\r\n *\r\n * @param {Phaser.Textures.TextureManager} textureManager - A reference to the Texture Manager.\r\n * @param {integer} alphaTolerance - The alpha level that the pixel should be above to be included as a successful interaction.\r\n *\r\n * @return {function} The new Pixel Perfect Handler function.\r\n */\r\nvar CreatePixelPerfectHandler = function (textureManager, alphaTolerance)\r\n{\r\n    return function (hitArea, x, y, gameObject)\r\n    {\r\n        var alpha = textureManager.getPixelAlpha(x, y, gameObject.texture.key, gameObject.frame.name);\r\n\r\n        return (alpha && alpha >= alphaTolerance);\r\n    };\r\n};\r\n\r\nmodule.exports = CreatePixelPerfectHandler;\r\n"]},"metadata":{},"sourceType":"script"}