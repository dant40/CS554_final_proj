{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n// Export the points as an array of flat numbers, following the sequence [ x,y, x,y, x,y ]\n\n/**\r\n * Stores all of the points of a Polygon into a flat array of numbers following the sequence [ x,y, x,y, x,y ],\r\n * i.e. each point of the Polygon, in the order it's defined, corresponds to two elements of the resultant\r\n * array for the point's X and Y coordinate.\r\n *\r\n * @function Phaser.Geom.Polygon.GetNumberArray\r\n * @since 3.0.0\r\n *\r\n * @generic {number[]} O - [output,$return]\r\n *\r\n * @param {Phaser.Geom.Polygon} polygon - The Polygon whose points to export.\r\n * @param {(array|number[])} [output] - An array to which the points' coordinates should be appended.\r\n *\r\n * @return {(array|number[])} The modified `output` array, or a new array if none was given.\r\n */\nvar GetNumberArray = function (polygon, output) {\n  if (output === undefined) {\n    output = [];\n  }\n\n  for (var i = 0; i < polygon.points.length; i++) {\n    output.push(polygon.points[i].x);\n    output.push(polygon.points[i].y);\n  }\n\n  return output;\n};\n\nmodule.exports = GetNumberArray;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/polygon/GetNumberArray.js"],"names":["GetNumberArray","polygon","output","undefined","i","points","length","push","x","y","module","exports"],"mappings":"AAAA;;;;;AAMA;;AAEA;;;;;;;;;;;;;;;AAeA,IAAIA,cAAc,GAAG,UAAUC,OAAV,EAAmBC,MAAnB,EACrB;AACI,MAAIA,MAAM,KAAKC,SAAf,EAA0B;AAAED,IAAAA,MAAM,GAAG,EAAT;AAAc;;AAE1C,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAAR,CAAeC,MAAnC,EAA2CF,CAAC,EAA5C,EACA;AACIF,IAAAA,MAAM,CAACK,IAAP,CAAYN,OAAO,CAACI,MAAR,CAAeD,CAAf,EAAkBI,CAA9B;AACAN,IAAAA,MAAM,CAACK,IAAP,CAAYN,OAAO,CAACI,MAAR,CAAeD,CAAf,EAAkBK,CAA9B;AACH;;AAED,SAAOP,MAAP;AACH,CAXD;;AAaAQ,MAAM,CAACC,OAAP,GAAiBX,cAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n// Export the points as an array of flat numbers, following the sequence [ x,y, x,y, x,y ]\r\n\r\n/**\r\n * Stores all of the points of a Polygon into a flat array of numbers following the sequence [ x,y, x,y, x,y ],\r\n * i.e. each point of the Polygon, in the order it's defined, corresponds to two elements of the resultant\r\n * array for the point's X and Y coordinate.\r\n *\r\n * @function Phaser.Geom.Polygon.GetNumberArray\r\n * @since 3.0.0\r\n *\r\n * @generic {number[]} O - [output,$return]\r\n *\r\n * @param {Phaser.Geom.Polygon} polygon - The Polygon whose points to export.\r\n * @param {(array|number[])} [output] - An array to which the points' coordinates should be appended.\r\n *\r\n * @return {(array|number[])} The modified `output` array, or a new array if none was given.\r\n */\r\nvar GetNumberArray = function (polygon, output)\r\n{\r\n    if (output === undefined) { output = []; }\r\n\r\n    for (var i = 0; i < polygon.points.length; i++)\r\n    {\r\n        output.push(polygon.points[i].x);\r\n        output.push(polygon.points[i].y);\r\n    }\r\n\r\n    return output;\r\n};\r\n\r\nmodule.exports = GetNumberArray;\r\n"]},"metadata":{},"sourceType":"script"}