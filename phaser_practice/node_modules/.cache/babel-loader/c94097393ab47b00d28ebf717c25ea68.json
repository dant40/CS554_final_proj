{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar MarchingAnts = require('../geom/rectangle/MarchingAnts');\n\nvar RotateLeft = require('../utils/array/RotateLeft');\n\nvar RotateRight = require('../utils/array/RotateRight');\n/**\r\n * Takes an array of Game Objects and positions them on evenly spaced points around the perimeter of a Rectangle.\r\n * \r\n * Placement starts from the top-left of the rectangle, and proceeds in a clockwise direction.\r\n * If the `shift` parameter is given you can offset where placement begins.\r\n *\r\n * @function Phaser.Actions.PlaceOnRectangle\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to position the Game Objects on.\r\n * @param {integer} [shift=1] - An optional positional offset.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\n\n\nvar PlaceOnRectangle = function (items, rect, shift) {\n  if (shift === undefined) {\n    shift = 0;\n  }\n\n  var points = MarchingAnts(rect, false, items.length);\n\n  if (shift > 0) {\n    RotateLeft(points, shift);\n  } else if (shift < 0) {\n    RotateRight(points, Math.abs(shift));\n  }\n\n  for (var i = 0; i < items.length; i++) {\n    items[i].x = points[i].x;\n    items[i].y = points[i].y;\n  }\n\n  return items;\n};\n\nmodule.exports = PlaceOnRectangle;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/actions/PlaceOnRectangle.js"],"names":["MarchingAnts","require","RotateLeft","RotateRight","PlaceOnRectangle","items","rect","shift","undefined","points","length","Math","abs","i","x","y","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gCAAD,CAA1B;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,4BAAD,CAAzB;AAEA;;;;;;;;;;;;;;;;;;;AAiBA,IAAIG,gBAAgB,GAAG,UAAUC,KAAV,EAAiBC,IAAjB,EAAuBC,KAAvB,EACvB;AACI,MAAIA,KAAK,KAAKC,SAAd,EAAyB;AAAED,IAAAA,KAAK,GAAG,CAAR;AAAY;;AAEvC,MAAIE,MAAM,GAAGT,YAAY,CAACM,IAAD,EAAO,KAAP,EAAcD,KAAK,CAACK,MAApB,CAAzB;;AAEA,MAAIH,KAAK,GAAG,CAAZ,EACA;AACIL,IAAAA,UAAU,CAACO,MAAD,EAASF,KAAT,CAAV;AACH,GAHD,MAIK,IAAIA,KAAK,GAAG,CAAZ,EACL;AACIJ,IAAAA,WAAW,CAACM,MAAD,EAASE,IAAI,CAACC,GAAL,CAASL,KAAT,CAAT,CAAX;AACH;;AAED,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACK,MAA1B,EAAkCG,CAAC,EAAnC,EACA;AACIR,IAAAA,KAAK,CAACQ,CAAD,CAAL,CAASC,CAAT,GAAaL,MAAM,CAACI,CAAD,CAAN,CAAUC,CAAvB;AACAT,IAAAA,KAAK,CAACQ,CAAD,CAAL,CAASE,CAAT,GAAaN,MAAM,CAACI,CAAD,CAAN,CAAUE,CAAvB;AACH;;AAED,SAAOV,KAAP;AACH,CAtBD;;AAwBAW,MAAM,CAACC,OAAP,GAAiBb,gBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MarchingAnts = require('../geom/rectangle/MarchingAnts');\r\nvar RotateLeft = require('../utils/array/RotateLeft');\r\nvar RotateRight = require('../utils/array/RotateRight');\r\n\r\n/**\r\n * Takes an array of Game Objects and positions them on evenly spaced points around the perimeter of a Rectangle.\r\n * \r\n * Placement starts from the top-left of the rectangle, and proceeds in a clockwise direction.\r\n * If the `shift` parameter is given you can offset where placement begins.\r\n *\r\n * @function Phaser.Actions.PlaceOnRectangle\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to position the Game Objects on.\r\n * @param {integer} [shift=1] - An optional positional offset.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\r\nvar PlaceOnRectangle = function (items, rect, shift)\r\n{\r\n    if (shift === undefined) { shift = 0; }\r\n\r\n    var points = MarchingAnts(rect, false, items.length);\r\n\r\n    if (shift > 0)\r\n    {\r\n        RotateLeft(points, shift);\r\n    }\r\n    else if (shift < 0)\r\n    {\r\n        RotateRight(points, Math.abs(shift));\r\n    }\r\n\r\n    for (var i = 0; i < items.length; i++)\r\n    {\r\n        items[i].x = points[i].x;\r\n        items[i].y = points[i].y;\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = PlaceOnRectangle;\r\n"]},"metadata":{},"sourceType":"script"}