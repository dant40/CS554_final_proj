{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Provides methods used for setting the depth of a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n * \r\n * @namespace Phaser.GameObjects.Components.Depth\r\n * @since 3.0.0\r\n */\nvar Depth = {\n  /**\r\n   * Private internal value. Holds the depth of the Game Object.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Depth#_depth\r\n   * @type {integer}\r\n   * @private\r\n   * @default 0\r\n   * @since 3.0.0\r\n   */\n  _depth: 0,\n\n  /**\r\n   * The depth of this Game Object within the Scene.\r\n   * \r\n   * The depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\n   * of Game Objects, without actually moving their position in the display list.\r\n   *\r\n   * The depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\n   * value will always render in front of one with a lower value.\r\n   *\r\n   * Setting the depth will queue a depth sort event within the Scene.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Depth#depth\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  depth: {\n    get: function () {\n      return this._depth;\n    },\n    set: function (value) {\n      this.scene.sys.queueDepthSort();\n      this._depth = value;\n    }\n  },\n\n  /**\r\n   * The depth of this Game Object within the Scene.\r\n   * \r\n   * The depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\n   * of Game Objects, without actually moving their position in the display list.\r\n   *\r\n   * The depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\n   * value will always render in front of one with a lower value.\r\n   *\r\n   * Setting the depth will queue a depth sort event within the Scene.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Depth#setDepth\r\n   * @since 3.0.0\r\n   *\r\n   * @param {integer} value - The depth of this Game Object.\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  setDepth: function (value) {\n    if (value === undefined) {\n      value = 0;\n    }\n\n    this.depth = value;\n    return this;\n  }\n};\nmodule.exports = Depth;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/components/Depth.js"],"names":["Depth","_depth","depth","get","set","value","scene","sys","queueDepthSort","setDepth","undefined","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;AAQA,IAAIA,KAAK,GAAG;AAER;;;;;;;;;AASAC,EAAAA,MAAM,EAAE,CAXA;;AAaR;;;;;;;;;;;;;;;AAeAC,EAAAA,KAAK,EAAE;AAEHC,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKF,MAAZ;AACH,KALE;AAOHG,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKC,KAAL,CAAWC,GAAX,CAAeC,cAAf;AACA,WAAKP,MAAL,GAAcI,KAAd;AACH;AAXE,GA5BC;;AA2CR;;;;;;;;;;;;;;;;;;AAkBAI,EAAAA,QAAQ,EAAE,UAAUJ,KAAV,EACV;AACI,QAAIA,KAAK,KAAKK,SAAd,EAAyB;AAAEL,MAAAA,KAAK,GAAG,CAAR;AAAY;;AAEvC,SAAKH,KAAL,GAAaG,KAAb;AAEA,WAAO,IAAP;AACH;AApEO,CAAZ;AAwEAM,MAAM,CAACC,OAAP,GAAiBZ,KAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for setting the depth of a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n * \r\n * @namespace Phaser.GameObjects.Components.Depth\r\n * @since 3.0.0\r\n */\r\n\r\nvar Depth = {\r\n\r\n    /**\r\n     * Private internal value. Holds the depth of the Game Object.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Depth#_depth\r\n     * @type {integer}\r\n     * @private\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\r\n    _depth: 0,\r\n\r\n    /**\r\n     * The depth of this Game Object within the Scene.\r\n     * \r\n     * The depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\n     * of Game Objects, without actually moving their position in the display list.\r\n     *\r\n     * The depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\n     * value will always render in front of one with a lower value.\r\n     *\r\n     * Setting the depth will queue a depth sort event within the Scene.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Depth#depth\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    depth: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._depth;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.scene.sys.queueDepthSort();\r\n            this._depth = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The depth of this Game Object within the Scene.\r\n     * \r\n     * The depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\n     * of Game Objects, without actually moving their position in the display list.\r\n     *\r\n     * The depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\n     * value will always render in front of one with a lower value.\r\n     *\r\n     * Setting the depth will queue a depth sort event within the Scene.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Depth#setDepth\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} value - The depth of this Game Object.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setDepth: function (value)\r\n    {\r\n        if (value === undefined) { value = 0; }\r\n\r\n        this.depth = value;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Depth;\r\n"]},"metadata":{},"sourceType":"script"}