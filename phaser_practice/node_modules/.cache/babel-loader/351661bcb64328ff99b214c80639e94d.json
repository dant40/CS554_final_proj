{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Check to see if the Ellipse contains the given x / y coordinates.\r\n *\r\n * @function Phaser.Geom.Ellipse.Contains\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to check.\r\n * @param {number} x - The x coordinate to check within the ellipse.\r\n * @param {number} y - The y coordinate to check within the ellipse.\r\n *\r\n * @return {boolean} True if the coordinates are within the ellipse, otherwise false.\r\n */\nvar Contains = function (ellipse, x, y) {\n  if (ellipse.width <= 0 || ellipse.height <= 0) {\n    return false;\n  } //  Normalize the coords to an ellipse with center 0,0 and a radius of 0.5\n\n\n  var normx = (x - ellipse.x) / ellipse.width;\n  var normy = (y - ellipse.y) / ellipse.height;\n  normx *= normx;\n  normy *= normy;\n  return normx + normy < 0.25;\n};\n\nmodule.exports = Contains;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/ellipse/Contains.js"],"names":["Contains","ellipse","x","y","width","height","normx","normy","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;AAYA,IAAIA,QAAQ,GAAG,UAAUC,OAAV,EAAmBC,CAAnB,EAAsBC,CAAtB,EACf;AACI,MAAIF,OAAO,CAACG,KAAR,IAAiB,CAAjB,IAAsBH,OAAO,CAACI,MAAR,IAAkB,CAA5C,EACA;AACI,WAAO,KAAP;AACH,GAJL,CAMI;;;AACA,MAAIC,KAAK,GAAI,CAACJ,CAAC,GAAGD,OAAO,CAACC,CAAb,IAAkBD,OAAO,CAACG,KAAvC;AACA,MAAIG,KAAK,GAAI,CAACJ,CAAC,GAAGF,OAAO,CAACE,CAAb,IAAkBF,OAAO,CAACI,MAAvC;AAEAC,EAAAA,KAAK,IAAIA,KAAT;AACAC,EAAAA,KAAK,IAAIA,KAAT;AAEA,SAAQD,KAAK,GAAGC,KAAR,GAAgB,IAAxB;AACH,CAfD;;AAiBAC,MAAM,CAACC,OAAP,GAAiBT,QAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Check to see if the Ellipse contains the given x / y coordinates.\r\n *\r\n * @function Phaser.Geom.Ellipse.Contains\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to check.\r\n * @param {number} x - The x coordinate to check within the ellipse.\r\n * @param {number} y - The y coordinate to check within the ellipse.\r\n *\r\n * @return {boolean} True if the coordinates are within the ellipse, otherwise false.\r\n */\r\nvar Contains = function (ellipse, x, y)\r\n{\r\n    if (ellipse.width <= 0 || ellipse.height <= 0)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    //  Normalize the coords to an ellipse with center 0,0 and a radius of 0.5\r\n    var normx = ((x - ellipse.x) / ellipse.width);\r\n    var normy = ((y - ellipse.y) / ellipse.height);\r\n\r\n    normx *= normx;\r\n    normy *= normy;\r\n\r\n    return (normx + normy < 0.25);\r\n};\r\n\r\nmodule.exports = Contains;\r\n"]},"metadata":{},"sourceType":"script"}