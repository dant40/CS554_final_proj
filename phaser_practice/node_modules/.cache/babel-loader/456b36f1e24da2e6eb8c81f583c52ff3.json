{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar DegToRad = require('../../math/DegToRad');\n\nvar GetBoolean = require('../../tweens/builders/GetBoolean');\n\nvar GetValue = require('../../utils/object/GetValue');\n\nvar TWEEN_CONST = require('../../tweens/tween/const');\n\nvar Vector2 = require('../../math/Vector2');\n/**\r\n * Provides methods used for managing a Game Object following a Path.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.GameObjects.Components.PathFollower\r\n * @since 3.17.0\r\n */\n\n\nvar PathFollower = {\n  /**\r\n   * The Path this PathFollower is following. It can only follow one Path at a time.\r\n   *\r\n   * @name Phaser.GameObjects.Components.PathFollower#path\r\n   * @type {Phaser.Curves.Path}\r\n   * @since 3.0.0\r\n   */\n  path: null,\n\n  /**\r\n   * Should the PathFollower automatically rotate to point in the direction of the Path?\r\n   *\r\n   * @name Phaser.GameObjects.Components.PathFollower#rotateToPath\r\n   * @type {boolean}\r\n   * @default false\r\n   * @since 3.0.0\r\n   */\n  rotateToPath: false,\n\n  /**\r\n   * If the PathFollower is rotating to match the Path (@see Phaser.GameObjects.PathFollower#rotateToPath)\r\n   * this value is added to the rotation value. This allows you to rotate objects to a path but control\r\n   * the angle of the rotation as well.\r\n   *\r\n   * @name Phaser.GameObjects.PathFollower#pathRotationOffset\r\n   * @type {number}\r\n   * @default 0\r\n   * @since 3.0.0\r\n   */\n  pathRotationOffset: 0,\n\n  /**\r\n   * An additional vector to add to the PathFollowers position, allowing you to offset it from the\r\n   * Path coordinates.\r\n   *\r\n   * @name Phaser.GameObjects.PathFollower#pathOffset\r\n   * @type {Phaser.Math.Vector2}\r\n   * @since 3.0.0\r\n   */\n  pathOffset: null,\n\n  /**\r\n   * A Vector2 that stores the current point of the path the follower is on.\r\n   *\r\n   * @name Phaser.GameObjects.PathFollower#pathVector\r\n   * @type {Phaser.Math.Vector2}\r\n   * @since 3.0.0\r\n   */\n  pathVector: null,\n\n  /**\r\n   * The Tween used for following the Path.\r\n   *\r\n   * @name Phaser.GameObjects.PathFollower#pathTween\r\n   * @type {Phaser.Tweens.Tween}\r\n   * @since 3.0.0\r\n   */\n  pathTween: null,\n\n  /**\r\n   * Settings for the PathFollower.\r\n   *\r\n   * @name Phaser.GameObjects.PathFollower#pathConfig\r\n   * @type {?Phaser.Types.GameObjects.PathFollower.PathConfig}\r\n   * @default null\r\n   * @since 3.0.0\r\n   */\n  pathConfig: null,\n\n  /**\r\n   * Records the direction of the follower so it can change direction.\r\n   *\r\n   * @name Phaser.GameObjects.PathFollower#_prevDirection\r\n   * @type {integer}\r\n   * @private\r\n   * @since 3.0.0\r\n   */\n  _prevDirection: TWEEN_CONST.PLAYING_FORWARD,\n\n  /**\r\n   * Set the Path that this PathFollower should follow.\r\n   *\r\n   * Optionally accepts {@link Phaser.Types.GameObjects.PathFollower.PathConfig} settings.\r\n   *\r\n   * @method Phaser.GameObjects.Components.PathFollower#setPath\r\n   * @since 3.0.0\r\n   *\r\n   * @param {Phaser.Curves.Path} path - The Path this PathFollower is following. It can only follow one Path at a time.\r\n   * @param {(number|Phaser.Types.GameObjects.PathFollower.PathConfig|Phaser.Types.Tweens.NumberTweenBuilderConfig)} [config] - Settings for the PathFollower.\r\n   *\r\n   * @return {Phaser.GameObjects.PathFollower} This Game Object.\r\n   */\n  setPath: function (path, config) {\n    if (config === undefined) {\n      config = this.pathConfig;\n    }\n\n    var tween = this.pathTween;\n\n    if (tween && tween.isPlaying()) {\n      tween.stop();\n    }\n\n    this.path = path;\n\n    if (config) {\n      this.startFollow(config);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Set whether the PathFollower should automatically rotate to point in the direction of the Path.\r\n   *\r\n   * @method Phaser.GameObjects.Components.PathFollower#setRotateToPath\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} value - Whether the PathFollower should automatically rotate to point in the direction of the Path.\r\n   * @param {number} [offset=0] - Rotation offset in degrees.\r\n   *\r\n   * @return {Phaser.GameObjects.PathFollower} This Game Object.\r\n   */\n  setRotateToPath: function (value, offset) {\n    if (offset === undefined) {\n      offset = 0;\n    }\n\n    this.rotateToPath = value;\n    this.pathRotationOffset = offset;\n    return this;\n  },\n\n  /**\r\n   * Is this PathFollower actively following a Path or not?\r\n   *\r\n   * To be considered as `isFollowing` it must be currently moving on a Path, and not paused.\r\n   *\r\n   * @method Phaser.GameObjects.Components.PathFollower#isFollowing\r\n   * @since 3.0.0\r\n   *\r\n   * @return {boolean} `true` is this PathFollower is actively following a Path, otherwise `false`.\r\n   */\n  isFollowing: function () {\n    var tween = this.pathTween;\n    return tween && tween.isPlaying();\n  },\n\n  /**\r\n   * Starts this PathFollower following its given Path.\r\n   *\r\n   * @method Phaser.GameObjects.Components.PathFollower#startFollow\r\n   * @since 3.3.0\r\n   *\r\n   * @param {(number|Phaser.Types.GameObjects.PathFollower.PathConfig|Phaser.Types.Tweens.NumberTweenBuilderConfig)} [config={}] - The duration of the follow, or a PathFollower config object.\r\n   * @param {number} [startAt=0] - Optional start position of the follow, between 0 and 1.\r\n   *\r\n   * @return {Phaser.GameObjects.PathFollower} This Game Object.\r\n   */\n  startFollow: function (config, startAt) {\n    if (config === undefined) {\n      config = {};\n    }\n\n    if (startAt === undefined) {\n      startAt = 0;\n    }\n\n    var tween = this.pathTween;\n\n    if (tween && tween.isPlaying()) {\n      tween.stop();\n    }\n\n    if (typeof config === 'number') {\n      config = {\n        duration: config\n      };\n    } //  Override in case they've been specified in the config\n\n\n    config.from = GetValue(config, 'from', 0);\n    config.to = GetValue(config, 'to', 1);\n    var positionOnPath = GetBoolean(config, 'positionOnPath', false);\n    this.rotateToPath = GetBoolean(config, 'rotateToPath', false);\n    this.pathRotationOffset = GetValue(config, 'rotationOffset', 0); //  This works, but it's not an ideal way of doing it as the follower jumps position\n\n    var seek = GetValue(config, 'startAt', startAt);\n\n    if (seek) {\n      config.onStart = function (tween) {\n        var tweenData = tween.data[0];\n        tweenData.progress = seek;\n        tweenData.elapsed = tweenData.duration * seek;\n        var v = tweenData.ease(tweenData.progress);\n        tweenData.current = tweenData.start + (tweenData.end - tweenData.start) * v;\n        tweenData.target[tweenData.key] = tweenData.current;\n      };\n    }\n\n    if (!this.pathOffset) {\n      this.pathOffset = new Vector2(this.x, this.y);\n    }\n\n    if (!this.pathVector) {\n      this.pathVector = new Vector2();\n    }\n\n    this.pathTween = this.scene.sys.tweens.addCounter(config); //  The starting point of the path, relative to this follower\n\n    this.path.getStartPoint(this.pathOffset);\n\n    if (positionOnPath) {\n      this.x = this.pathOffset.x;\n      this.y = this.pathOffset.y;\n    }\n\n    this.pathOffset.x = this.x - this.pathOffset.x;\n    this.pathOffset.y = this.y - this.pathOffset.y;\n    this._prevDirection = TWEEN_CONST.PLAYING_FORWARD;\n\n    if (this.rotateToPath) {\n      //  Set the rotation now (in case the tween has a delay on it, etc)\n      var nextPoint = this.path.getPoint(0.1);\n      this.rotation = Math.atan2(nextPoint.y - this.y, nextPoint.x - this.x) + DegToRad(this.pathRotationOffset);\n    }\n\n    this.pathConfig = config;\n    return this;\n  },\n\n  /**\r\n   * Pauses this PathFollower. It will still continue to render, but it will remain motionless at the\r\n   * point on the Path at which you paused it.\r\n   *\r\n   * @method Phaser.GameObjects.Components.PathFollower#pauseFollow\r\n   * @since 3.3.0\r\n   *\r\n   * @return {Phaser.GameObjects.PathFollower} This Game Object.\r\n   */\n  pauseFollow: function () {\n    var tween = this.pathTween;\n\n    if (tween && tween.isPlaying()) {\n      tween.pause();\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Resumes a previously paused PathFollower.\r\n   *\r\n   * If the PathFollower was not paused this has no effect.\r\n   *\r\n   * @method Phaser.GameObjects.Components.PathFollower#resumeFollow\r\n   * @since 3.3.0\r\n   *\r\n   * @return {Phaser.GameObjects.PathFollower} This Game Object.\r\n   */\n  resumeFollow: function () {\n    var tween = this.pathTween;\n\n    if (tween && tween.isPaused()) {\n      tween.resume();\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Stops this PathFollower from following the path any longer.\r\n   *\r\n   * This will invoke any 'stop' conditions that may exist on the Path, or for the follower.\r\n   *\r\n   * @method Phaser.GameObjects.Components.PathFollower#stopFollow\r\n   * @since 3.3.0\r\n   *\r\n   * @return {Phaser.GameObjects.PathFollower} This Game Object.\r\n   */\n  stopFollow: function () {\n    var tween = this.pathTween;\n\n    if (tween && tween.isPlaying()) {\n      tween.stop();\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Internal update handler that advances this PathFollower along the path.\r\n   *\r\n   * Called automatically by the Scene step, should not typically be called directly.\r\n   *\r\n   * @method Phaser.GameObjects.Components.PathFollower#pathUpdate\r\n   * @since 3.17.0\r\n   */\n  pathUpdate: function () {\n    var tween = this.pathTween;\n\n    if (tween) {\n      var tweenData = tween.data[0];\n      var pathVector = this.pathVector;\n\n      if (tweenData.state !== TWEEN_CONST.COMPLETE) {\n        this.path.getPoint(1, pathVector);\n        pathVector.add(this.pathOffset);\n        this.setPosition(pathVector.x, pathVector.y);\n        return;\n      } else if (tweenData.state !== TWEEN_CONST.PLAYING_FORWARD && tweenData.state !== TWEEN_CONST.PLAYING_BACKWARD) {\n        //  If delayed, etc then bail out\n        return;\n      }\n\n      this.path.getPoint(tween.getValue(), pathVector);\n      pathVector.add(this.pathOffset);\n      var oldX = this.x;\n      var oldY = this.y;\n      this.setPosition(pathVector.x, pathVector.y);\n      var speedX = this.x - oldX;\n      var speedY = this.y - oldY;\n\n      if (speedX === 0 && speedY === 0) {\n        //  Bail out early\n        return;\n      }\n\n      if (tweenData.state !== this._prevDirection) {\n        //  We've changed direction, so don't do a rotate this frame\n        this._prevDirection = tweenData.state;\n        return;\n      }\n\n      if (this.rotateToPath) {\n        this.rotation = Math.atan2(speedY, speedX) + DegToRad(this.pathRotationOffset);\n      }\n    }\n  }\n};\nmodule.exports = PathFollower;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/components/PathFollower.js"],"names":["DegToRad","require","GetBoolean","GetValue","TWEEN_CONST","Vector2","PathFollower","path","rotateToPath","pathRotationOffset","pathOffset","pathVector","pathTween","pathConfig","_prevDirection","PLAYING_FORWARD","setPath","config","undefined","tween","isPlaying","stop","startFollow","setRotateToPath","value","offset","isFollowing","startAt","duration","from","to","positionOnPath","seek","onStart","tweenData","data","progress","elapsed","v","ease","current","start","end","target","key","x","y","scene","sys","tweens","addCounter","getStartPoint","nextPoint","getPoint","rotation","Math","atan2","pauseFollow","pause","resumeFollow","isPaused","resume","stopFollow","pathUpdate","state","COMPLETE","add","setPosition","PLAYING_BACKWARD","getValue","oldX","oldY","speedX","speedY","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar DegToRad = require('../../math/DegToRad');\r\nvar GetBoolean = require('../../tweens/builders/GetBoolean');\r\nvar GetValue = require('../../utils/object/GetValue');\r\nvar TWEEN_CONST = require('../../tweens/tween/const');\r\nvar Vector2 = require('../../math/Vector2');\r\n\r\n/**\r\n * Provides methods used for managing a Game Object following a Path.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.GameObjects.Components.PathFollower\r\n * @since 3.17.0\r\n */\r\n\r\nvar PathFollower = {\r\n\r\n    /**\r\n     * The Path this PathFollower is following. It can only follow one Path at a time.\r\n     *\r\n     * @name Phaser.GameObjects.Components.PathFollower#path\r\n     * @type {Phaser.Curves.Path}\r\n     * @since 3.0.0\r\n     */\r\n    path: null,\r\n\r\n    /**\r\n     * Should the PathFollower automatically rotate to point in the direction of the Path?\r\n     *\r\n     * @name Phaser.GameObjects.Components.PathFollower#rotateToPath\r\n     * @type {boolean}\r\n     * @default false\r\n     * @since 3.0.0\r\n     */\r\n    rotateToPath: false,\r\n\r\n    /**\r\n     * If the PathFollower is rotating to match the Path (@see Phaser.GameObjects.PathFollower#rotateToPath)\r\n     * this value is added to the rotation value. This allows you to rotate objects to a path but control\r\n     * the angle of the rotation as well.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#pathRotationOffset\r\n     * @type {number}\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\r\n    pathRotationOffset: 0,\r\n\r\n    /**\r\n     * An additional vector to add to the PathFollowers position, allowing you to offset it from the\r\n     * Path coordinates.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#pathOffset\r\n     * @type {Phaser.Math.Vector2}\r\n     * @since 3.0.0\r\n     */\r\n    pathOffset: null,\r\n\r\n    /**\r\n     * A Vector2 that stores the current point of the path the follower is on.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#pathVector\r\n     * @type {Phaser.Math.Vector2}\r\n     * @since 3.0.0\r\n     */\r\n    pathVector: null,\r\n\r\n    /**\r\n     * The Tween used for following the Path.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#pathTween\r\n     * @type {Phaser.Tweens.Tween}\r\n     * @since 3.0.0\r\n     */\r\n    pathTween: null,\r\n\r\n    /**\r\n     * Settings for the PathFollower.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#pathConfig\r\n     * @type {?Phaser.Types.GameObjects.PathFollower.PathConfig}\r\n     * @default null\r\n     * @since 3.0.0\r\n     */\r\n    pathConfig: null,\r\n\r\n    /**\r\n     * Records the direction of the follower so it can change direction.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#_prevDirection\r\n     * @type {integer}\r\n     * @private\r\n     * @since 3.0.0\r\n     */\r\n    _prevDirection: TWEEN_CONST.PLAYING_FORWARD,\r\n\r\n    /**\r\n     * Set the Path that this PathFollower should follow.\r\n     *\r\n     * Optionally accepts {@link Phaser.Types.GameObjects.PathFollower.PathConfig} settings.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#setPath\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Curves.Path} path - The Path this PathFollower is following. It can only follow one Path at a time.\r\n     * @param {(number|Phaser.Types.GameObjects.PathFollower.PathConfig|Phaser.Types.Tweens.NumberTweenBuilderConfig)} [config] - Settings for the PathFollower.\r\n     *\r\n     * @return {Phaser.GameObjects.PathFollower} This Game Object.\r\n     */\r\n    setPath: function (path, config)\r\n    {\r\n        if (config === undefined) { config = this.pathConfig; }\r\n\r\n        var tween = this.pathTween;\r\n\r\n        if (tween && tween.isPlaying())\r\n        {\r\n            tween.stop();\r\n        }\r\n\r\n        this.path = path;\r\n\r\n        if (config)\r\n        {\r\n            this.startFollow(config);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set whether the PathFollower should automatically rotate to point in the direction of the Path.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#setRotateToPath\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} value - Whether the PathFollower should automatically rotate to point in the direction of the Path.\r\n     * @param {number} [offset=0] - Rotation offset in degrees.\r\n     *\r\n     * @return {Phaser.GameObjects.PathFollower} This Game Object.\r\n     */\r\n    setRotateToPath: function (value, offset)\r\n    {\r\n        if (offset === undefined) { offset = 0; }\r\n\r\n        this.rotateToPath = value;\r\n\r\n        this.pathRotationOffset = offset;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Is this PathFollower actively following a Path or not?\r\n     *\r\n     * To be considered as `isFollowing` it must be currently moving on a Path, and not paused.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#isFollowing\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` is this PathFollower is actively following a Path, otherwise `false`.\r\n     */\r\n    isFollowing: function ()\r\n    {\r\n        var tween = this.pathTween;\r\n\r\n        return (tween && tween.isPlaying());\r\n    },\r\n\r\n    /**\r\n     * Starts this PathFollower following its given Path.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#startFollow\r\n     * @since 3.3.0\r\n     *\r\n     * @param {(number|Phaser.Types.GameObjects.PathFollower.PathConfig|Phaser.Types.Tweens.NumberTweenBuilderConfig)} [config={}] - The duration of the follow, or a PathFollower config object.\r\n     * @param {number} [startAt=0] - Optional start position of the follow, between 0 and 1.\r\n     *\r\n     * @return {Phaser.GameObjects.PathFollower} This Game Object.\r\n     */\r\n    startFollow: function (config, startAt)\r\n    {\r\n        if (config === undefined) { config = {}; }\r\n        if (startAt === undefined) { startAt = 0; }\r\n\r\n        var tween = this.pathTween;\r\n\r\n        if (tween && tween.isPlaying())\r\n        {\r\n            tween.stop();\r\n        }\r\n\r\n        if (typeof config === 'number')\r\n        {\r\n            config = { duration: config };\r\n        }\r\n\r\n        //  Override in case they've been specified in the config\r\n        config.from = GetValue(config, 'from', 0);\r\n        config.to = GetValue(config, 'to', 1);\r\n\r\n        var positionOnPath = GetBoolean(config, 'positionOnPath', false);\r\n\r\n        this.rotateToPath = GetBoolean(config, 'rotateToPath', false);\r\n        this.pathRotationOffset = GetValue(config, 'rotationOffset', 0);\r\n\r\n        //  This works, but it's not an ideal way of doing it as the follower jumps position\r\n        var seek = GetValue(config, 'startAt', startAt);\r\n\r\n        if (seek)\r\n        {\r\n            config.onStart = function (tween)\r\n            {\r\n                var tweenData = tween.data[0];\r\n                tweenData.progress = seek;\r\n                tweenData.elapsed = tweenData.duration * seek;\r\n                var v = tweenData.ease(tweenData.progress);\r\n                tweenData.current = tweenData.start + ((tweenData.end - tweenData.start) * v);\r\n                tweenData.target[tweenData.key] = tweenData.current;\r\n            };\r\n        }\r\n\r\n        if (!this.pathOffset)\r\n        {\r\n            this.pathOffset = new Vector2(this.x, this.y);\r\n        }\r\n\r\n        if (!this.pathVector)\r\n        {\r\n            this.pathVector = new Vector2();\r\n        }\r\n\r\n        this.pathTween = this.scene.sys.tweens.addCounter(config);\r\n\r\n        //  The starting point of the path, relative to this follower\r\n        this.path.getStartPoint(this.pathOffset);\r\n\r\n        if (positionOnPath)\r\n        {\r\n            this.x = this.pathOffset.x;\r\n            this.y = this.pathOffset.y;\r\n        }\r\n\r\n        this.pathOffset.x = this.x - this.pathOffset.x;\r\n        this.pathOffset.y = this.y - this.pathOffset.y;\r\n\r\n        this._prevDirection = TWEEN_CONST.PLAYING_FORWARD;\r\n\r\n        if (this.rotateToPath)\r\n        {\r\n            //  Set the rotation now (in case the tween has a delay on it, etc)\r\n            var nextPoint = this.path.getPoint(0.1);\r\n\r\n            this.rotation = Math.atan2(nextPoint.y - this.y, nextPoint.x - this.x) + DegToRad(this.pathRotationOffset);\r\n        }\r\n\r\n        this.pathConfig = config;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Pauses this PathFollower. It will still continue to render, but it will remain motionless at the\r\n     * point on the Path at which you paused it.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#pauseFollow\r\n     * @since 3.3.0\r\n     *\r\n     * @return {Phaser.GameObjects.PathFollower} This Game Object.\r\n     */\r\n    pauseFollow: function ()\r\n    {\r\n        var tween = this.pathTween;\r\n\r\n        if (tween && tween.isPlaying())\r\n        {\r\n            tween.pause();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resumes a previously paused PathFollower.\r\n     *\r\n     * If the PathFollower was not paused this has no effect.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#resumeFollow\r\n     * @since 3.3.0\r\n     *\r\n     * @return {Phaser.GameObjects.PathFollower} This Game Object.\r\n     */\r\n    resumeFollow: function ()\r\n    {\r\n        var tween = this.pathTween;\r\n\r\n        if (tween && tween.isPaused())\r\n        {\r\n            tween.resume();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Stops this PathFollower from following the path any longer.\r\n     *\r\n     * This will invoke any 'stop' conditions that may exist on the Path, or for the follower.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#stopFollow\r\n     * @since 3.3.0\r\n     *\r\n     * @return {Phaser.GameObjects.PathFollower} This Game Object.\r\n     */\r\n    stopFollow: function ()\r\n    {\r\n        var tween = this.pathTween;\r\n\r\n        if (tween && tween.isPlaying())\r\n        {\r\n            tween.stop();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Internal update handler that advances this PathFollower along the path.\r\n     *\r\n     * Called automatically by the Scene step, should not typically be called directly.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#pathUpdate\r\n     * @since 3.17.0\r\n     */\r\n    pathUpdate: function ()\r\n    {\r\n        var tween = this.pathTween;\r\n\r\n        if (tween)\r\n        {\r\n            var tweenData = tween.data[0];\r\n            var pathVector = this.pathVector;\r\n\r\n            if (tweenData.state !== TWEEN_CONST.COMPLETE)\r\n            {\r\n                this.path.getPoint(1, pathVector);\r\n\r\n                pathVector.add(this.pathOffset);\r\n   \r\n                this.setPosition(pathVector.x, pathVector.y);\r\n\r\n                return;\r\n            }\r\n            else if (tweenData.state !== TWEEN_CONST.PLAYING_FORWARD && tweenData.state !== TWEEN_CONST.PLAYING_BACKWARD)\r\n            {\r\n                //  If delayed, etc then bail out\r\n                return;\r\n            }\r\n\r\n            this.path.getPoint(tween.getValue(), pathVector);\r\n\r\n            pathVector.add(this.pathOffset);\r\n\r\n            var oldX = this.x;\r\n            var oldY = this.y;\r\n\r\n            this.setPosition(pathVector.x, pathVector.y);\r\n\r\n            var speedX = this.x - oldX;\r\n            var speedY = this.y - oldY;\r\n\r\n            if (speedX === 0 && speedY === 0)\r\n            {\r\n                //  Bail out early\r\n                return;\r\n            }\r\n\r\n            if (tweenData.state !== this._prevDirection)\r\n            {\r\n                //  We've changed direction, so don't do a rotate this frame\r\n                this._prevDirection = tweenData.state;\r\n\r\n                return;\r\n            }\r\n\r\n            if (this.rotateToPath)\r\n            {\r\n                this.rotation = Math.atan2(speedY, speedX) + DegToRad(this.pathRotationOffset);\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = PathFollower;\r\n"]},"metadata":{},"sourceType":"script"}