{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Decomposes a Triangle into an array of its points.\r\n *\r\n * @function Phaser.Geom.Triangle.Decompose\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to decompose.\r\n * @param {array} [out] - An array to store the points into.\r\n *\r\n * @return {array} The provided `out` array, or a new array if none was provided, with three objects with `x` and `y` properties representing each point of the Triangle appended to it.\r\n */\nvar Decompose = function (triangle, out) {\n  if (out === undefined) {\n    out = [];\n  }\n\n  out.push({\n    x: triangle.x1,\n    y: triangle.y1\n  });\n  out.push({\n    x: triangle.x2,\n    y: triangle.y2\n  });\n  out.push({\n    x: triangle.x3,\n    y: triangle.y3\n  });\n  return out;\n};\n\nmodule.exports = Decompose;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/geom/triangle/Decompose.js"],"names":["Decompose","triangle","out","undefined","push","x","x1","y","y1","x2","y2","x3","y3","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;AAWA,IAAIA,SAAS,GAAG,UAAUC,QAAV,EAAoBC,GAApB,EAChB;AACI,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AAAED,IAAAA,GAAG,GAAG,EAAN;AAAW;;AAEpCA,EAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEC,IAAAA,CAAC,EAAEJ,QAAQ,CAACK,EAAd;AAAkBC,IAAAA,CAAC,EAAEN,QAAQ,CAACO;AAA9B,GAAT;AACAN,EAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEC,IAAAA,CAAC,EAAEJ,QAAQ,CAACQ,EAAd;AAAkBF,IAAAA,CAAC,EAAEN,QAAQ,CAACS;AAA9B,GAAT;AACAR,EAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEC,IAAAA,CAAC,EAAEJ,QAAQ,CAACU,EAAd;AAAkBJ,IAAAA,CAAC,EAAEN,QAAQ,CAACW;AAA9B,GAAT;AAEA,SAAOV,GAAP;AACH,CATD;;AAWAW,MAAM,CAACC,OAAP,GAAiBd,SAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Decomposes a Triangle into an array of its points.\r\n *\r\n * @function Phaser.Geom.Triangle.Decompose\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to decompose.\r\n * @param {array} [out] - An array to store the points into.\r\n *\r\n * @return {array} The provided `out` array, or a new array if none was provided, with three objects with `x` and `y` properties representing each point of the Triangle appended to it.\r\n */\r\nvar Decompose = function (triangle, out)\r\n{\r\n    if (out === undefined) { out = []; }\r\n\r\n    out.push({ x: triangle.x1, y: triangle.y1 });\r\n    out.push({ x: triangle.x2, y: triangle.y2 });\r\n    out.push({ x: triangle.x3, y: triangle.y3 });\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Decompose;\r\n"]},"metadata":{},"sourceType":"script"}