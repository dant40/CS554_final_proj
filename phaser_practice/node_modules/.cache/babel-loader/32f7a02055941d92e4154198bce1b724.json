{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar CSSBlendModes = require('./CSSBlendModes');\n\nvar GameObject = require('../GameObject');\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.DOMElement#renderWebGL\r\n * @since 3.17.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active renderer.\r\n * @param {Phaser.GameObjects.DOMElement} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\n\n\nvar DOMElementCSSRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\n  var node = src.node;\n  var style = node.style;\n  var settings = src.scene.sys.settings;\n\n  if (!node || !style || !settings.visible || GameObject.RENDER_MASK !== src.renderFlags || src.cameraFilter !== 0 && src.cameraFilter & camera.id || src.parentContainer && !src.parentContainer.willRender()) {\n    if (node) {\n      style.display = 'none';\n    }\n\n    return;\n  }\n\n  var parent = src.parentContainer;\n  var alpha = camera.alpha * src.alpha;\n\n  if (parent) {\n    alpha *= parent.alpha;\n  }\n\n  var camMatrix = renderer._tempMatrix1;\n  var srcMatrix = renderer._tempMatrix2;\n  var calcMatrix = renderer._tempMatrix3;\n  var dx = 0;\n  var dy = 0;\n  var tx = '0%';\n  var ty = '0%';\n\n  if (parentMatrix) {\n    dx = src.width * src.scaleX * src.originX;\n    dy = src.height * src.scaleY * src.originY;\n    srcMatrix.applyITRS(src.x - dx, src.y - dy, src.rotation, src.scaleX, src.scaleY);\n    camMatrix.copyFrom(camera.matrix); //  Multiply the camera by the parent matrix\n\n    camMatrix.multiplyWithOffset(parentMatrix, -camera.scrollX * src.scrollFactorX, -camera.scrollY * src.scrollFactorY); //  Undo the camera scroll\n\n    srcMatrix.e = src.x - dx;\n    srcMatrix.f = src.y - dy; //  Multiply by the src matrix, store result in calcMatrix\n\n    camMatrix.multiply(srcMatrix, calcMatrix);\n  } else {\n    dx = src.width * src.originX;\n    dy = src.height * src.originY;\n    srcMatrix.applyITRS(src.x - dx, src.y - dy, src.rotation, src.scaleX, src.scaleY);\n    camMatrix.copyFrom(camera.matrix);\n    tx = 100 * src.originX + '%';\n    ty = 100 * src.originY + '%';\n    srcMatrix.e -= camera.scrollX * src.scrollFactorX;\n    srcMatrix.f -= camera.scrollY * src.scrollFactorY; //  Multiply by the src matrix, store result in calcMatrix\n\n    camMatrix.multiply(srcMatrix, calcMatrix);\n  }\n\n  if (!src.transformOnly) {\n    style.display = 'block';\n    style.opacity = alpha;\n    style.zIndex = src._depth;\n    style.pointerEvents = 'auto';\n    style.mixBlendMode = CSSBlendModes[src._blendMode];\n  } // https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n\n\n  style.transform = calcMatrix.getCSSMatrix() + ' skew(' + src.skewX + 'rad, ' + src.skewY + 'rad)' + ' rotate3d(' + src.rotate3d.x + ',' + src.rotate3d.y + ',' + src.rotate3d.z + ',' + src.rotate3d.w + src.rotate3dAngle + ')';\n  style.transformOrigin = tx + ' ' + ty;\n};\n\nmodule.exports = DOMElementCSSRenderer;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/domelement/DOMElementCSSRenderer.js"],"names":["CSSBlendModes","require","GameObject","DOMElementCSSRenderer","renderer","src","interpolationPercentage","camera","parentMatrix","node","style","settings","scene","sys","visible","RENDER_MASK","renderFlags","cameraFilter","id","parentContainer","willRender","display","parent","alpha","camMatrix","_tempMatrix1","srcMatrix","_tempMatrix2","calcMatrix","_tempMatrix3","dx","dy","tx","ty","width","scaleX","originX","height","scaleY","originY","applyITRS","x","y","rotation","copyFrom","matrix","multiplyWithOffset","scrollX","scrollFactorX","scrollY","scrollFactorY","e","f","multiply","transformOnly","opacity","zIndex","_depth","pointerEvents","mixBlendMode","_blendMode","transform","getCSSMatrix","skewX","skewY","rotate3d","z","w","rotate3dAngle","transformOrigin","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar CSSBlendModes = require('./CSSBlendModes');\r\nvar GameObject = require('../GameObject');\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.DOMElement#renderWebGL\r\n * @since 3.17.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active renderer.\r\n * @param {Phaser.GameObjects.DOMElement} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar DOMElementCSSRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix)\r\n{\r\n    var node = src.node;\r\n    var style = node.style;\r\n    var settings = src.scene.sys.settings;\r\n\r\n    if (!node || !style || !settings.visible || GameObject.RENDER_MASK !== src.renderFlags || (src.cameraFilter !== 0 && (src.cameraFilter & camera.id)) || (src.parentContainer && !src.parentContainer.willRender()))\r\n    {\r\n        if (node)\r\n        {\r\n            style.display = 'none';\r\n        }\r\n        \r\n        return;\r\n    }\r\n\r\n    var parent = src.parentContainer;\r\n    var alpha = camera.alpha * src.alpha;\r\n\r\n    if (parent)\r\n    {\r\n        alpha *= parent.alpha;\r\n    }\r\n\r\n    var camMatrix = renderer._tempMatrix1;\r\n    var srcMatrix = renderer._tempMatrix2;\r\n    var calcMatrix = renderer._tempMatrix3;\r\n\r\n    var dx = 0;\r\n    var dy = 0;\r\n\r\n    var tx = '0%';\r\n    var ty = '0%';\r\n\r\n    if (parentMatrix)\r\n    {\r\n        dx = (src.width * src.scaleX) * src.originX;\r\n        dy = (src.height * src.scaleY) * src.originY;\r\n\r\n        srcMatrix.applyITRS(src.x - dx, src.y - dy, src.rotation, src.scaleX, src.scaleY);\r\n\r\n        camMatrix.copyFrom(camera.matrix);\r\n\r\n        //  Multiply the camera by the parent matrix\r\n        camMatrix.multiplyWithOffset(parentMatrix, -camera.scrollX * src.scrollFactorX, -camera.scrollY * src.scrollFactorY);\r\n\r\n        //  Undo the camera scroll\r\n        srcMatrix.e = src.x - dx;\r\n        srcMatrix.f = src.y - dy;\r\n\r\n        //  Multiply by the src matrix, store result in calcMatrix\r\n        camMatrix.multiply(srcMatrix, calcMatrix);\r\n    }\r\n    else\r\n    {\r\n        dx = (src.width) * src.originX;\r\n        dy = (src.height) * src.originY;\r\n \r\n        srcMatrix.applyITRS(src.x - dx, src.y - dy, src.rotation, src.scaleX, src.scaleY);\r\n        \r\n        camMatrix.copyFrom(camera.matrix);\r\n\r\n        tx = (100 * src.originX) + '%';\r\n        ty = (100 * src.originY) + '%';\r\n\r\n        srcMatrix.e -= camera.scrollX * src.scrollFactorX;\r\n        srcMatrix.f -= camera.scrollY * src.scrollFactorY;\r\n\r\n        //  Multiply by the src matrix, store result in calcMatrix\r\n        camMatrix.multiply(srcMatrix, calcMatrix);\r\n    }\r\n\r\n    if (!src.transformOnly)\r\n    {\r\n        style.display = 'block';\r\n        style.opacity = alpha;\r\n        style.zIndex = src._depth;\r\n        style.pointerEvents = 'auto';\r\n        style.mixBlendMode = CSSBlendModes[src._blendMode];\r\n    }\r\n\r\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/transform\r\n\r\n    style.transform =\r\n        calcMatrix.getCSSMatrix() +\r\n        ' skew(' + src.skewX + 'rad, ' + src.skewY + 'rad)' +\r\n        ' rotate3d(' + src.rotate3d.x + ',' + src.rotate3d.y + ',' + src.rotate3d.z + ',' + src.rotate3d.w + src.rotate3dAngle + ')';\r\n\r\n    style.transformOrigin = tx + ' ' + ty;\r\n};\r\n\r\nmodule.exports = DOMElementCSSRenderer;\r\n"]},"metadata":{},"sourceType":"script"}