{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Attempts to get the target DOM element based on the given value, which can be either\r\n * a string, in which case it will be looked-up by ID, or an element node. If nothing\r\n * can be found it will return a reference to the document.body.\r\n *\r\n * @function Phaser.DOM.GetTarget\r\n * @since 3.16.0\r\n *\r\n * @param {HTMLElement} element - The DOM element to look-up.\r\n */\nvar GetTarget = function (element) {\n  var target;\n\n  if (element !== '') {\n    if (typeof element === 'string') {\n      //  Hopefully an element ID\n      target = document.getElementById(element);\n    } else if (element && element.nodeType === 1) {\n      //  Quick test for a HTMLElement\n      target = element;\n    }\n  } //  Fallback to the document body. Covers an invalid ID and a non HTMLElement object.\n\n\n  if (!target) {\n    //  Use the full window\n    target = document.body;\n  }\n\n  return target;\n};\n\nmodule.exports = GetTarget;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/dom/GetTarget.js"],"names":["GetTarget","element","target","document","getElementById","nodeType","body","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;AAUA,IAAIA,SAAS,GAAG,UAAUC,OAAV,EAChB;AACI,MAAIC,MAAJ;;AAEA,MAAID,OAAO,KAAK,EAAhB,EACA;AACI,QAAI,OAAOA,OAAP,KAAmB,QAAvB,EACA;AACI;AACAC,MAAAA,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,OAAxB,CAAT;AACH,KAJD,MAKK,IAAIA,OAAO,IAAIA,OAAO,CAACI,QAAR,KAAqB,CAApC,EACL;AACI;AACAH,MAAAA,MAAM,GAAGD,OAAT;AACH;AACJ,GAfL,CAiBI;;;AACA,MAAI,CAACC,MAAL,EACA;AACI;AACAA,IAAAA,MAAM,GAAGC,QAAQ,CAACG,IAAlB;AACH;;AAED,SAAOJ,MAAP;AACH,CA1BD;;AA4BAK,MAAM,CAACC,OAAP,GAAiBR,SAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Attempts to get the target DOM element based on the given value, which can be either\r\n * a string, in which case it will be looked-up by ID, or an element node. If nothing\r\n * can be found it will return a reference to the document.body.\r\n *\r\n * @function Phaser.DOM.GetTarget\r\n * @since 3.16.0\r\n *\r\n * @param {HTMLElement} element - The DOM element to look-up.\r\n */\r\nvar GetTarget = function (element)\r\n{\r\n    var target;\r\n\r\n    if (element !== '')\r\n    {\r\n        if (typeof element === 'string')\r\n        {\r\n            //  Hopefully an element ID\r\n            target = document.getElementById(element);\r\n        }\r\n        else if (element && element.nodeType === 1)\r\n        {\r\n            //  Quick test for a HTMLElement\r\n            target = element;\r\n        }\r\n    }\r\n\r\n    //  Fallback to the document body. Covers an invalid ID and a non HTMLElement object.\r\n    if (!target)\r\n    {\r\n        //  Use the full window\r\n        target = document.body;\r\n    }\r\n\r\n    return target;\r\n};\r\n\r\nmodule.exports = GetTarget;\r\n"]},"metadata":{},"sourceType":"script"}