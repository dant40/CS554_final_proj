{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n\nvar LightsManager = require('./LightsManager');\n\nvar PluginCache = require('../../plugins/PluginCache');\n\nvar SceneEvents = require('../../scene/events');\n/**\r\n * @classdesc\r\n * A Scene plugin that provides a {@link Phaser.GameObjects.LightsManager} for the Light2D pipeline.\r\n *\r\n * Available from within a Scene via `this.lights`.\r\n *\r\n * Add Lights using the {@link Phaser.GameObjects.LightsManager#addLight} method:\r\n *\r\n * ```javascript\r\n * // Enable the Lights Manager because it is disabled by default\r\n * this.lights.enable();\r\n *\r\n * // Create a Light at [400, 300] with a radius of 200\r\n * this.lights.addLight(400, 300, 200);\r\n * ```\r\n *\r\n * For Game Objects to be affected by the Lights when rendered, you will need to set them to use the `Light2D` pipeline like so:\r\n *\r\n * ```javascript\r\n * sprite.setPipeline('Light2D');\r\n * ```\r\n *\r\n * @class LightsPlugin\r\n * @extends Phaser.GameObjects.LightsManager\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene that this Lights Plugin belongs to.\r\n */\n\n\nvar LightsPlugin = new Class({\n  Extends: LightsManager,\n  initialize: function LightsPlugin(scene) {\n    /**\r\n     * A reference to the Scene that this Lights Plugin belongs to.\r\n     *\r\n     * @name Phaser.GameObjects.LightsPlugin#scene\r\n     * @type {Phaser.Scene}\r\n     * @since 3.0.0\r\n     */\n    this.scene = scene;\n    /**\r\n     * A reference to the Scene's systems.\r\n     *\r\n     * @name Phaser.GameObjects.LightsPlugin#systems\r\n     * @type {Phaser.Scenes.Systems}\r\n     * @since 3.0.0\r\n     */\n\n    this.systems = scene.sys;\n\n    if (!scene.sys.settings.isBooted) {\n      scene.sys.events.once(SceneEvents.BOOT, this.boot, this);\n    }\n\n    LightsManager.call(this);\n  },\n\n  /**\r\n   * Boot the Lights Plugin.\r\n   *\r\n   * @method Phaser.GameObjects.LightsPlugin#boot\r\n   * @since 3.0.0\r\n   */\n  boot: function () {\n    var eventEmitter = this.systems.events;\n    eventEmitter.on(SceneEvents.SHUTDOWN, this.shutdown, this);\n    eventEmitter.on(SceneEvents.DESTROY, this.destroy, this);\n  },\n\n  /**\r\n   * Destroy the Lights Plugin.\r\n   *\r\n   * Cleans up all references.\r\n   *\r\n   * @method Phaser.GameObjects.LightsPlugin#destroy\r\n   * @since 3.0.0\r\n   */\n  destroy: function () {\n    this.shutdown();\n    this.scene = undefined;\n    this.systems = undefined;\n  }\n});\nPluginCache.register('LightsPlugin', LightsPlugin, 'lights');\nmodule.exports = LightsPlugin;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/lights/LightsPlugin.js"],"names":["Class","require","LightsManager","PluginCache","SceneEvents","LightsPlugin","Extends","initialize","scene","systems","sys","settings","isBooted","events","once","BOOT","boot","call","eventEmitter","on","SHUTDOWN","shutdown","DESTROY","destroy","undefined","register","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,2BAAD,CAAzB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,oBAAD,CAAzB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,IAAII,YAAY,GAAG,IAAIL,KAAJ,CAAU;AAEzBM,EAAAA,OAAO,EAAEJ,aAFgB;AAIzBK,EAAAA,UAAU,EAEV,SAASF,YAAT,CAAuBG,KAAvB,EACA;AACI;;;;;;;AAOA,SAAKA,KAAL,GAAaA,KAAb;AAEA;;;;;;;;AAOA,SAAKC,OAAL,GAAeD,KAAK,CAACE,GAArB;;AAEA,QAAI,CAACF,KAAK,CAACE,GAAN,CAAUC,QAAV,CAAmBC,QAAxB,EACA;AACIJ,MAAAA,KAAK,CAACE,GAAN,CAAUG,MAAV,CAAiBC,IAAjB,CAAsBV,WAAW,CAACW,IAAlC,EAAwC,KAAKC,IAA7C,EAAmD,IAAnD;AACH;;AAEDd,IAAAA,aAAa,CAACe,IAAd,CAAmB,IAAnB;AACH,GAhCwB;;AAkCzB;;;;;;AAMAD,EAAAA,IAAI,EAAE,YACN;AACI,QAAIE,YAAY,GAAG,KAAKT,OAAL,CAAaI,MAAhC;AAEAK,IAAAA,YAAY,CAACC,EAAb,CAAgBf,WAAW,CAACgB,QAA5B,EAAsC,KAAKC,QAA3C,EAAqD,IAArD;AACAH,IAAAA,YAAY,CAACC,EAAb,CAAgBf,WAAW,CAACkB,OAA5B,EAAqC,KAAKC,OAA1C,EAAmD,IAAnD;AACH,GA9CwB;;AAgDzB;;;;;;;;AAQAA,EAAAA,OAAO,EAAE,YACT;AACI,SAAKF,QAAL;AAEA,SAAKb,KAAL,GAAagB,SAAb;AACA,SAAKf,OAAL,GAAee,SAAf;AACH;AA9DwB,CAAV,CAAnB;AAkEArB,WAAW,CAACsB,QAAZ,CAAqB,cAArB,EAAqCpB,YAArC,EAAmD,QAAnD;AAEAqB,MAAM,CAACC,OAAP,GAAiBtB,YAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar LightsManager = require('./LightsManager');\r\nvar PluginCache = require('../../plugins/PluginCache');\r\nvar SceneEvents = require('../../scene/events');\r\n\r\n/**\r\n * @classdesc\r\n * A Scene plugin that provides a {@link Phaser.GameObjects.LightsManager} for the Light2D pipeline.\r\n *\r\n * Available from within a Scene via `this.lights`.\r\n *\r\n * Add Lights using the {@link Phaser.GameObjects.LightsManager#addLight} method:\r\n *\r\n * ```javascript\r\n * // Enable the Lights Manager because it is disabled by default\r\n * this.lights.enable();\r\n *\r\n * // Create a Light at [400, 300] with a radius of 200\r\n * this.lights.addLight(400, 300, 200);\r\n * ```\r\n *\r\n * For Game Objects to be affected by the Lights when rendered, you will need to set them to use the `Light2D` pipeline like so:\r\n *\r\n * ```javascript\r\n * sprite.setPipeline('Light2D');\r\n * ```\r\n *\r\n * @class LightsPlugin\r\n * @extends Phaser.GameObjects.LightsManager\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene that this Lights Plugin belongs to.\r\n */\r\nvar LightsPlugin = new Class({\r\n\r\n    Extends: LightsManager,\r\n\r\n    initialize:\r\n\r\n    function LightsPlugin (scene)\r\n    {\r\n        /**\r\n         * A reference to the Scene that this Lights Plugin belongs to.\r\n         *\r\n         * @name Phaser.GameObjects.LightsPlugin#scene\r\n         * @type {Phaser.Scene}\r\n         * @since 3.0.0\r\n         */\r\n        this.scene = scene;\r\n\r\n        /**\r\n         * A reference to the Scene's systems.\r\n         *\r\n         * @name Phaser.GameObjects.LightsPlugin#systems\r\n         * @type {Phaser.Scenes.Systems}\r\n         * @since 3.0.0\r\n         */\r\n        this.systems = scene.sys;\r\n\r\n        if (!scene.sys.settings.isBooted)\r\n        {\r\n            scene.sys.events.once(SceneEvents.BOOT, this.boot, this);\r\n        }\r\n\r\n        LightsManager.call(this);\r\n    },\r\n\r\n    /**\r\n     * Boot the Lights Plugin.\r\n     *\r\n     * @method Phaser.GameObjects.LightsPlugin#boot\r\n     * @since 3.0.0\r\n     */\r\n    boot: function ()\r\n    {\r\n        var eventEmitter = this.systems.events;\r\n\r\n        eventEmitter.on(SceneEvents.SHUTDOWN, this.shutdown, this);\r\n        eventEmitter.on(SceneEvents.DESTROY, this.destroy, this);\r\n    },\r\n\r\n    /**\r\n     * Destroy the Lights Plugin.\r\n     *\r\n     * Cleans up all references.\r\n     *\r\n     * @method Phaser.GameObjects.LightsPlugin#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.shutdown();\r\n\r\n        this.scene = undefined;\r\n        this.systems = undefined;\r\n    }\r\n\r\n});\r\n\r\nPluginCache.register('LightsPlugin', LightsPlugin, 'lights');\r\n\r\nmodule.exports = LightsPlugin;\r\n"]},"metadata":{},"sourceType":"script"}