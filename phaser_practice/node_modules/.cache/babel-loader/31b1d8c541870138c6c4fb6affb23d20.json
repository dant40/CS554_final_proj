{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Build a JSON representation of the given Game Object.\r\n *\r\n * This is typically extended further by Game Object specific implementations.\r\n *\r\n * @method Phaser.GameObjects.Components.ToJSON\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The Game Object to export as JSON.\r\n *\r\n * @return {Phaser.Types.GameObjects.JSONGameObject} A JSON representation of the Game Object.\r\n */\nvar ToJSON = function (gameObject) {\n  var out = {\n    name: gameObject.name,\n    type: gameObject.type,\n    x: gameObject.x,\n    y: gameObject.y,\n    depth: gameObject.depth,\n    scale: {\n      x: gameObject.scaleX,\n      y: gameObject.scaleY\n    },\n    origin: {\n      x: gameObject.originX,\n      y: gameObject.originY\n    },\n    flipX: gameObject.flipX,\n    flipY: gameObject.flipY,\n    rotation: gameObject.rotation,\n    alpha: gameObject.alpha,\n    visible: gameObject.visible,\n    blendMode: gameObject.blendMode,\n    textureKey: '',\n    frameKey: '',\n    data: {}\n  };\n\n  if (gameObject.texture) {\n    out.textureKey = gameObject.texture.key;\n    out.frameKey = gameObject.frame.name;\n  }\n\n  return out;\n};\n\nmodule.exports = ToJSON;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/gameobjects/components/ToJSON.js"],"names":["ToJSON","gameObject","out","name","type","x","y","depth","scale","scaleX","scaleY","origin","originX","originY","flipX","flipY","rotation","alpha","visible","blendMode","textureKey","frameKey","data","texture","key","frame","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;;;;AAYA,IAAIA,MAAM,GAAG,UAAUC,UAAV,EACb;AACI,MAAIC,GAAG,GAAG;AACNC,IAAAA,IAAI,EAAEF,UAAU,CAACE,IADX;AAENC,IAAAA,IAAI,EAAEH,UAAU,CAACG,IAFX;AAGNC,IAAAA,CAAC,EAAEJ,UAAU,CAACI,CAHR;AAINC,IAAAA,CAAC,EAAEL,UAAU,CAACK,CAJR;AAKNC,IAAAA,KAAK,EAAEN,UAAU,CAACM,KALZ;AAMNC,IAAAA,KAAK,EAAE;AACHH,MAAAA,CAAC,EAAEJ,UAAU,CAACQ,MADX;AAEHH,MAAAA,CAAC,EAAEL,UAAU,CAACS;AAFX,KAND;AAUNC,IAAAA,MAAM,EAAE;AACJN,MAAAA,CAAC,EAAEJ,UAAU,CAACW,OADV;AAEJN,MAAAA,CAAC,EAAEL,UAAU,CAACY;AAFV,KAVF;AAcNC,IAAAA,KAAK,EAAEb,UAAU,CAACa,KAdZ;AAeNC,IAAAA,KAAK,EAAEd,UAAU,CAACc,KAfZ;AAgBNC,IAAAA,QAAQ,EAAEf,UAAU,CAACe,QAhBf;AAiBNC,IAAAA,KAAK,EAAEhB,UAAU,CAACgB,KAjBZ;AAkBNC,IAAAA,OAAO,EAAEjB,UAAU,CAACiB,OAlBd;AAmBNC,IAAAA,SAAS,EAAElB,UAAU,CAACkB,SAnBhB;AAoBNC,IAAAA,UAAU,EAAE,EApBN;AAqBNC,IAAAA,QAAQ,EAAE,EArBJ;AAsBNC,IAAAA,IAAI,EAAE;AAtBA,GAAV;;AAyBA,MAAIrB,UAAU,CAACsB,OAAf,EACA;AACIrB,IAAAA,GAAG,CAACkB,UAAJ,GAAiBnB,UAAU,CAACsB,OAAX,CAAmBC,GAApC;AACAtB,IAAAA,GAAG,CAACmB,QAAJ,GAAepB,UAAU,CAACwB,KAAX,CAAiBtB,IAAhC;AACH;;AAED,SAAOD,GAAP;AACH,CAlCD;;AAoCAwB,MAAM,CAACC,OAAP,GAAiB3B,MAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Build a JSON representation of the given Game Object.\r\n *\r\n * This is typically extended further by Game Object specific implementations.\r\n *\r\n * @method Phaser.GameObjects.Components.ToJSON\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The Game Object to export as JSON.\r\n *\r\n * @return {Phaser.Types.GameObjects.JSONGameObject} A JSON representation of the Game Object.\r\n */\r\nvar ToJSON = function (gameObject)\r\n{\r\n    var out = {\r\n        name: gameObject.name,\r\n        type: gameObject.type,\r\n        x: gameObject.x,\r\n        y: gameObject.y,\r\n        depth: gameObject.depth,\r\n        scale: {\r\n            x: gameObject.scaleX,\r\n            y: gameObject.scaleY\r\n        },\r\n        origin: {\r\n            x: gameObject.originX,\r\n            y: gameObject.originY\r\n        },\r\n        flipX: gameObject.flipX,\r\n        flipY: gameObject.flipY,\r\n        rotation: gameObject.rotation,\r\n        alpha: gameObject.alpha,\r\n        visible: gameObject.visible,\r\n        blendMode: gameObject.blendMode,\r\n        textureKey: '',\r\n        frameKey: '',\r\n        data: {}\r\n    };\r\n\r\n    if (gameObject.texture)\r\n    {\r\n        out.textureKey = gameObject.texture.key;\r\n        out.frameKey = gameObject.frame.name;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = ToJSON;\r\n"]},"metadata":{},"sourceType":"script"}