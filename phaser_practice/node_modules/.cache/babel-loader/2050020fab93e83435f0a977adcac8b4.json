{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar GetCenterX = require('../../bounds/GetCenterX');\n\nvar GetTop = require('../../bounds/GetTop');\n\nvar SetCenterX = require('../../bounds/SetCenterX');\n\nvar SetTop = require('../../bounds/SetTop');\n/**\r\n * Takes given Game Object and aligns it so that it is positioned in the top center of the other.\r\n *\r\n * @function Phaser.Display.Align.In.TopCenter\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject} G - [gameObject,$return]\r\n *\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The Game Object that will be positioned.\r\n * @param {Phaser.GameObjects.GameObject} alignIn - The Game Object to base the alignment position on.\r\n * @param {number} [offsetX=0] - Optional horizontal offset from the position.\r\n * @param {number} [offsetY=0] - Optional vertical offset from the position.\r\n *\r\n * @return {Phaser.GameObjects.GameObject} The Game Object that was aligned.\r\n */\n\n\nvar TopCenter = function (gameObject, alignIn, offsetX, offsetY) {\n  if (offsetX === undefined) {\n    offsetX = 0;\n  }\n\n  if (offsetY === undefined) {\n    offsetY = 0;\n  }\n\n  SetCenterX(gameObject, GetCenterX(alignIn) + offsetX);\n  SetTop(gameObject, GetTop(alignIn) - offsetY);\n  return gameObject;\n};\n\nmodule.exports = TopCenter;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/display/align/in/TopCenter.js"],"names":["GetCenterX","require","GetTop","SetCenterX","SetTop","TopCenter","gameObject","alignIn","offsetX","offsetY","undefined","module","exports"],"mappings":"AAAA;;;;;AAMA,IAAIA,UAAU,GAAGC,OAAO,CAAC,yBAAD,CAAxB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,yBAAD,CAAxB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,qBAAD,CAApB;AAEA;;;;;;;;;;;;;;;;;AAeA,IAAII,SAAS,GAAG,UAAUC,UAAV,EAAsBC,OAAtB,EAA+BC,OAA/B,EAAwCC,OAAxC,EAChB;AACI,MAAID,OAAO,KAAKE,SAAhB,EAA2B;AAAEF,IAAAA,OAAO,GAAG,CAAV;AAAc;;AAC3C,MAAIC,OAAO,KAAKC,SAAhB,EAA2B;AAAED,IAAAA,OAAO,GAAG,CAAV;AAAc;;AAE3CN,EAAAA,UAAU,CAACG,UAAD,EAAaN,UAAU,CAACO,OAAD,CAAV,GAAsBC,OAAnC,CAAV;AACAJ,EAAAA,MAAM,CAACE,UAAD,EAAaJ,MAAM,CAACK,OAAD,CAAN,GAAkBE,OAA/B,CAAN;AAEA,SAAOH,UAAP;AACH,CATD;;AAWAK,MAAM,CAACC,OAAP,GAAiBP,SAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetCenterX = require('../../bounds/GetCenterX');\r\nvar GetTop = require('../../bounds/GetTop');\r\nvar SetCenterX = require('../../bounds/SetCenterX');\r\nvar SetTop = require('../../bounds/SetTop');\r\n\r\n/**\r\n * Takes given Game Object and aligns it so that it is positioned in the top center of the other.\r\n *\r\n * @function Phaser.Display.Align.In.TopCenter\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject} G - [gameObject,$return]\r\n *\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The Game Object that will be positioned.\r\n * @param {Phaser.GameObjects.GameObject} alignIn - The Game Object to base the alignment position on.\r\n * @param {number} [offsetX=0] - Optional horizontal offset from the position.\r\n * @param {number} [offsetY=0] - Optional vertical offset from the position.\r\n *\r\n * @return {Phaser.GameObjects.GameObject} The Game Object that was aligned.\r\n */\r\nvar TopCenter = function (gameObject, alignIn, offsetX, offsetY)\r\n{\r\n    if (offsetX === undefined) { offsetX = 0; }\r\n    if (offsetY === undefined) { offsetY = 0; }\r\n\r\n    SetCenterX(gameObject, GetCenterX(alignIn) + offsetX);\r\n    SetTop(gameObject, GetTop(alignIn) - offsetY);\r\n\r\n    return gameObject;\r\n};\r\n\r\nmodule.exports = TopCenter;\r\n"]},"metadata":{},"sourceType":"script"}