{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @author       Pavle Goloskokovic <pgoloskokovic@gmail.com> (http://prunegames.com)\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar HTML5AudioSoundManager = require('./html5/HTML5AudioSoundManager');\n\nvar NoAudioSoundManager = require('./noaudio/NoAudioSoundManager');\n\nvar WebAudioSoundManager = require('./webaudio/WebAudioSoundManager');\n/**\r\n * Creates a Web Audio, HTML5 Audio or No Audio Sound Manager based on config and device settings.\r\n *\r\n * Be aware of https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\r\n *\r\n * @function Phaser.Sound.SoundManagerCreator\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Game} game - Reference to the current game instance.\r\n * \r\n * @return {(Phaser.Sound.HTML5AudioSoundManager|Phaser.Sound.WebAudioSoundManager|Phaser.Sound.NoAudioSoundManager)} The Sound Manager instance that was created.\r\n */\n\n\nvar SoundManagerCreator = {\n  create: function (game) {\n    var audioConfig = game.config.audio;\n    var deviceAudio = game.device.audio;\n\n    if (audioConfig && audioConfig.noAudio || !deviceAudio.webAudio && !deviceAudio.audioData) {\n      return new NoAudioSoundManager(game);\n    }\n\n    if (deviceAudio.webAudio && !(audioConfig && audioConfig.disableWebAudio)) {\n      return new WebAudioSoundManager(game);\n    }\n\n    return new HTML5AudioSoundManager(game);\n  }\n};\nmodule.exports = SoundManagerCreator;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/sound/SoundManagerCreator.js"],"names":["HTML5AudioSoundManager","require","NoAudioSoundManager","WebAudioSoundManager","SoundManagerCreator","create","game","audioConfig","config","audio","deviceAudio","device","noAudio","webAudio","audioData","disableWebAudio","module","exports"],"mappings":"AAAA;;;;;;AAOA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,gCAAD,CAApC;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,+BAAD,CAAjC;;AACA,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,iCAAD,CAAlC;AAEA;;;;;;;;;;;;;;AAYA,IAAIG,mBAAmB,GAAG;AAEtBC,EAAAA,MAAM,EAAE,UAAUC,IAAV,EACR;AACI,QAAIC,WAAW,GAAGD,IAAI,CAACE,MAAL,CAAYC,KAA9B;AACA,QAAIC,WAAW,GAAGJ,IAAI,CAACK,MAAL,CAAYF,KAA9B;;AAEA,QAAKF,WAAW,IAAIA,WAAW,CAACK,OAA5B,IAAyC,CAACF,WAAW,CAACG,QAAb,IAAyB,CAACH,WAAW,CAACI,SAAnF,EACA;AACI,aAAO,IAAIZ,mBAAJ,CAAwBI,IAAxB,CAAP;AACH;;AAED,QAAII,WAAW,CAACG,QAAZ,IAAwB,EAAEN,WAAW,IAAIA,WAAW,CAACQ,eAA7B,CAA5B,EACA;AACI,aAAO,IAAIZ,oBAAJ,CAAyBG,IAAzB,CAAP;AACH;;AAED,WAAO,IAAIN,sBAAJ,CAA2BM,IAA3B,CAAP;AACH;AAlBqB,CAA1B;AAsBAU,MAAM,CAACC,OAAP,GAAiBb,mBAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @author       Pavle Goloskokovic <pgoloskokovic@gmail.com> (http://prunegames.com)\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar HTML5AudioSoundManager = require('./html5/HTML5AudioSoundManager');\r\nvar NoAudioSoundManager = require('./noaudio/NoAudioSoundManager');\r\nvar WebAudioSoundManager = require('./webaudio/WebAudioSoundManager');\r\n\r\n/**\r\n * Creates a Web Audio, HTML5 Audio or No Audio Sound Manager based on config and device settings.\r\n *\r\n * Be aware of https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\r\n *\r\n * @function Phaser.Sound.SoundManagerCreator\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Game} game - Reference to the current game instance.\r\n * \r\n * @return {(Phaser.Sound.HTML5AudioSoundManager|Phaser.Sound.WebAudioSoundManager|Phaser.Sound.NoAudioSoundManager)} The Sound Manager instance that was created.\r\n */\r\nvar SoundManagerCreator = {\r\n\r\n    create: function (game)\r\n    {\r\n        var audioConfig = game.config.audio;\r\n        var deviceAudio = game.device.audio;\r\n\r\n        if ((audioConfig && audioConfig.noAudio) || (!deviceAudio.webAudio && !deviceAudio.audioData))\r\n        {\r\n            return new NoAudioSoundManager(game);\r\n        }\r\n\r\n        if (deviceAudio.webAudio && !(audioConfig && audioConfig.disableWebAudio))\r\n        {\r\n            return new WebAudioSoundManager(game);\r\n        }\r\n\r\n        return new HTML5AudioSoundManager(game);\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = SoundManagerCreator;\r\n"]},"metadata":{},"sourceType":"script"}