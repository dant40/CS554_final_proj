{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n//  These properties get injected into the Scene and map to local systems\n//  The map value is the property that is injected into the Scene, the key is the Scene.Systems reference.\n//  These defaults can be modified via the Scene config object\n//          var config = {\n//            map: {\n//                add: 'makeStuff',\n//                load: 'loader'\n//            }\n//        };\nvar InjectionMap = {\n  game: 'game',\n  anims: 'anims',\n  cache: 'cache',\n  plugins: 'plugins',\n  registry: 'registry',\n  scale: 'scale',\n  sound: 'sound',\n  textures: 'textures',\n  events: 'events',\n  cameras: 'cameras',\n  add: 'add',\n  make: 'make',\n  scenePlugin: 'scene',\n  displayList: 'children',\n  lights: 'lights',\n  data: 'data',\n  input: 'input',\n  load: 'load',\n  time: 'time',\n  tweens: 'tweens',\n  arcadePhysics: 'physics',\n  impactPhysics: 'impact',\n  matterPhysics: 'matter'\n};\n\nif (typeof PLUGIN_CAMERA3D) {\n  InjectionMap.cameras3d = 'cameras3d';\n}\n\nif (typeof PLUGIN_FBINSTANT) {\n  InjectionMap.facebook = 'facebook';\n}\n\nmodule.exports = InjectionMap;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/scene/InjectionMap.js"],"names":["InjectionMap","game","anims","cache","plugins","registry","scale","sound","textures","events","cameras","add","make","scenePlugin","displayList","lights","data","input","load","time","tweens","arcadePhysics","impactPhysics","matterPhysics","PLUGIN_CAMERA3D","cameras3d","PLUGIN_FBINSTANT","facebook","module","exports"],"mappings":"AAAA;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,YAAY,GAAG;AAEfC,EAAAA,IAAI,EAAE,MAFS;AAIfC,EAAAA,KAAK,EAAE,OAJQ;AAKfC,EAAAA,KAAK,EAAE,OALQ;AAMfC,EAAAA,OAAO,EAAE,SANM;AAOfC,EAAAA,QAAQ,EAAE,UAPK;AAQfC,EAAAA,KAAK,EAAE,OARQ;AASfC,EAAAA,KAAK,EAAE,OATQ;AAUfC,EAAAA,QAAQ,EAAE,UAVK;AAYfC,EAAAA,MAAM,EAAE,QAZO;AAafC,EAAAA,OAAO,EAAE,SAbM;AAcfC,EAAAA,GAAG,EAAE,KAdU;AAefC,EAAAA,IAAI,EAAE,MAfS;AAgBfC,EAAAA,WAAW,EAAE,OAhBE;AAiBfC,EAAAA,WAAW,EAAE,UAjBE;AAkBfC,EAAAA,MAAM,EAAE,QAlBO;AAoBfC,EAAAA,IAAI,EAAE,MApBS;AAqBfC,EAAAA,KAAK,EAAE,OArBQ;AAsBfC,EAAAA,IAAI,EAAE,MAtBS;AAuBfC,EAAAA,IAAI,EAAE,MAvBS;AAwBfC,EAAAA,MAAM,EAAE,QAxBO;AA0BfC,EAAAA,aAAa,EAAE,SA1BA;AA2BfC,EAAAA,aAAa,EAAE,QA3BA;AA4BfC,EAAAA,aAAa,EAAE;AA5BA,CAAnB;;AAgCA,IAAI,OAAOC,eAAX,EACA;AACIxB,EAAAA,YAAY,CAACyB,SAAb,GAAyB,WAAzB;AACH;;AAED,IAAI,OAAOC,gBAAX,EACA;AACI1B,EAAAA,YAAY,CAAC2B,QAAb,GAAwB,UAAxB;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiB7B,YAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  These properties get injected into the Scene and map to local systems\r\n//  The map value is the property that is injected into the Scene, the key is the Scene.Systems reference.\r\n//  These defaults can be modified via the Scene config object\r\n//          var config = {\r\n//            map: {\r\n//                add: 'makeStuff',\r\n//                load: 'loader'\r\n//            }\r\n//        };\r\n\r\nvar InjectionMap = {\r\n\r\n    game: 'game',\r\n\r\n    anims: 'anims',\r\n    cache: 'cache',\r\n    plugins: 'plugins',\r\n    registry: 'registry',\r\n    scale: 'scale',\r\n    sound: 'sound',\r\n    textures: 'textures',\r\n\r\n    events: 'events',\r\n    cameras: 'cameras',\r\n    add: 'add',\r\n    make: 'make',\r\n    scenePlugin: 'scene',\r\n    displayList: 'children',\r\n    lights: 'lights',\r\n\r\n    data: 'data',\r\n    input: 'input',\r\n    load: 'load',\r\n    time: 'time',\r\n    tweens: 'tweens',\r\n\r\n    arcadePhysics: 'physics',\r\n    impactPhysics: 'impact',\r\n    matterPhysics: 'matter'\r\n\r\n};\r\n\r\nif (typeof PLUGIN_CAMERA3D)\r\n{\r\n    InjectionMap.cameras3d = 'cameras3d';\r\n}\r\n\r\nif (typeof PLUGIN_FBINSTANT)\r\n{\r\n    InjectionMap.facebook = 'facebook';\r\n}\r\n\r\nmodule.exports = InjectionMap;\r\n"]},"metadata":{},"sourceType":"script"}