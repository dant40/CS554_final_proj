{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * The Impact Gravity component.\r\n * Should be applied as a mixin.\r\n *\r\n * @namespace Phaser.Physics.Impact.Components.Gravity\r\n * @since 3.0.0\r\n */\nvar Gravity = {\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.Gravity#setGravity\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - [description]\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setGravity: function (value) {\n    this.body.gravityFactor = value;\n    return this;\n  },\n\n  /**\r\n   * [description]\r\n   *\r\n   * @name Phaser.Physics.Impact.Components.Gravity#gravity\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  gravity: {\n    get: function () {\n      return this.body.gravityFactor;\n    },\n    set: function (value) {\n      this.body.gravityFactor = value;\n    }\n  }\n};\nmodule.exports = Gravity;","map":{"version":3,"sources":["/mnt/c/Users/kubec/Desktop/Projects/Projects/Phaser/phaser_practice/node_modules/phaser/src/physics/impact/components/Gravity.js"],"names":["Gravity","setGravity","value","body","gravityFactor","gravity","get","set","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;;AAOA,IAAIA,OAAO,GAAG;AAEV;;;;;;;;;;AAUAC,EAAAA,UAAU,EAAE,UAAUC,KAAV,EACZ;AACI,SAAKC,IAAL,CAAUC,aAAV,GAA0BF,KAA1B;AAEA,WAAO,IAAP;AACH,GAjBS;;AAmBV;;;;;;;AAOAG,EAAAA,OAAO,EAAE;AAELC,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKH,IAAL,CAAUC,aAAjB;AACH,KALI;AAOLG,IAAAA,GAAG,EAAE,UAAUL,KAAV,EACL;AACI,WAAKC,IAAL,CAAUC,aAAV,GAA0BF,KAA1B;AACH;AAVI;AA1BC,CAAd;AA0CAM,MAAM,CAACC,OAAP,GAAiBT,OAAjB","sourcesContent":["/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Impact Gravity component.\r\n * Should be applied as a mixin.\r\n *\r\n * @namespace Phaser.Physics.Impact.Components.Gravity\r\n * @since 3.0.0\r\n */\r\nvar Gravity = {\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Physics.Impact.Components.Gravity#setGravity\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - [description]\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setGravity: function (value)\r\n    {\r\n        this.body.gravityFactor = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Physics.Impact.Components.Gravity#gravity\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    gravity: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.body.gravityFactor;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.body.gravityFactor = value;\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Gravity;\r\n"]},"metadata":{},"sourceType":"script"}